{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":26,"index":26}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"]}},{"name":"react-native-web/dist/exports/PanResponder","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"NacIK8K4Ix298JTjZY1MHzOjiV0=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.moveShouldSetPanResponder = moveShouldSetPanResponder;\n  exports.shouldDismissView = shouldDismissView;\n  exports.startShouldSetPanResponder = startShouldSetPanResponder;\n  exports.usePanResponder = usePanResponder;\n  var _react = _interopRequireDefault(require(_dependencyMap[1], \"react\"));\n  var _PanResponder = _interopRequireDefault(require(_dependencyMap[2], \"react-native-web/dist/exports/PanResponder\"));\n  function startShouldSetPanResponder() {\n    return true;\n  }\n  function moveShouldSetPanResponder(_event, gesture) {\n    const {\n      dx,\n      dy\n    } = gesture;\n    // Fixes onPress handler\n    // https://github.com/calintamas/react-native-toast-message/issues/113\n    const offset = 2;\n    return Math.abs(dx) > offset || Math.abs(dy) > offset;\n  }\n  function shouldDismissView(newAnimatedValue, gesture) {\n    const dismissThreshold = 0.65;\n    const {\n      vy,\n      dy\n    } = gesture;\n    return newAnimatedValue <= dismissThreshold || Math.abs(vy) >= dismissThreshold && dy < 0;\n  }\n  function usePanResponder({\n    animatedValue,\n    computeNewAnimatedValueForGesture,\n    onDismiss,\n    onRestore,\n    onStart,\n    onEnd,\n    disable\n  }) {\n    const onGrant = _react.default.useCallback(() => {\n      if (disable) return;\n      onStart();\n    }, [onStart, disable]);\n    const onMove = _react.default.useCallback((_event, gesture) => {\n      if (disable) return;\n      const newAnimatedValue = computeNewAnimatedValueForGesture(gesture);\n      animatedValue.current?.setValue(newAnimatedValue);\n    }, [animatedValue, computeNewAnimatedValueForGesture, disable]);\n    const onRelease = _react.default.useCallback((_event, gesture) => {\n      if (disable) return;\n      const newAnimatedValue = computeNewAnimatedValueForGesture(gesture);\n      onEnd();\n      if (shouldDismissView(newAnimatedValue, gesture)) {\n        onDismiss();\n      } else {\n        onRestore();\n      }\n    }, [computeNewAnimatedValueForGesture, onEnd, onDismiss, onRestore, disable]);\n    const panResponder = _react.default.useMemo(() => _PanResponder.default.create({\n      onStartShouldSetPanResponder: startShouldSetPanResponder,\n      onPanResponderGrant: onGrant,\n      onMoveShouldSetPanResponder: moveShouldSetPanResponder,\n      onMoveShouldSetPanResponderCapture: moveShouldSetPanResponder,\n      onPanResponderMove: onMove,\n      onPanResponderRelease: onRelease\n    }), [onMove, onRelease, onGrant]);\n    return {\n      panResponder,\n      onGrant,\n      onMove,\n      onRelease\n    };\n  }\n});","lineCount":76,"map":[[10,2,1,0],[10,6,1,0,"_react"],[10,12,1,0],[10,15,1,0,"_interopRequireDefault"],[10,37,1,0],[10,38,1,0,"require"],[10,45,1,0],[10,46,1,0,"_dependencyMap"],[10,60,1,0],[11,2,1,26],[11,6,1,26,"_PanResponder"],[11,19,1,26],[11,22,1,26,"_interopRequireDefault"],[11,44,1,26],[11,45,1,26,"require"],[11,52,1,26],[11,53,1,26,"_dependencyMap"],[11,67,1,26],[12,2,3,7],[12,11,3,16,"startShouldSetPanResponder"],[12,37,3,42,"startShouldSetPanResponder"],[12,38,3,42],[12,40,3,45],[13,4,4,4],[13,11,4,11],[13,15,4,15],[14,2,5,0],[15,2,6,7],[15,11,6,16,"moveShouldSetPanResponder"],[15,36,6,41,"moveShouldSetPanResponder"],[15,37,6,42,"_event"],[15,43,6,48],[15,45,6,50,"gesture"],[15,52,6,57],[15,54,6,59],[16,4,7,4],[16,10,7,10],[17,6,7,12,"dx"],[17,8,7,14],[18,6,7,16,"dy"],[19,4,7,19],[19,5,7,20],[19,8,7,23,"gesture"],[19,15,7,30],[20,4,8,4],[21,4,9,4],[22,4,10,4],[22,10,10,10,"offset"],[22,16,10,16],[22,19,10,19],[22,20,10,20],[23,4,11,4],[23,11,11,11,"Math"],[23,15,11,15],[23,16,11,16,"abs"],[23,19,11,19],[23,20,11,20,"dx"],[23,22,11,22],[23,23,11,23],[23,26,11,26,"offset"],[23,32,11,32],[23,36,11,36,"Math"],[23,40,11,40],[23,41,11,41,"abs"],[23,44,11,44],[23,45,11,45,"dy"],[23,47,11,47],[23,48,11,48],[23,51,11,51,"offset"],[23,57,11,57],[24,2,12,0],[25,2,13,7],[25,11,13,16,"shouldDismissView"],[25,28,13,33,"shouldDismissView"],[25,29,13,34,"newAnimatedValue"],[25,45,13,50],[25,47,13,52,"gesture"],[25,54,13,59],[25,56,13,61],[26,4,14,4],[26,10,14,10,"dismissThreshold"],[26,26,14,26],[26,29,14,29],[26,33,14,33],[27,4,15,4],[27,10,15,10],[28,6,15,12,"vy"],[28,8,15,14],[29,6,15,16,"dy"],[30,4,15,19],[30,5,15,20],[30,8,15,23,"gesture"],[30,15,15,30],[31,4,16,4],[31,11,16,12,"newAnimatedValue"],[31,27,16,28],[31,31,16,32,"dismissThreshold"],[31,47,16,48],[31,51,17,9,"Math"],[31,55,17,13],[31,56,17,14,"abs"],[31,59,17,17],[31,60,17,18,"vy"],[31,62,17,20],[31,63,17,21],[31,67,17,25,"dismissThreshold"],[31,83,17,41],[31,87,17,45,"dy"],[31,89,17,47],[31,92,17,50],[31,93,17,52],[32,2,18,0],[33,2,19,7],[33,11,19,16,"usePanResponder"],[33,26,19,31,"usePanResponder"],[33,27,19,32],[34,4,19,34,"animatedValue"],[34,17,19,47],[35,4,19,49,"computeNewAnimatedValueForGesture"],[35,37,19,82],[36,4,19,84,"onDismiss"],[36,13,19,93],[37,4,19,95,"onRestore"],[37,13,19,104],[38,4,19,106,"onStart"],[38,11,19,113],[39,4,19,115,"onEnd"],[39,9,19,120],[40,4,19,122,"disable"],[41,2,19,130],[41,3,19,131],[41,5,19,133],[42,4,20,4],[42,10,20,10,"onGrant"],[42,17,20,17],[42,20,20,20,"React"],[42,34,20,25],[42,35,20,26,"useCallback"],[42,46,20,37],[42,47,20,38],[42,53,20,44],[43,6,21,8],[43,10,21,12,"disable"],[43,17,21,19],[43,19,22,12],[44,6,23,8,"onStart"],[44,13,23,15],[44,14,23,16],[44,15,23,17],[45,4,24,4],[45,5,24,5],[45,7,24,7],[45,8,24,8,"onStart"],[45,15,24,15],[45,17,24,17,"disable"],[45,24,24,24],[45,25,24,25],[45,26,24,26],[46,4,25,4],[46,10,25,10,"onMove"],[46,16,25,16],[46,19,25,19,"React"],[46,33,25,24],[46,34,25,25,"useCallback"],[46,45,25,36],[46,46,25,37],[46,47,25,38,"_event"],[46,53,25,44],[46,55,25,46,"gesture"],[46,62,25,53],[46,67,25,58],[47,6,26,8],[47,10,26,12,"disable"],[47,17,26,19],[47,19,27,12],[48,6,28,8],[48,12,28,14,"newAnimatedValue"],[48,28,28,30],[48,31,28,33,"computeNewAnimatedValueForGesture"],[48,64,28,66],[48,65,28,67,"gesture"],[48,72,28,74],[48,73,28,75],[49,6,29,8,"animatedValue"],[49,19,29,21],[49,20,29,22,"current"],[49,27,29,29],[49,29,29,31,"setValue"],[49,37,29,39],[49,38,29,40,"newAnimatedValue"],[49,54,29,56],[49,55,29,57],[50,4,30,4],[50,5,30,5],[50,7,30,7],[50,8,30,8,"animatedValue"],[50,21,30,21],[50,23,30,23,"computeNewAnimatedValueForGesture"],[50,56,30,56],[50,58,30,58,"disable"],[50,65,30,65],[50,66,30,66],[50,67,30,67],[51,4,31,4],[51,10,31,10,"onRelease"],[51,19,31,19],[51,22,31,22,"React"],[51,36,31,27],[51,37,31,28,"useCallback"],[51,48,31,39],[51,49,31,40],[51,50,31,41,"_event"],[51,56,31,47],[51,58,31,49,"gesture"],[51,65,31,56],[51,70,31,61],[52,6,32,8],[52,10,32,12,"disable"],[52,17,32,19],[52,19,33,12],[53,6,34,8],[53,12,34,14,"newAnimatedValue"],[53,28,34,30],[53,31,34,33,"computeNewAnimatedValueForGesture"],[53,64,34,66],[53,65,34,67,"gesture"],[53,72,34,74],[53,73,34,75],[54,6,35,8,"onEnd"],[54,11,35,13],[54,12,35,14],[54,13,35,15],[55,6,36,8],[55,10,36,12,"shouldDismissView"],[55,27,36,29],[55,28,36,30,"newAnimatedValue"],[55,44,36,46],[55,46,36,48,"gesture"],[55,53,36,55],[55,54,36,56],[55,56,36,58],[56,8,37,12,"onDismiss"],[56,17,37,21],[56,18,37,22],[56,19,37,23],[57,6,38,8],[57,7,38,9],[57,13,39,13],[58,8,40,12,"onRestore"],[58,17,40,21],[58,18,40,22],[58,19,40,23],[59,6,41,8],[60,4,42,4],[60,5,42,5],[60,7,42,7],[60,8,42,8,"computeNewAnimatedValueForGesture"],[60,41,42,41],[60,43,42,43,"onEnd"],[60,48,42,48],[60,50,42,50,"onDismiss"],[60,59,42,59],[60,61,42,61,"onRestore"],[60,70,42,70],[60,72,42,72,"disable"],[60,79,42,79],[60,80,42,80],[60,81,42,81],[61,4,43,4],[61,10,43,10,"panResponder"],[61,22,43,22],[61,25,43,25,"React"],[61,39,43,30],[61,40,43,31,"useMemo"],[61,47,43,38],[61,48,43,39],[61,54,43,45,"PanResponder"],[61,75,43,57],[61,76,43,58,"create"],[61,82,43,64],[61,83,43,65],[62,6,44,8,"onStartShouldSetPanResponder"],[62,34,44,36],[62,36,44,38,"startShouldSetPanResponder"],[62,62,44,64],[63,6,45,8,"onPanResponderGrant"],[63,25,45,27],[63,27,45,29,"onGrant"],[63,34,45,36],[64,6,46,8,"onMoveShouldSetPanResponder"],[64,33,46,35],[64,35,46,37,"moveShouldSetPanResponder"],[64,60,46,62],[65,6,47,8,"onMoveShouldSetPanResponderCapture"],[65,40,47,42],[65,42,47,44,"moveShouldSetPanResponder"],[65,67,47,69],[66,6,48,8,"onPanResponderMove"],[66,24,48,26],[66,26,48,28,"onMove"],[66,32,48,34],[67,6,49,8,"onPanResponderRelease"],[67,27,49,29],[67,29,49,31,"onRelease"],[68,4,50,4],[68,5,50,5],[68,6,50,6],[68,8,50,8],[68,9,50,9,"onMove"],[68,15,50,15],[68,17,50,17,"onRelease"],[68,26,50,26],[68,28,50,28,"onGrant"],[68,35,50,35],[68,36,50,36],[68,37,50,37],[69,4,51,4],[69,11,51,11],[70,6,52,8,"panResponder"],[70,18,52,20],[71,6,53,8,"onGrant"],[71,13,53,15],[72,6,54,8,"onMove"],[72,12,54,14],[73,6,55,8,"onRelease"],[74,4,56,4],[74,5,56,5],[75,2,57,0],[76,0,57,1],[76,3]],"functionMap":{"names":["<global>","startShouldSetPanResponder","moveShouldSetPanResponder","shouldDismissView","usePanResponder","onGrant","onMove","onRelease","React.useMemo$argument_0"],"mappings":"AAA;OCE;CDE;OEC;CFM;OGC;CHK;OIC;sCCC;KDI;qCEC;KFK;wCGC;KHW;uCIC;MJO;CJO"}},"type":"js/module"}]}