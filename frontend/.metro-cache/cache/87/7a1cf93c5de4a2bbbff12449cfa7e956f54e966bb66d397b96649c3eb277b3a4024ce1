{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":286},"end":{"line":5,"column":31,"index":317}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"]}},{"name":"react-native-web/dist/exports/Platform","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dV3bI3NOD8bfMzaIniMaFGy/nn8=","exportNames":["*"]}},{"name":"react-native-web/dist/exports/UIManager","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"7C1XCUhVWjU661dof+/eeoL/fDY=","exportNames":["*"]}},{"name":"react-native-web/dist/exports/DeviceEventEmitter","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"oyzjoDTnmzvralkBUpVLTrRSEl0=","exportNames":["*"]}},{"name":"./customDirectEventTypes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":7,"column":0,"index":390},"end":{"line":7,"column":66,"index":456}}],"key":"Ma+NL+aygNje9FkYPbYorogBWdc=","exportNames":["*"]}},{"name":"../RNGestureHandlerModule","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":8,"column":0,"index":457},"end":{"line":8,"column":63,"index":520}}],"key":"bY7FGgfi8WGOEKHKyXsenNEOYXM=","exportNames":["*"]}},{"name":"../State","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":9,"column":0,"index":521},"end":{"line":9,"column":33,"index":554}}],"key":"ISRoyBmrsYyTcSqLDCBIFNoRZWE=","exportNames":["*"]}},{"name":"./handlersRegistry","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":10,"column":0,"index":555},"end":{"line":10,"column":108,"index":663}}],"key":"icHMSVIKxbHLSdF6K64ideInyBg=","exportNames":["*"]}},{"name":"./getNextHandlerTag","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":11,"column":0,"index":664},"end":{"line":11,"column":56,"index":720}}],"key":"ASeSN4ZNwd93et71FExQyqcEKrQ=","exportNames":["*"]}},{"name":"./utils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":12,"column":0,"index":721},"end":{"line":12,"column":64,"index":785}}],"key":"fIqjJ6Rx8c7Khc/wm9kX7hQXC5I=","exportNames":["*"]}},{"name":"../findNodeHandle","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":13,"column":0,"index":786},"end":{"line":13,"column":47,"index":833}}],"key":"xyNSnMFPN/DtDOjbkd/LduwteJ8=","exportNames":["*"]}},{"name":"../utils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":14,"column":0,"index":834},"end":{"line":14,"column":81,"index":915}}],"key":"mL7nJyZhzUYx+zMcIt1cBzVuRps=","exportNames":["*"]}},{"name":"../ActionType","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":15,"column":0,"index":916},"end":{"line":15,"column":43,"index":959}}],"key":"9/RyJNk4Ge0yFKi3o3v4pSn63xw=","exportNames":["*"]}},{"name":"./PressabilityDebugView","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":16,"column":0,"index":960},"end":{"line":16,"column":64,"index":1024}}],"key":"xiOM100qt13MoYC/wKaLkt2GEAw=","exportNames":["*"]}},{"name":"../GestureHandlerRootViewContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":17,"column":0,"index":1025},"end":{"line":17,"column":77,"index":1102}}],"key":"4dFi+SgkqvO8MS5HEh2OcvBDODc=","exportNames":["*"]}},{"name":"../ghQueueMicrotask","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":18,"column":0,"index":1103},"end":{"line":18,"column":55,"index":1158}}],"key":"Ty3ERJQ4RajY8XDWg1+a8wq7RdE=","exportNames":["*"]}},{"name":"../mountRegistry","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":19,"column":0,"index":1159},"end":{"line":19,"column":49,"index":1208}}],"key":"oDeWMahf4tOBx8qk8Rg2qrQUZVM=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = createHandler;\n  var React = _interopRequireWildcard(require(_dependencyMap[1], \"react\"));\n  var _Platform = _interopRequireDefault(require(_dependencyMap[2], \"react-native-web/dist/exports/Platform\"));\n  var _UIManager = _interopRequireDefault(require(_dependencyMap[3], \"react-native-web/dist/exports/UIManager\"));\n  var _DeviceEventEmitter = _interopRequireDefault(require(_dependencyMap[4], \"react-native-web/dist/exports/DeviceEventEmitter\"));\n  var _customDirectEventTypes = require(_dependencyMap[5], \"./customDirectEventTypes\");\n  var _RNGestureHandlerModule = _interopRequireDefault(require(_dependencyMap[6], \"../RNGestureHandlerModule\"));\n  var _State = require(_dependencyMap[7], \"../State\");\n  var _handlersRegistry = require(_dependencyMap[8], \"./handlersRegistry\");\n  var _getNextHandlerTag = require(_dependencyMap[9], \"./getNextHandlerTag\");\n  var _utils = require(_dependencyMap[10], \"./utils\");\n  var _findNodeHandle = _interopRequireDefault(require(_dependencyMap[11], \"../findNodeHandle\"));\n  var _utils2 = require(_dependencyMap[12], \"../utils\");\n  var _ActionType = require(_dependencyMap[13], \"../ActionType\");\n  var _PressabilityDebugView = require(_dependencyMap[14], \"./PressabilityDebugView\");\n  var _GestureHandlerRootViewContext = _interopRequireDefault(require(_dependencyMap[15], \"../GestureHandlerRootViewContext\"));\n  var _ghQueueMicrotask = require(_dependencyMap[16], \"../ghQueueMicrotask\");\n  var _mountRegistry = require(_dependencyMap[17], \"../mountRegistry\");\n  function _interopRequireWildcard(e, t) { if (\"function\" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function (e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (const t in e) \"default\" !== t && {}.hasOwnProperty.call(e, t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, t)) && (i.get || i.set) ? o(f, t, i) : f[t] = e[t]); return f; })(e, t); }\n  var _UIManagerAny$getView, _UIManagerAny$getView2, _UIManagerAny$getCons;\n  function _defineProperty(obj, key, value) {\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    } else {\n      obj[key] = value;\n    }\n    return obj;\n  }\n  const UIManagerAny = _UIManager.default;\n  _customDirectEventTypes.customDirectEventTypes.topGestureHandlerEvent = {\n    registrationName: 'onGestureHandlerEvent'\n  };\n  const customGHEventsConfigFabricAndroid = {\n    topOnGestureHandlerEvent: {\n      registrationName: 'onGestureHandlerEvent'\n    },\n    topOnGestureHandlerStateChange: {\n      registrationName: 'onGestureHandlerStateChange'\n    }\n  };\n  const customGHEventsConfig = Object.assign({\n    onGestureHandlerEvent: {\n      registrationName: 'onGestureHandlerEvent'\n    },\n    onGestureHandlerStateChange: {\n      registrationName: 'onGestureHandlerStateChange'\n    }\n  }, (0, _utils2.isFabric)() && _Platform.default.OS === 'android' && customGHEventsConfigFabricAndroid); // Add gesture specific events to genericDirectEventTypes object exported from UIManager\n  // native module.\n  // Once new event types are registered with react it is possible to dispatch these\n  // events to all kind of native views.\n\n  UIManagerAny.genericDirectEventTypes = Object.assign({}, UIManagerAny.genericDirectEventTypes, customGHEventsConfig); // In newer versions of RN the `genericDirectEventTypes` is located in the object\n  // returned by UIManager.getViewManagerConfig('getConstants') or in older RN UIManager.getConstants(), we need to add it there as well to make\n  // it compatible with RN 61+\n\n  const UIManagerConstants = (_UIManagerAny$getView = (_UIManagerAny$getView2 = UIManagerAny.getViewManagerConfig) === null || _UIManagerAny$getView2 === void 0 ? void 0 : _UIManagerAny$getView2.call(UIManagerAny, 'getConstants')) !== null && _UIManagerAny$getView !== void 0 ? _UIManagerAny$getView : (_UIManagerAny$getCons = UIManagerAny.getConstants) === null || _UIManagerAny$getCons === void 0 ? void 0 : _UIManagerAny$getCons.call(UIManagerAny);\n  if (UIManagerConstants) {\n    UIManagerConstants.genericDirectEventTypes = Object.assign({}, UIManagerConstants.genericDirectEventTypes, customGHEventsConfig);\n  } // Wrap JS responder calls and notify gesture handler manager\n\n  const {\n    setJSResponder: oldSetJSResponder = () => {// no-op\n    },\n    clearJSResponder: oldClearJSResponder = () => {// no-op\n    }\n  } = UIManagerAny;\n  UIManagerAny.setJSResponder = (tag, blockNativeResponder) => {\n    _RNGestureHandlerModule.default.handleSetJSResponder(tag, blockNativeResponder);\n    oldSetJSResponder(tag, blockNativeResponder);\n  };\n  UIManagerAny.clearJSResponder = () => {\n    _RNGestureHandlerModule.default.handleClearJSResponder();\n    oldClearJSResponder();\n  };\n  let allowTouches = true;\n  const DEV_ON_ANDROID = __DEV__ && _Platform.default.OS === 'android'; // Toggled inspector blocks touch events in order to allow inspecting on Android\n  // This needs to be a global variable in order to set initial state for `allowTouches` property in Handler component\n\n  if (DEV_ON_ANDROID) {\n    _DeviceEventEmitter.default.addListener('toggleElementInspector', () => {\n      allowTouches = !allowTouches;\n    });\n  }\n  function hasUnresolvedRefs(props) {\n    // TODO(TS) - add type for extract arg\n    const extract = refs => {\n      if (!Array.isArray(refs)) {\n        return refs && refs.current === null;\n      }\n      return refs.some(r => r && r.current === null);\n    };\n    return extract(props['simultaneousHandlers']) || extract(props['waitFor']);\n  }\n  const stateToPropMappings = {\n    [_State.State.UNDETERMINED]: undefined,\n    [_State.State.BEGAN]: 'onBegan',\n    [_State.State.FAILED]: 'onFailed',\n    [_State.State.CANCELLED]: 'onCancelled',\n    [_State.State.ACTIVE]: 'onActivated',\n    [_State.State.END]: 'onEnded'\n  };\n  const UNRESOLVED_REFS_RETRY_LIMIT = 1; // TODO(TS) - make sure that BaseGestureHandlerProps doesn't need other generic parameter to work with custom properties.\n\n  function createHandler({\n    name,\n    allowedProps = [],\n    config = {},\n    transformProps,\n    customNativeProps = []\n  }) {\n    class Handler extends React.Component {\n      constructor(props) {\n        super(props);\n        _defineProperty(this, \"handlerTag\", void 0);\n        _defineProperty(this, \"config\", void 0);\n        _defineProperty(this, \"propsRef\", void 0);\n        _defineProperty(this, \"isMountedRef\", void 0);\n        _defineProperty(this, \"viewNode\", void 0);\n        _defineProperty(this, \"viewTag\", void 0);\n        _defineProperty(this, \"inspectorToggleListener\", void 0);\n        _defineProperty(this, \"onGestureHandlerEvent\", event => {\n          if (event.nativeEvent.handlerTag === this.handlerTag) {\n            if (typeof this.props.onGestureEvent === 'function') {\n              var _this$props$onGesture, _this$props;\n              (_this$props$onGesture = (_this$props = this.props).onGestureEvent) === null || _this$props$onGesture === void 0 ? void 0 : _this$props$onGesture.call(_this$props, event);\n            }\n          } else {\n            var _this$props$onGesture2, _this$props2;\n            (_this$props$onGesture2 = (_this$props2 = this.props).onGestureHandlerEvent) === null || _this$props$onGesture2 === void 0 ? void 0 : _this$props$onGesture2.call(_this$props2, event);\n          }\n        });\n        _defineProperty(this, \"onGestureHandlerStateChange\", event => {\n          if (event.nativeEvent.handlerTag === this.handlerTag) {\n            if (typeof this.props.onHandlerStateChange === 'function') {\n              var _this$props$onHandler, _this$props3;\n              (_this$props$onHandler = (_this$props3 = this.props).onHandlerStateChange) === null || _this$props$onHandler === void 0 ? void 0 : _this$props$onHandler.call(_this$props3, event);\n            }\n            const state = event.nativeEvent.state;\n            const stateEventName = stateToPropMappings[state];\n            const eventHandler = stateEventName && this.props[stateEventName];\n            if (eventHandler && typeof eventHandler === 'function') {\n              eventHandler(event);\n            }\n          } else {\n            var _this$props$onGesture3, _this$props4;\n            (_this$props$onGesture3 = (_this$props4 = this.props).onGestureHandlerStateChange) === null || _this$props$onGesture3 === void 0 ? void 0 : _this$props$onGesture3.call(_this$props4, event);\n          }\n        });\n        _defineProperty(this, \"refHandler\", node => {\n          var _props;\n          this.viewNode = node;\n          const child = React.Children.only(this.props.children); // @ts-ignore Since React 19 ref is accessible as standard prop\n          // https://react.dev/blog/2024/04/25/react-19-upgrade-guide#deprecated-element-ref\n\n          const ref = (0, _utils2.isReact19)() ? (_props = child.props) === null || _props === void 0 ? void 0 : _props.ref : child === null || child === void 0 ? void 0 : child.ref;\n          if (!ref) {\n            return;\n          }\n          if (typeof ref === 'function') {\n            ref(node);\n          } else {\n            ref.current = node;\n          }\n        });\n        _defineProperty(this, \"createGestureHandler\", newConfig => {\n          this.config = newConfig;\n          _RNGestureHandlerModule.default.createGestureHandler(name, this.handlerTag, newConfig);\n        });\n        _defineProperty(this, \"attachGestureHandler\", newViewTag => {\n          this.viewTag = newViewTag;\n          if (_Platform.default.OS === 'web') {\n            // Typecast due to dynamic resolution, attachGestureHandler should have web version signature in this branch\n            _RNGestureHandlerModule.default.attachGestureHandler(this.handlerTag, newViewTag, _ActionType.ActionType.JS_FUNCTION_OLD_API,\n            // ignored on web\n            this.propsRef);\n          } else {\n            (0, _handlersRegistry.registerOldGestureHandler)(this.handlerTag, {\n              onGestureEvent: this.onGestureHandlerEvent,\n              onGestureStateChange: this.onGestureHandlerStateChange\n            });\n            const actionType = (() => {\n              var _this$props5, _this$props6;\n              const onGestureEvent = (_this$props5 = this.props) === null || _this$props5 === void 0 ? void 0 : _this$props5.onGestureEvent;\n              const isGestureHandlerWorklet = onGestureEvent && ('current' in onGestureEvent || 'workletEventHandler' in onGestureEvent);\n              const onHandlerStateChange = (_this$props6 = this.props) === null || _this$props6 === void 0 ? void 0 : _this$props6.onHandlerStateChange;\n              const isStateChangeHandlerWorklet = onHandlerStateChange && ('current' in onHandlerStateChange || 'workletEventHandler' in onHandlerStateChange);\n              const isReanimatedHandler = isGestureHandlerWorklet || isStateChangeHandlerWorklet;\n              if (isReanimatedHandler) {\n                // Reanimated worklet\n                return _ActionType.ActionType.REANIMATED_WORKLET;\n              } else if (onGestureEvent && '__isNative' in onGestureEvent) {\n                // Animated.event with useNativeDriver: true\n                return _ActionType.ActionType.NATIVE_ANIMATED_EVENT;\n              } else {\n                // JS callback or Animated.event with useNativeDriver: false\n                return _ActionType.ActionType.JS_FUNCTION_OLD_API;\n              }\n            })();\n            _RNGestureHandlerModule.default.attachGestureHandler(this.handlerTag, newViewTag, actionType);\n          }\n          (0, _utils.scheduleFlushOperations)();\n          (0, _ghQueueMicrotask.ghQueueMicrotask)(() => {\n            _mountRegistry.MountRegistry.gestureHandlerWillMount(this);\n          });\n        });\n        _defineProperty(this, \"updateGestureHandler\", newConfig => {\n          this.config = newConfig;\n          _RNGestureHandlerModule.default.updateGestureHandler(this.handlerTag, newConfig);\n          (0, _utils.scheduleFlushOperations)();\n        });\n        this.handlerTag = (0, _getNextHandlerTag.getNextHandlerTag)();\n        this.config = {};\n        this.propsRef = /*#__PURE__*/React.createRef();\n        this.isMountedRef = /*#__PURE__*/React.createRef();\n        this.state = {\n          allowTouches\n        };\n        if (props.id) {\n          if (_handlersRegistry.handlerIDToTag[props.id] !== undefined) {\n            throw new Error(`Handler with ID \"${props.id}\" already registered`);\n          }\n          _handlersRegistry.handlerIDToTag[props.id] = this.handlerTag;\n        }\n      }\n      componentDidMount() {\n        const props = this.props;\n        this.isMountedRef.current = true;\n        if (DEV_ON_ANDROID) {\n          this.inspectorToggleListener = _DeviceEventEmitter.default.addListener('toggleElementInspector', () => {\n            this.setState(_ => ({\n              allowTouches\n            }));\n            this.update(UNRESOLVED_REFS_RETRY_LIMIT);\n          });\n        }\n        if (hasUnresolvedRefs(props)) {\n          // If there are unresolved refs (e.g. \".current\" has not yet been set)\n          // passed as `simultaneousHandlers` or `waitFor`, we enqueue a call to\n          // _update method that will try to update native handler props using\n          // queueMicrotask. This makes it so update() function gets called after all\n          // react components are mounted and we expect the missing ref object to\n          // be resolved by then.\n          (0, _ghQueueMicrotask.ghQueueMicrotask)(() => {\n            this.update(UNRESOLVED_REFS_RETRY_LIMIT);\n          });\n        }\n        this.createGestureHandler((0, _utils.filterConfig)(transformProps ? transformProps(this.props) : this.props, [...allowedProps, ...customNativeProps], config));\n        if (!this.viewNode) {\n          throw new Error(`[Gesture Handler] Failed to obtain view for ${Handler.displayName}. Note that old API doesn't support functional components.`);\n        }\n        this.attachGestureHandler((0, _findNodeHandle.default)(this.viewNode)); // TODO(TS) - check if this can be null\n      }\n      componentDidUpdate() {\n        const viewTag = (0, _findNodeHandle.default)(this.viewNode);\n        if (this.viewTag !== viewTag) {\n          this.attachGestureHandler(viewTag); // TODO(TS) - check interaction between _viewTag & findNodeHandle\n        }\n        this.update(UNRESOLVED_REFS_RETRY_LIMIT);\n      }\n      componentWillUnmount() {\n        var _this$inspectorToggle;\n        (_this$inspectorToggle = this.inspectorToggleListener) === null || _this$inspectorToggle === void 0 ? void 0 : _this$inspectorToggle.remove();\n        this.isMountedRef.current = false;\n        if (_Platform.default.OS !== 'web') {\n          (0, _handlersRegistry.unregisterOldGestureHandler)(this.handlerTag);\n        }\n        _RNGestureHandlerModule.default.dropGestureHandler(this.handlerTag);\n        (0, _utils.scheduleFlushOperations)(); // We can't use this.props.id directly due to TS generic type narrowing bug, see https://github.com/microsoft/TypeScript/issues/13995 for more context\n\n        const handlerID = this.props.id;\n        if (handlerID) {\n          // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n          delete _handlersRegistry.handlerIDToTag[handlerID];\n        }\n        _mountRegistry.MountRegistry.gestureHandlerWillUnmount(this);\n      }\n      update(remainingTries) {\n        if (!this.isMountedRef.current) {\n          return;\n        }\n        const props = this.props; // When ref is set via a function i.e. `ref={(r) => refObject.current = r}` instead of\n        // `ref={refObject}` it's possible that it won't be resolved in time. Seems like trying\n        // again is easy enough fix.\n\n        if (hasUnresolvedRefs(props) && remainingTries > 0) {\n          (0, _ghQueueMicrotask.ghQueueMicrotask)(() => {\n            this.update(remainingTries - 1);\n          });\n        } else {\n          const newConfig = (0, _utils.filterConfig)(transformProps ? transformProps(this.props) : this.props, [...allowedProps, ...customNativeProps], config);\n          if (!(0, _utils2.deepEqual)(this.config, newConfig)) {\n            this.updateGestureHandler(newConfig);\n          }\n        }\n      }\n      setNativeProps(updates) {\n        const mergedProps = Object.assign({}, this.props, updates);\n        const newConfig = (0, _utils.filterConfig)(transformProps ? transformProps(mergedProps) : mergedProps, [...allowedProps, ...customNativeProps], config);\n        this.updateGestureHandler(newConfig);\n      }\n      render() {\n        var _this$props$testID;\n        if (__DEV__ && !this.context && !(0, _utils2.isTestEnv)() && _Platform.default.OS !== 'web') {\n          throw new Error(name + ' must be used as a descendant of GestureHandlerRootView. Otherwise the gestures will not be recognized. See https://docs.swmansion.com/react-native-gesture-handler/docs/installation for more details.');\n        }\n        let gestureEventHandler = this.onGestureHandlerEvent; // Another instance of https://github.com/microsoft/TypeScript/issues/13995\n\n        const {\n          onGestureEvent,\n          onGestureHandlerEvent\n        } = this.props;\n        if (onGestureEvent && typeof onGestureEvent !== 'function') {\n          // If it's not a method it should be an native Animated.event\n          // object. We set it directly as the handler for the view\n          // In this case nested handlers are not going to be supported\n          if (onGestureHandlerEvent) {\n            throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n          }\n          gestureEventHandler = onGestureEvent;\n        } else {\n          if (onGestureHandlerEvent && typeof onGestureHandlerEvent !== 'function') {\n            throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n          }\n        }\n        let gestureStateEventHandler = this.onGestureHandlerStateChange; // Another instance of https://github.com/microsoft/TypeScript/issues/13995\n\n        const {\n          onHandlerStateChange,\n          onGestureHandlerStateChange\n        } = this.props;\n        if (onHandlerStateChange && typeof onHandlerStateChange !== 'function') {\n          // If it's not a method it should be an native Animated.event\n          // object. We set it directly as the handler for the view\n          // In this case nested handlers are not going to be supported\n          if (onGestureHandlerStateChange) {\n            throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n          }\n          gestureStateEventHandler = onHandlerStateChange;\n        } else {\n          if (onGestureHandlerStateChange && typeof onGestureHandlerStateChange !== 'function') {\n            throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n          }\n        }\n        const events = {\n          onGestureHandlerEvent: this.state.allowTouches ? gestureEventHandler : undefined,\n          onGestureHandlerStateChange: this.state.allowTouches ? gestureStateEventHandler : undefined\n        };\n        this.propsRef.current = events;\n        let child = null;\n        try {\n          child = React.Children.only(this.props.children);\n        } catch (e) {\n          throw new Error((0, _utils2.tagMessage)(`${name} got more than one view as a child. If you want the gesture to work on multiple views, wrap them with a common parent and attach the gesture to that view.`));\n        }\n        let grandChildren = child.props.children;\n        if (__DEV__ && child.type && (child.type === 'RNGestureHandlerButton' || child.type.name === 'View' || child.type.displayName === 'View')) {\n          grandChildren = React.Children.toArray(grandChildren);\n          grandChildren.push(/*#__PURE__*/React.createElement(_PressabilityDebugView.PressabilityDebugView, {\n            key: \"pressabilityDebugView\",\n            color: \"mediumspringgreen\",\n            hitSlop: child.props.hitSlop\n          }));\n        }\n        return /*#__PURE__*/React.cloneElement(child, Object.assign({\n          ref: this.refHandler,\n          collapsable: false\n        }, (0, _utils2.isTestEnv)() ? {\n          handlerType: name,\n          handlerTag: this.handlerTag,\n          enabled: this.props.enabled\n        } : {}, {\n          testID: (_this$props$testID = this.props.testID) !== null && _this$props$testID !== void 0 ? _this$props$testID : child.props.testID\n        }, events), grandChildren);\n      }\n    }\n    _defineProperty(Handler, \"displayName\", name);\n    _defineProperty(Handler, \"contextType\", _GestureHandlerRootViewContext.default);\n    return Handler;\n  }\n});","lineCount":391,"map":[[7,2,5,0],[7,6,5,0,"React"],[7,11,5,0],[7,14,5,0,"_interopRequireWildcard"],[7,37,5,0],[7,38,5,0,"require"],[7,45,5,0],[7,46,5,0,"_dependencyMap"],[7,60,5,0],[8,2,5,31],[8,6,5,31,"_Platform"],[8,15,5,31],[8,18,5,31,"_interopRequireDefault"],[8,40,5,31],[8,41,5,31,"require"],[8,48,5,31],[8,49,5,31,"_dependencyMap"],[8,63,5,31],[9,2,5,31],[9,6,5,31,"_UIManager"],[9,16,5,31],[9,19,5,31,"_interopRequireDefault"],[9,41,5,31],[9,42,5,31,"require"],[9,49,5,31],[9,50,5,31,"_dependencyMap"],[9,64,5,31],[10,2,5,31],[10,6,5,31,"_DeviceEventEmitter"],[10,25,5,31],[10,28,5,31,"_interopRequireDefault"],[10,50,5,31],[10,51,5,31,"require"],[10,58,5,31],[10,59,5,31,"_dependencyMap"],[10,73,5,31],[11,2,7,0],[11,6,7,0,"_customDirectEventTypes"],[11,29,7,0],[11,32,7,0,"require"],[11,39,7,0],[11,40,7,0,"_dependencyMap"],[11,54,7,0],[12,2,8,0],[12,6,8,0,"_RNGestureHandlerModule"],[12,29,8,0],[12,32,8,0,"_interopRequireDefault"],[12,54,8,0],[12,55,8,0,"require"],[12,62,8,0],[12,63,8,0,"_dependencyMap"],[12,77,8,0],[13,2,9,0],[13,6,9,0,"_State"],[13,12,9,0],[13,15,9,0,"require"],[13,22,9,0],[13,23,9,0,"_dependencyMap"],[13,37,9,0],[14,2,10,0],[14,6,10,0,"_handlersRegistry"],[14,23,10,0],[14,26,10,0,"require"],[14,33,10,0],[14,34,10,0,"_dependencyMap"],[14,48,10,0],[15,2,11,0],[15,6,11,0,"_getNextHandlerTag"],[15,24,11,0],[15,27,11,0,"require"],[15,34,11,0],[15,35,11,0,"_dependencyMap"],[15,49,11,0],[16,2,12,0],[16,6,12,0,"_utils"],[16,12,12,0],[16,15,12,0,"require"],[16,22,12,0],[16,23,12,0,"_dependencyMap"],[16,37,12,0],[17,2,13,0],[17,6,13,0,"_findNodeHandle"],[17,21,13,0],[17,24,13,0,"_interopRequireDefault"],[17,46,13,0],[17,47,13,0,"require"],[17,54,13,0],[17,55,13,0,"_dependencyMap"],[17,69,13,0],[18,2,14,0],[18,6,14,0,"_utils2"],[18,13,14,0],[18,16,14,0,"require"],[18,23,14,0],[18,24,14,0,"_dependencyMap"],[18,38,14,0],[19,2,15,0],[19,6,15,0,"_ActionType"],[19,17,15,0],[19,20,15,0,"require"],[19,27,15,0],[19,28,15,0,"_dependencyMap"],[19,42,15,0],[20,2,16,0],[20,6,16,0,"_PressabilityDebugView"],[20,28,16,0],[20,31,16,0,"require"],[20,38,16,0],[20,39,16,0,"_dependencyMap"],[20,53,16,0],[21,2,17,0],[21,6,17,0,"_GestureHandlerRootViewContext"],[21,36,17,0],[21,39,17,0,"_interopRequireDefault"],[21,61,17,0],[21,62,17,0,"require"],[21,69,17,0],[21,70,17,0,"_dependencyMap"],[21,84,17,0],[22,2,18,0],[22,6,18,0,"_ghQueueMicrotask"],[22,23,18,0],[22,26,18,0,"require"],[22,33,18,0],[22,34,18,0,"_dependencyMap"],[22,48,18,0],[23,2,19,0],[23,6,19,0,"_mountRegistry"],[23,20,19,0],[23,23,19,0,"require"],[23,30,19,0],[23,31,19,0,"_dependencyMap"],[23,45,19,0],[24,2,19,49],[24,11,19,49,"_interopRequireWildcard"],[24,35,19,49,"e"],[24,36,19,49],[24,38,19,49,"t"],[24,39,19,49],[24,68,19,49,"WeakMap"],[24,75,19,49],[24,81,19,49,"r"],[24,82,19,49],[24,89,19,49,"WeakMap"],[24,96,19,49],[24,100,19,49,"n"],[24,101,19,49],[24,108,19,49,"WeakMap"],[24,115,19,49],[24,127,19,49,"_interopRequireWildcard"],[24,150,19,49],[24,162,19,49,"_interopRequireWildcard"],[24,163,19,49,"e"],[24,164,19,49],[24,166,19,49,"t"],[24,167,19,49],[24,176,19,49,"t"],[24,177,19,49],[24,181,19,49,"e"],[24,182,19,49],[24,186,19,49,"e"],[24,187,19,49],[24,188,19,49,"__esModule"],[24,198,19,49],[24,207,19,49,"e"],[24,208,19,49],[24,214,19,49,"o"],[24,215,19,49],[24,217,19,49,"i"],[24,218,19,49],[24,220,19,49,"f"],[24,221,19,49],[24,226,19,49,"__proto__"],[24,235,19,49],[24,243,19,49,"default"],[24,250,19,49],[24,252,19,49,"e"],[24,253,19,49],[24,270,19,49,"e"],[24,271,19,49],[24,294,19,49,"e"],[24,295,19,49],[24,320,19,49,"e"],[24,321,19,49],[24,330,19,49,"f"],[24,331,19,49],[24,337,19,49,"o"],[24,338,19,49],[24,341,19,49,"t"],[24,342,19,49],[24,345,19,49,"n"],[24,346,19,49],[24,349,19,49,"r"],[24,350,19,49],[24,358,19,49,"o"],[24,359,19,49],[24,360,19,49,"has"],[24,363,19,49],[24,364,19,49,"e"],[24,365,19,49],[24,375,19,49,"o"],[24,376,19,49],[24,377,19,49,"get"],[24,380,19,49],[24,381,19,49,"e"],[24,382,19,49],[24,385,19,49,"o"],[24,386,19,49],[24,387,19,49,"set"],[24,390,19,49],[24,391,19,49,"e"],[24,392,19,49],[24,394,19,49,"f"],[24,395,19,49],[24,411,19,49,"t"],[24,412,19,49],[24,416,19,49,"e"],[24,417,19,49],[24,433,19,49,"t"],[24,434,19,49],[24,441,19,49,"hasOwnProperty"],[24,455,19,49],[24,456,19,49,"call"],[24,460,19,49],[24,461,19,49,"e"],[24,462,19,49],[24,464,19,49,"t"],[24,465,19,49],[24,472,19,49,"i"],[24,473,19,49],[24,477,19,49,"o"],[24,478,19,49],[24,481,19,49,"Object"],[24,487,19,49],[24,488,19,49,"defineProperty"],[24,502,19,49],[24,507,19,49,"Object"],[24,513,19,49],[24,514,19,49,"getOwnPropertyDescriptor"],[24,538,19,49],[24,539,19,49,"e"],[24,540,19,49],[24,542,19,49,"t"],[24,543,19,49],[24,550,19,49,"i"],[24,551,19,49],[24,552,19,49,"get"],[24,555,19,49],[24,559,19,49,"i"],[24,560,19,49],[24,561,19,49,"set"],[24,564,19,49],[24,568,19,49,"o"],[24,569,19,49],[24,570,19,49,"f"],[24,571,19,49],[24,573,19,49,"t"],[24,574,19,49],[24,576,19,49,"i"],[24,577,19,49],[24,581,19,49,"f"],[24,582,19,49],[24,583,19,49,"t"],[24,584,19,49],[24,588,19,49,"e"],[24,589,19,49],[24,590,19,49,"t"],[24,591,19,49],[24,602,19,49,"f"],[24,603,19,49],[24,608,19,49,"e"],[24,609,19,49],[24,611,19,49,"t"],[24,612,19,49],[25,2,1,0],[25,6,1,4,"_UIManagerAny$getView"],[25,27,1,25],[25,29,1,27,"_UIManagerAny$getView2"],[25,51,1,49],[25,53,1,51,"_UIManagerAny$getCons"],[25,74,1,72],[26,2,3,0],[26,11,3,9,"_defineProperty"],[26,26,3,24,"_defineProperty"],[26,27,3,25,"obj"],[26,30,3,28],[26,32,3,30,"key"],[26,35,3,33],[26,37,3,35,"value"],[26,42,3,40],[26,44,3,42],[27,4,3,44],[27,8,3,48,"key"],[27,11,3,51],[27,15,3,55,"obj"],[27,18,3,58],[27,20,3,60],[28,6,3,62,"Object"],[28,12,3,68],[28,13,3,69,"defineProperty"],[28,27,3,83],[28,28,3,84,"obj"],[28,31,3,87],[28,33,3,89,"key"],[28,36,3,92],[28,38,3,94],[29,8,3,96,"value"],[29,13,3,101],[29,15,3,103,"value"],[29,20,3,108],[30,8,3,110,"enumerable"],[30,18,3,120],[30,20,3,122],[30,24,3,126],[31,8,3,128,"configurable"],[31,20,3,140],[31,22,3,142],[31,26,3,146],[32,8,3,148,"writable"],[32,16,3,156],[32,18,3,158],[33,6,3,163],[33,7,3,164],[33,8,3,165],[34,4,3,167],[34,5,3,168],[34,11,3,174],[35,6,3,176,"obj"],[35,9,3,179],[35,10,3,180,"key"],[35,13,3,183],[35,14,3,184],[35,17,3,187,"value"],[35,22,3,192],[36,4,3,194],[37,4,3,196],[37,11,3,203,"obj"],[37,14,3,206],[38,2,3,208],[39,2,20,0],[39,8,20,6,"UIManagerAny"],[39,20,20,18],[39,23,20,21,"UIManager"],[39,41,20,30],[40,2,21,0,"customDirectEventTypes"],[40,48,21,22],[40,49,21,23,"topGestureHandlerEvent"],[40,71,21,45],[40,74,21,48],[41,4,22,2,"registrationName"],[41,20,22,18],[41,22,22,20],[42,2,23,0],[42,3,23,1],[43,2,24,0],[43,8,24,6,"customGHEventsConfigFabricAndroid"],[43,41,24,39],[43,44,24,42],[44,4,25,2,"topOnGestureHandlerEvent"],[44,28,25,26],[44,30,25,28],[45,6,26,4,"registrationName"],[45,22,26,20],[45,24,26,22],[46,4,27,2],[46,5,27,3],[47,4,28,2,"topOnGestureHandlerStateChange"],[47,34,28,32],[47,36,28,34],[48,6,29,4,"registrationName"],[48,22,29,20],[48,24,29,22],[49,4,30,2],[50,2,31,0],[50,3,31,1],[51,2,32,0],[51,8,32,6,"customGHEventsConfig"],[51,28,32,26],[51,31,32,26,"Object"],[51,37,32,26],[51,38,32,26,"assign"],[51,44,32,26],[52,4,33,2,"onGestureHandlerEvent"],[52,25,33,23],[52,27,33,25],[53,6,34,4,"registrationName"],[53,22,34,20],[53,24,34,22],[54,4,35,2],[54,5,35,3],[55,4,36,2,"onGestureHandlerStateChange"],[55,31,36,29],[55,33,36,31],[56,6,37,4,"registrationName"],[56,22,37,20],[56,24,37,22],[57,4,38,2],[58,2,38,3],[58,5,47,6],[58,9,47,6,"isFabric"],[58,25,47,14],[58,27,47,15],[58,28,47,16],[58,32,47,20,"Platform"],[58,49,47,28],[58,50,47,29,"OS"],[58,52,47,31],[58,57,47,36],[58,66,47,45],[58,70,47,49,"customGHEventsConfigFabricAndroid"],[58,103,47,82],[58,104,48,1],[58,105,48,2],[58,106,48,3],[59,2,49,0],[60,2,50,0],[61,2,51,0],[63,2,53,0,"UIManagerAny"],[63,14,53,12],[63,15,53,13,"genericDirectEventTypes"],[63,38,53,36],[63,41,53,36,"Object"],[63,47,53,36],[63,48,53,36,"assign"],[63,54,53,36],[63,59,53,44,"UIManagerAny"],[63,71,53,56],[63,72,53,57,"genericDirectEventTypes"],[63,95,53,80],[63,97,54,5,"customGHEventsConfig"],[63,117,54,25],[63,118,55,1],[63,119,55,2],[63,120,55,3],[64,2,56,0],[65,2,57,0],[67,2,59,0],[67,8,59,6,"UIManagerConstants"],[67,26,59,24],[67,29,59,27],[67,30,59,28,"_UIManagerAny$getView"],[67,51,59,49],[67,54,59,52],[67,55,59,53,"_UIManagerAny$getView2"],[67,77,59,75],[67,80,59,78,"UIManagerAny"],[67,92,59,90],[67,93,59,91,"getViewManagerConfig"],[67,113,59,111],[67,119,59,117],[67,123,59,121],[67,127,59,125,"_UIManagerAny$getView2"],[67,149,59,147],[67,154,59,152],[67,159,59,157],[67,160,59,158],[67,163,59,161],[67,168,59,166],[67,169,59,167],[67,172,59,170,"_UIManagerAny$getView2"],[67,194,59,192],[67,195,59,193,"call"],[67,199,59,197],[67,200,59,198,"UIManagerAny"],[67,212,59,210],[67,214,59,212],[67,228,59,226],[67,229,59,227],[67,235,59,233],[67,239,59,237],[67,243,59,241,"_UIManagerAny$getView"],[67,264,59,262],[67,269,59,267],[67,274,59,272],[67,275,59,273],[67,278,59,276,"_UIManagerAny$getView"],[67,299,59,297],[67,302,59,300],[67,303,59,301,"_UIManagerAny$getCons"],[67,324,59,322],[67,327,59,325,"UIManagerAny"],[67,339,59,337],[67,340,59,338,"getConstants"],[67,352,59,350],[67,358,59,356],[67,362,59,360],[67,366,59,364,"_UIManagerAny$getCons"],[67,387,59,385],[67,392,59,390],[67,397,59,395],[67,398,59,396],[67,401,59,399],[67,406,59,404],[67,407,59,405],[67,410,59,408,"_UIManagerAny$getCons"],[67,431,59,429],[67,432,59,430,"call"],[67,436,59,434],[67,437,59,435,"UIManagerAny"],[67,449,59,447],[67,450,59,448],[68,2,61,0],[68,6,61,4,"UIManagerConstants"],[68,24,61,22],[68,26,61,24],[69,4,62,2,"UIManagerConstants"],[69,22,62,20],[69,23,62,21,"genericDirectEventTypes"],[69,46,62,44],[69,49,62,44,"Object"],[69,55,62,44],[69,56,62,44,"assign"],[69,62,62,44],[69,67,62,52,"UIManagerConstants"],[69,85,62,70],[69,86,62,71,"genericDirectEventTypes"],[69,109,62,94],[69,111,63,7,"customGHEventsConfig"],[69,131,63,27],[69,132,64,3],[70,2,65,0],[70,3,65,1],[70,4,65,2],[72,2,68,0],[72,8,68,6],[73,4,69,2,"setJSResponder"],[73,18,69,16],[73,20,69,18,"oldSetJSResponder"],[73,37,69,35],[73,40,69,38,"oldSetJSResponder"],[73,41,69,38],[73,46,69,44],[73,47,69,45],[74,4,69,45],[74,5,70,3],[75,4,71,2,"clearJSResponder"],[75,20,71,18],[75,22,71,20,"oldClearJSResponder"],[75,41,71,39],[75,44,71,42,"oldClearJSResponder"],[75,45,71,42],[75,50,71,48],[75,51,71,49],[76,4,71,49],[77,2,73,0],[77,3,73,1],[77,6,73,4,"UIManagerAny"],[77,18,73,16],[78,2,75,0,"UIManagerAny"],[78,14,75,12],[78,15,75,13,"setJSResponder"],[78,29,75,27],[78,32,75,30],[78,33,75,31,"tag"],[78,36,75,34],[78,38,75,36,"blockNativeResponder"],[78,58,75,56],[78,63,75,61],[79,4,76,2,"RNGestureHandlerModule"],[79,35,76,24],[79,36,76,25,"handleSetJSResponder"],[79,56,76,45],[79,57,76,46,"tag"],[79,60,76,49],[79,62,76,51,"blockNativeResponder"],[79,82,76,71],[79,83,76,72],[80,4,77,2,"oldSetJSResponder"],[80,21,77,19],[80,22,77,20,"tag"],[80,25,77,23],[80,27,77,25,"blockNativeResponder"],[80,47,77,45],[80,48,77,46],[81,2,78,0],[81,3,78,1],[82,2,80,0,"UIManagerAny"],[82,14,80,12],[82,15,80,13,"clearJSResponder"],[82,31,80,29],[82,34,80,32],[82,40,80,38],[83,4,81,2,"RNGestureHandlerModule"],[83,35,81,24],[83,36,81,25,"handleClearJSResponder"],[83,58,81,47],[83,59,81,48],[83,60,81,49],[84,4,82,2,"oldClearJSResponder"],[84,23,82,21],[84,24,82,22],[84,25,82,23],[85,2,83,0],[85,3,83,1],[86,2,85,0],[86,6,85,4,"allowTouches"],[86,18,85,16],[86,21,85,19],[86,25,85,23],[87,2,86,0],[87,8,86,6,"DEV_ON_ANDROID"],[87,22,86,20],[87,25,86,23,"__DEV__"],[87,32,86,30],[87,36,86,34,"Platform"],[87,53,86,42],[87,54,86,43,"OS"],[87,56,86,45],[87,61,86,50],[87,70,86,59],[87,71,86,60],[87,72,86,61],[88,2,87,0],[90,2,89,0],[90,6,89,4,"DEV_ON_ANDROID"],[90,20,89,18],[90,22,89,20],[91,4,90,2,"DeviceEventEmitter"],[91,31,90,20],[91,32,90,21,"addListener"],[91,43,90,32],[91,44,90,33],[91,68,90,57],[91,70,90,59],[91,76,90,65],[92,6,91,4,"allowTouches"],[92,18,91,16],[92,21,91,19],[92,22,91,20,"allowTouches"],[92,34,91,32],[93,4,92,2],[93,5,92,3],[93,6,92,4],[94,2,93,0],[95,2,95,0],[95,11,95,9,"hasUnresolvedRefs"],[95,28,95,26,"hasUnresolvedRefs"],[95,29,95,27,"props"],[95,34,95,32],[95,36,95,34],[96,4,96,2],[97,4,97,2],[97,10,97,8,"extract"],[97,17,97,15],[97,20,97,18,"refs"],[97,24,97,22],[97,28,97,26],[98,6,98,4],[98,10,98,8],[98,11,98,9,"Array"],[98,16,98,14],[98,17,98,15,"isArray"],[98,24,98,22],[98,25,98,23,"refs"],[98,29,98,27],[98,30,98,28],[98,32,98,30],[99,8,99,6],[99,15,99,13,"refs"],[99,19,99,17],[99,23,99,21,"refs"],[99,27,99,25],[99,28,99,26,"current"],[99,35,99,33],[99,40,99,38],[99,44,99,42],[100,6,100,4],[101,6,102,4],[101,13,102,11,"refs"],[101,17,102,15],[101,18,102,16,"some"],[101,22,102,20],[101,23,102,21,"r"],[101,24,102,22],[101,28,102,26,"r"],[101,29,102,27],[101,33,102,31,"r"],[101,34,102,32],[101,35,102,33,"current"],[101,42,102,40],[101,47,102,45],[101,51,102,49],[101,52,102,50],[102,4,103,2],[102,5,103,3],[103,4,105,2],[103,11,105,9,"extract"],[103,18,105,16],[103,19,105,17,"props"],[103,24,105,22],[103,25,105,23],[103,47,105,45],[103,48,105,46],[103,49,105,47],[103,53,105,51,"extract"],[103,60,105,58],[103,61,105,59,"props"],[103,66,105,64],[103,67,105,65],[103,76,105,74],[103,77,105,75],[103,78,105,76],[104,2,106,0],[105,2,108,0],[105,8,108,6,"stateToPropMappings"],[105,27,108,25],[105,30,108,28],[106,4,109,2],[106,5,109,3,"State"],[106,17,109,8],[106,18,109,9,"UNDETERMINED"],[106,30,109,21],[106,33,109,24,"undefined"],[106,42,109,33],[107,4,110,2],[107,5,110,3,"State"],[107,17,110,8],[107,18,110,9,"BEGAN"],[107,23,110,14],[107,26,110,17],[107,35,110,26],[108,4,111,2],[108,5,111,3,"State"],[108,17,111,8],[108,18,111,9,"FAILED"],[108,24,111,15],[108,27,111,18],[108,37,111,28],[109,4,112,2],[109,5,112,3,"State"],[109,17,112,8],[109,18,112,9,"CANCELLED"],[109,27,112,18],[109,30,112,21],[109,43,112,34],[110,4,113,2],[110,5,113,3,"State"],[110,17,113,8],[110,18,113,9,"ACTIVE"],[110,24,113,15],[110,27,113,18],[110,40,113,31],[111,4,114,2],[111,5,114,3,"State"],[111,17,114,8],[111,18,114,9,"END"],[111,21,114,12],[111,24,114,15],[112,2,115,0],[112,3,115,1],[113,2,116,0],[113,8,116,6,"UNRESOLVED_REFS_RETRY_LIMIT"],[113,35,116,33],[113,38,116,36],[113,39,116,37],[113,40,116,38],[113,41,116,39],[115,2,118,15],[115,11,118,24,"createHandler"],[115,24,118,37,"createHandler"],[115,25,118,38],[116,4,119,2,"name"],[116,8,119,6],[117,4,120,2,"allowedProps"],[117,16,120,14],[117,19,120,17],[117,21,120,19],[118,4,121,2,"config"],[118,10,121,8],[118,13,121,11],[118,14,121,12],[118,15,121,13],[119,4,122,2,"transformProps"],[119,18,122,16],[120,4,123,2,"customNativeProps"],[120,21,123,19],[120,24,123,22],[121,2,124,0],[121,3,124,1],[121,5,124,3],[122,4,125,2],[122,10,125,8,"Handler"],[122,17,125,15],[122,26,125,24,"React"],[122,31,125,29],[122,32,125,30,"Component"],[122,41,125,39],[122,42,125,40],[123,6,126,4,"constructor"],[123,17,126,15,"constructor"],[123,18,126,16,"props"],[123,23,126,21],[123,25,126,23],[124,8,127,6],[124,13,127,11],[124,14,127,12,"props"],[124,19,127,17],[124,20,127,18],[125,8,129,6,"_defineProperty"],[125,23,129,21],[125,24,129,22],[125,28,129,26],[125,30,129,28],[125,42,129,40],[125,44,129,42],[125,49,129,47],[125,50,129,48],[125,51,129,49],[126,8,131,6,"_defineProperty"],[126,23,131,21],[126,24,131,22],[126,28,131,26],[126,30,131,28],[126,38,131,36],[126,40,131,38],[126,45,131,43],[126,46,131,44],[126,47,131,45],[127,8,133,6,"_defineProperty"],[127,23,133,21],[127,24,133,22],[127,28,133,26],[127,30,133,28],[127,40,133,38],[127,42,133,40],[127,47,133,45],[127,48,133,46],[127,49,133,47],[128,8,135,6,"_defineProperty"],[128,23,135,21],[128,24,135,22],[128,28,135,26],[128,30,135,28],[128,44,135,42],[128,46,135,44],[128,51,135,49],[128,52,135,50],[128,53,135,51],[129,8,137,6,"_defineProperty"],[129,23,137,21],[129,24,137,22],[129,28,137,26],[129,30,137,28],[129,40,137,38],[129,42,137,40],[129,47,137,45],[129,48,137,46],[129,49,137,47],[130,8,139,6,"_defineProperty"],[130,23,139,21],[130,24,139,22],[130,28,139,26],[130,30,139,28],[130,39,139,37],[130,41,139,39],[130,46,139,44],[130,47,139,45],[130,48,139,46],[131,8,141,6,"_defineProperty"],[131,23,141,21],[131,24,141,22],[131,28,141,26],[131,30,141,28],[131,55,141,53],[131,57,141,55],[131,62,141,60],[131,63,141,61],[131,64,141,62],[132,8,143,6,"_defineProperty"],[132,23,143,21],[132,24,143,22],[132,28,143,26],[132,30,143,28],[132,53,143,51],[132,55,143,53,"event"],[132,60,143,58],[132,64,143,62],[133,10,144,8],[133,14,144,12,"event"],[133,19,144,17],[133,20,144,18,"nativeEvent"],[133,31,144,29],[133,32,144,30,"handlerTag"],[133,42,144,40],[133,47,144,45],[133,51,144,49],[133,52,144,50,"handlerTag"],[133,62,144,60],[133,64,144,62],[134,12,145,10],[134,16,145,14],[134,23,145,21],[134,27,145,25],[134,28,145,26,"props"],[134,33,145,31],[134,34,145,32,"onGestureEvent"],[134,48,145,46],[134,53,145,51],[134,63,145,61],[134,65,145,63],[135,14,146,12],[135,18,146,16,"_this$props$onGesture"],[135,39,146,37],[135,41,146,39,"_this$props"],[135,52,146,50],[136,14,148,12],[136,15,148,13,"_this$props$onGesture"],[136,36,148,34],[136,39,148,37],[136,40,148,38,"_this$props"],[136,51,148,49],[136,54,148,52],[136,58,148,56],[136,59,148,57,"props"],[136,64,148,62],[136,66,148,64,"onGestureEvent"],[136,80,148,78],[136,86,148,84],[136,90,148,88],[136,94,148,92,"_this$props$onGesture"],[136,115,148,113],[136,120,148,118],[136,125,148,123],[136,126,148,124],[136,129,148,127],[136,134,148,132],[136,135,148,133],[136,138,148,136,"_this$props$onGesture"],[136,159,148,157],[136,160,148,158,"call"],[136,164,148,162],[136,165,148,163,"_this$props"],[136,176,148,174],[136,178,148,176,"event"],[136,183,148,181],[136,184,148,182],[137,12,149,10],[138,10,150,8],[138,11,150,9],[138,17,150,15],[139,12,151,10],[139,16,151,14,"_this$props$onGesture2"],[139,38,151,36],[139,40,151,38,"_this$props2"],[139,52,151,50],[140,12,153,10],[140,13,153,11,"_this$props$onGesture2"],[140,35,153,33],[140,38,153,36],[140,39,153,37,"_this$props2"],[140,51,153,49],[140,54,153,52],[140,58,153,56],[140,59,153,57,"props"],[140,64,153,62],[140,66,153,64,"onGestureHandlerEvent"],[140,87,153,85],[140,93,153,91],[140,97,153,95],[140,101,153,99,"_this$props$onGesture2"],[140,123,153,121],[140,128,153,126],[140,133,153,131],[140,134,153,132],[140,137,153,135],[140,142,153,140],[140,143,153,141],[140,146,153,144,"_this$props$onGesture2"],[140,168,153,166],[140,169,153,167,"call"],[140,173,153,171],[140,174,153,172,"_this$props2"],[140,186,153,184],[140,188,153,186,"event"],[140,193,153,191],[140,194,153,192],[141,10,154,8],[142,8,155,6],[142,9,155,7],[142,10,155,8],[143,8,157,6,"_defineProperty"],[143,23,157,21],[143,24,157,22],[143,28,157,26],[143,30,157,28],[143,59,157,57],[143,61,157,59,"event"],[143,66,157,64],[143,70,157,68],[144,10,158,8],[144,14,158,12,"event"],[144,19,158,17],[144,20,158,18,"nativeEvent"],[144,31,158,29],[144,32,158,30,"handlerTag"],[144,42,158,40],[144,47,158,45],[144,51,158,49],[144,52,158,50,"handlerTag"],[144,62,158,60],[144,64,158,62],[145,12,159,10],[145,16,159,14],[145,23,159,21],[145,27,159,25],[145,28,159,26,"props"],[145,33,159,31],[145,34,159,32,"onHandlerStateChange"],[145,54,159,52],[145,59,159,57],[145,69,159,67],[145,71,159,69],[146,14,160,12],[146,18,160,16,"_this$props$onHandler"],[146,39,160,37],[146,41,160,39,"_this$props3"],[146,53,160,51],[147,14,162,12],[147,15,162,13,"_this$props$onHandler"],[147,36,162,34],[147,39,162,37],[147,40,162,38,"_this$props3"],[147,52,162,50],[147,55,162,53],[147,59,162,57],[147,60,162,58,"props"],[147,65,162,63],[147,67,162,65,"onHandlerStateChange"],[147,87,162,85],[147,93,162,91],[147,97,162,95],[147,101,162,99,"_this$props$onHandler"],[147,122,162,120],[147,127,162,125],[147,132,162,130],[147,133,162,131],[147,136,162,134],[147,141,162,139],[147,142,162,140],[147,145,162,143,"_this$props$onHandler"],[147,166,162,164],[147,167,162,165,"call"],[147,171,162,169],[147,172,162,170,"_this$props3"],[147,184,162,182],[147,186,162,184,"event"],[147,191,162,189],[147,192,162,190],[148,12,163,10],[149,12,165,10],[149,18,165,16,"state"],[149,23,165,21],[149,26,165,24,"event"],[149,31,165,29],[149,32,165,30,"nativeEvent"],[149,43,165,41],[149,44,165,42,"state"],[149,49,165,47],[150,12,166,10],[150,18,166,16,"stateEventName"],[150,32,166,30],[150,35,166,33,"stateToPropMappings"],[150,54,166,52],[150,55,166,53,"state"],[150,60,166,58],[150,61,166,59],[151,12,167,10],[151,18,167,16,"eventHandler"],[151,30,167,28],[151,33,167,31,"stateEventName"],[151,47,167,45],[151,51,167,49],[151,55,167,53],[151,56,167,54,"props"],[151,61,167,59],[151,62,167,60,"stateEventName"],[151,76,167,74],[151,77,167,75],[152,12,169,10],[152,16,169,14,"eventHandler"],[152,28,169,26],[152,32,169,30],[152,39,169,37,"eventHandler"],[152,51,169,49],[152,56,169,54],[152,66,169,64],[152,68,169,66],[153,14,170,12,"eventHandler"],[153,26,170,24],[153,27,170,25,"event"],[153,32,170,30],[153,33,170,31],[154,12,171,10],[155,10,172,8],[155,11,172,9],[155,17,172,15],[156,12,173,10],[156,16,173,14,"_this$props$onGesture3"],[156,38,173,36],[156,40,173,38,"_this$props4"],[156,52,173,50],[157,12,175,10],[157,13,175,11,"_this$props$onGesture3"],[157,35,175,33],[157,38,175,36],[157,39,175,37,"_this$props4"],[157,51,175,49],[157,54,175,52],[157,58,175,56],[157,59,175,57,"props"],[157,64,175,62],[157,66,175,64,"onGestureHandlerStateChange"],[157,93,175,91],[157,99,175,97],[157,103,175,101],[157,107,175,105,"_this$props$onGesture3"],[157,129,175,127],[157,134,175,132],[157,139,175,137],[157,140,175,138],[157,143,175,141],[157,148,175,146],[157,149,175,147],[157,152,175,150,"_this$props$onGesture3"],[157,174,175,172],[157,175,175,173,"call"],[157,179,175,177],[157,180,175,178,"_this$props4"],[157,192,175,190],[157,194,175,192,"event"],[157,199,175,197],[157,200,175,198],[158,10,176,8],[159,8,177,6],[159,9,177,7],[159,10,177,8],[160,8,179,6,"_defineProperty"],[160,23,179,21],[160,24,179,22],[160,28,179,26],[160,30,179,28],[160,42,179,40],[160,44,179,42,"node"],[160,48,179,46],[160,52,179,50],[161,10,180,8],[161,14,180,12,"_props"],[161,20,180,18],[162,10,182,8],[162,14,182,12],[162,15,182,13,"viewNode"],[162,23,182,21],[162,26,182,24,"node"],[162,30,182,28],[163,10,183,8],[163,16,183,14,"child"],[163,21,183,19],[163,24,183,22,"React"],[163,29,183,27],[163,30,183,28,"Children"],[163,38,183,36],[163,39,183,37,"only"],[163,43,183,41],[163,44,183,42],[163,48,183,46],[163,49,183,47,"props"],[163,54,183,52],[163,55,183,53,"children"],[163,63,183,61],[163,64,183,62],[163,65,183,63],[163,66,183,64],[164,10,184,8],[166,10,186,8],[166,16,186,14,"ref"],[166,19,186,17],[166,22,186,20],[166,26,186,20,"isReact19"],[166,43,186,29],[166,45,186,30],[166,46,186,31],[166,49,186,34],[166,50,186,35,"_props"],[166,56,186,41],[166,59,186,44,"child"],[166,64,186,49],[166,65,186,50,"props"],[166,70,186,55],[166,76,186,61],[166,80,186,65],[166,84,186,69,"_props"],[166,90,186,75],[166,95,186,80],[166,100,186,85],[166,101,186,86],[166,104,186,89],[166,109,186,94],[166,110,186,95],[166,113,186,98,"_props"],[166,119,186,104],[166,120,186,105,"ref"],[166,123,186,108],[166,126,186,111,"child"],[166,131,186,116],[166,136,186,121],[166,140,186,125],[166,144,186,129,"child"],[166,149,186,134],[166,154,186,139],[166,159,186,144],[166,160,186,145],[166,163,186,148],[166,168,186,153],[166,169,186,154],[166,172,186,157,"child"],[166,177,186,162],[166,178,186,163,"ref"],[166,181,186,166],[167,10,188,8],[167,14,188,12],[167,15,188,13,"ref"],[167,18,188,16],[167,20,188,18],[168,12,189,10],[169,10,190,8],[170,10,192,8],[170,14,192,12],[170,21,192,19,"ref"],[170,24,192,22],[170,29,192,27],[170,39,192,37],[170,41,192,39],[171,12,193,10,"ref"],[171,15,193,13],[171,16,193,14,"node"],[171,20,193,18],[171,21,193,19],[172,10,194,8],[172,11,194,9],[172,17,194,15],[173,12,195,10,"ref"],[173,15,195,13],[173,16,195,14,"current"],[173,23,195,21],[173,26,195,24,"node"],[173,30,195,28],[174,10,196,8],[175,8,197,6],[175,9,197,7],[175,10,197,8],[176,8,199,6,"_defineProperty"],[176,23,199,21],[176,24,199,22],[176,28,199,26],[176,30,199,28],[176,52,199,50],[176,54,199,52,"newConfig"],[176,63,199,61],[176,67,199,65],[177,10,200,8],[177,14,200,12],[177,15,200,13,"config"],[177,21,200,19],[177,24,200,22,"newConfig"],[177,33,200,31],[178,10,201,8,"RNGestureHandlerModule"],[178,41,201,30],[178,42,201,31,"createGestureHandler"],[178,62,201,51],[178,63,201,52,"name"],[178,67,201,56],[178,69,201,58],[178,73,201,62],[178,74,201,63,"handlerTag"],[178,84,201,73],[178,86,201,75,"newConfig"],[178,95,201,84],[178,96,201,85],[179,8,202,6],[179,9,202,7],[179,10,202,8],[180,8,204,6,"_defineProperty"],[180,23,204,21],[180,24,204,22],[180,28,204,26],[180,30,204,28],[180,52,204,50],[180,54,204,52,"newViewTag"],[180,64,204,62],[180,68,204,66],[181,10,205,8],[181,14,205,12],[181,15,205,13,"viewTag"],[181,22,205,20],[181,25,205,23,"newViewTag"],[181,35,205,33],[182,10,207,8],[182,14,207,12,"Platform"],[182,31,207,20],[182,32,207,21,"OS"],[182,34,207,23],[182,39,207,28],[182,44,207,33],[182,46,207,35],[183,12,208,10],[184,12,209,10,"RNGestureHandlerModule"],[184,43,209,32],[184,44,209,33,"attachGestureHandler"],[184,64,209,53],[184,65,209,54],[184,69,209,58],[184,70,209,59,"handlerTag"],[184,80,209,69],[184,82,209,71,"newViewTag"],[184,92,209,81],[184,94,209,83,"ActionType"],[184,116,209,93],[184,117,209,94,"JS_FUNCTION_OLD_API"],[184,136,209,113],[185,12,209,115],[186,12,210,10],[186,16,210,14],[186,17,210,15,"propsRef"],[186,25,210,23],[186,26,210,24],[187,10,211,8],[187,11,211,9],[187,17,211,15],[188,12,212,10],[188,16,212,10,"registerOldGestureHandler"],[188,59,212,35],[188,61,212,36],[188,65,212,40],[188,66,212,41,"handlerTag"],[188,76,212,51],[188,78,212,53],[189,14,213,12,"onGestureEvent"],[189,28,213,26],[189,30,213,28],[189,34,213,32],[189,35,213,33,"onGestureHandlerEvent"],[189,56,213,54],[190,14,214,12,"onGestureStateChange"],[190,34,214,32],[190,36,214,34],[190,40,214,38],[190,41,214,39,"onGestureHandlerStateChange"],[191,12,215,10],[191,13,215,11],[191,14,215,12],[192,12,217,10],[192,18,217,16,"actionType"],[192,28,217,26],[192,31,217,29],[192,32,217,30],[192,38,217,36],[193,14,218,12],[193,18,218,16,"_this$props5"],[193,30,218,28],[193,32,218,30,"_this$props6"],[193,44,218,42],[194,14,220,12],[194,20,220,18,"onGestureEvent"],[194,34,220,32],[194,37,220,35],[194,38,220,36,"_this$props5"],[194,50,220,48],[194,53,220,51],[194,57,220,55],[194,58,220,56,"props"],[194,63,220,61],[194,69,220,67],[194,73,220,71],[194,77,220,75,"_this$props5"],[194,89,220,87],[194,94,220,92],[194,99,220,97],[194,100,220,98],[194,103,220,101],[194,108,220,106],[194,109,220,107],[194,112,220,110,"_this$props5"],[194,124,220,122],[194,125,220,123,"onGestureEvent"],[194,139,220,137],[195,14,221,12],[195,20,221,18,"isGestureHandlerWorklet"],[195,43,221,41],[195,46,221,44,"onGestureEvent"],[195,60,221,58],[195,65,221,63],[195,74,221,72],[195,78,221,76,"onGestureEvent"],[195,92,221,90],[195,96,221,94],[195,117,221,115],[195,121,221,119,"onGestureEvent"],[195,135,221,133],[195,136,221,134],[196,14,222,12],[196,20,222,18,"onHandlerStateChange"],[196,40,222,38],[196,43,222,41],[196,44,222,42,"_this$props6"],[196,56,222,54],[196,59,222,57],[196,63,222,61],[196,64,222,62,"props"],[196,69,222,67],[196,75,222,73],[196,79,222,77],[196,83,222,81,"_this$props6"],[196,95,222,93],[196,100,222,98],[196,105,222,103],[196,106,222,104],[196,109,222,107],[196,114,222,112],[196,115,222,113],[196,118,222,116,"_this$props6"],[196,130,222,128],[196,131,222,129,"onHandlerStateChange"],[196,151,222,149],[197,14,223,12],[197,20,223,18,"isStateChangeHandlerWorklet"],[197,47,223,45],[197,50,223,48,"onHandlerStateChange"],[197,70,223,68],[197,75,223,73],[197,84,223,82],[197,88,223,86,"onHandlerStateChange"],[197,108,223,106],[197,112,223,110],[197,133,223,131],[197,137,223,135,"onHandlerStateChange"],[197,157,223,155],[197,158,223,156],[198,14,224,12],[198,20,224,18,"isReanimatedHandler"],[198,39,224,37],[198,42,224,40,"isGestureHandlerWorklet"],[198,65,224,63],[198,69,224,67,"isStateChangeHandlerWorklet"],[198,96,224,94],[199,14,226,12],[199,18,226,16,"isReanimatedHandler"],[199,37,226,35],[199,39,226,37],[200,16,227,14],[201,16,228,14],[201,23,228,21,"ActionType"],[201,45,228,31],[201,46,228,32,"REANIMATED_WORKLET"],[201,64,228,50],[202,14,229,12],[202,15,229,13],[202,21,229,19],[202,25,229,23,"onGestureEvent"],[202,39,229,37],[202,43,229,41],[202,55,229,53],[202,59,229,57,"onGestureEvent"],[202,73,229,71],[202,75,229,73],[203,16,230,14],[204,16,231,14],[204,23,231,21,"ActionType"],[204,45,231,31],[204,46,231,32,"NATIVE_ANIMATED_EVENT"],[204,67,231,53],[205,14,232,12],[205,15,232,13],[205,21,232,19],[206,16,233,14],[207,16,234,14],[207,23,234,21,"ActionType"],[207,45,234,31],[207,46,234,32,"JS_FUNCTION_OLD_API"],[207,65,234,51],[208,14,235,12],[209,12,236,10],[209,13,236,11],[209,15,236,13],[209,16,236,14],[210,12,238,10,"RNGestureHandlerModule"],[210,43,238,32],[210,44,238,33,"attachGestureHandler"],[210,64,238,53],[210,65,238,54],[210,69,238,58],[210,70,238,59,"handlerTag"],[210,80,238,69],[210,82,238,71,"newViewTag"],[210,92,238,81],[210,94,238,83,"actionType"],[210,104,238,93],[210,105,238,94],[211,10,239,8],[212,10,241,8],[212,14,241,8,"scheduleFlushOperations"],[212,44,241,31],[212,46,241,32],[212,47,241,33],[213,10,242,8],[213,14,242,8,"ghQueueMicrotask"],[213,48,242,24],[213,50,242,25],[213,56,242,31],[214,12,243,10,"MountRegistry"],[214,40,243,23],[214,41,243,24,"gestureHandlerWillMount"],[214,64,243,47],[214,65,243,48],[214,69,243,52],[214,70,243,53],[215,10,244,8],[215,11,244,9],[215,12,244,10],[216,8,245,6],[216,9,245,7],[216,10,245,8],[217,8,247,6,"_defineProperty"],[217,23,247,21],[217,24,247,22],[217,28,247,26],[217,30,247,28],[217,52,247,50],[217,54,247,52,"newConfig"],[217,63,247,61],[217,67,247,65],[218,10,248,8],[218,14,248,12],[218,15,248,13,"config"],[218,21,248,19],[218,24,248,22,"newConfig"],[218,33,248,31],[219,10,249,8,"RNGestureHandlerModule"],[219,41,249,30],[219,42,249,31,"updateGestureHandler"],[219,62,249,51],[219,63,249,52],[219,67,249,56],[219,68,249,57,"handlerTag"],[219,78,249,67],[219,80,249,69,"newConfig"],[219,89,249,78],[219,90,249,79],[220,10,250,8],[220,14,250,8,"scheduleFlushOperations"],[220,44,250,31],[220,46,250,32],[220,47,250,33],[221,8,251,6],[221,9,251,7],[221,10,251,8],[222,8,253,6],[222,12,253,10],[222,13,253,11,"handlerTag"],[222,23,253,21],[222,26,253,24],[222,30,253,24,"getNextHandlerTag"],[222,66,253,41],[222,68,253,42],[222,69,253,43],[223,8,254,6],[223,12,254,10],[223,13,254,11,"config"],[223,19,254,17],[223,22,254,20],[223,23,254,21],[223,24,254,22],[224,8,255,6],[224,12,255,10],[224,13,255,11,"propsRef"],[224,21,255,19],[224,24,255,22],[224,37,255,35,"React"],[224,42,255,40],[224,43,255,41,"createRef"],[224,52,255,50],[224,53,255,51],[224,54,255,52],[225,8,256,6],[225,12,256,10],[225,13,256,11,"isMountedRef"],[225,25,256,23],[225,28,256,26],[225,41,256,39,"React"],[225,46,256,44],[225,47,256,45,"createRef"],[225,56,256,54],[225,57,256,55],[225,58,256,56],[226,8,257,6],[226,12,257,10],[226,13,257,11,"state"],[226,18,257,16],[226,21,257,19],[227,10,258,8,"allowTouches"],[228,8,259,6],[228,9,259,7],[229,8,261,6],[229,12,261,10,"props"],[229,17,261,15],[229,18,261,16,"id"],[229,20,261,18],[229,22,261,20],[230,10,262,8],[230,14,262,12,"handlerIDToTag"],[230,46,262,26],[230,47,262,27,"props"],[230,52,262,32],[230,53,262,33,"id"],[230,55,262,35],[230,56,262,36],[230,61,262,41,"undefined"],[230,70,262,50],[230,72,262,52],[231,12,263,10],[231,18,263,16],[231,22,263,20,"Error"],[231,27,263,25],[231,28,263,26],[231,48,263,46,"props"],[231,53,263,51],[231,54,263,52,"id"],[231,56,263,54],[231,78,263,76],[231,79,263,77],[232,10,264,8],[233,10,266,8,"handlerIDToTag"],[233,42,266,22],[233,43,266,23,"props"],[233,48,266,28],[233,49,266,29,"id"],[233,51,266,31],[233,52,266,32],[233,55,266,35],[233,59,266,39],[233,60,266,40,"handlerTag"],[233,70,266,50],[234,8,267,6],[235,6,268,4],[236,6,270,4,"componentDidMount"],[236,23,270,21,"componentDidMount"],[236,24,270,21],[236,26,270,24],[237,8,271,6],[237,14,271,12,"props"],[237,19,271,17],[237,22,271,20],[237,26,271,24],[237,27,271,25,"props"],[237,32,271,30],[238,8,272,6],[238,12,272,10],[238,13,272,11,"isMountedRef"],[238,25,272,23],[238,26,272,24,"current"],[238,33,272,31],[238,36,272,34],[238,40,272,38],[239,8,274,6],[239,12,274,10,"DEV_ON_ANDROID"],[239,26,274,24],[239,28,274,26],[240,10,275,8],[240,14,275,12],[240,15,275,13,"inspectorToggleListener"],[240,38,275,36],[240,41,275,39,"DeviceEventEmitter"],[240,68,275,57],[240,69,275,58,"addListener"],[240,80,275,69],[240,81,275,70],[240,105,275,94],[240,107,275,96],[240,113,275,102],[241,12,276,10],[241,16,276,14],[241,17,276,15,"setState"],[241,25,276,23],[241,26,276,24,"_"],[241,27,276,25],[241,32,276,30],[242,14,277,12,"allowTouches"],[243,12,278,10],[243,13,278,11],[243,14,278,12],[243,15,278,13],[244,12,279,10],[244,16,279,14],[244,17,279,15,"update"],[244,23,279,21],[244,24,279,22,"UNRESOLVED_REFS_RETRY_LIMIT"],[244,51,279,49],[244,52,279,50],[245,10,280,8],[245,11,280,9],[245,12,280,10],[246,8,281,6],[247,8,283,6],[247,12,283,10,"hasUnresolvedRefs"],[247,29,283,27],[247,30,283,28,"props"],[247,35,283,33],[247,36,283,34],[247,38,283,36],[248,10,284,8],[249,10,285,8],[250,10,286,8],[251,10,287,8],[252,10,288,8],[253,10,289,8],[254,10,290,8],[254,14,290,8,"ghQueueMicrotask"],[254,48,290,24],[254,50,290,25],[254,56,290,31],[255,12,291,10],[255,16,291,14],[255,17,291,15,"update"],[255,23,291,21],[255,24,291,22,"UNRESOLVED_REFS_RETRY_LIMIT"],[255,51,291,49],[255,52,291,50],[256,10,292,8],[256,11,292,9],[256,12,292,10],[257,8,293,6],[258,8,295,6],[258,12,295,10],[258,13,295,11,"createGestureHandler"],[258,33,295,31],[258,34,295,32],[258,38,295,32,"filterConfig"],[258,57,295,44],[258,59,295,45,"transformProps"],[258,73,295,59],[258,76,295,62,"transformProps"],[258,90,295,76],[258,91,295,77],[258,95,295,81],[258,96,295,82,"props"],[258,101,295,87],[258,102,295,88],[258,105,295,91],[258,109,295,95],[258,110,295,96,"props"],[258,115,295,101],[258,117,295,103],[258,118,295,104],[258,121,295,107,"allowedProps"],[258,133,295,119],[258,135,295,121],[258,138,295,124,"customNativeProps"],[258,155,295,141],[258,156,295,142],[258,158,295,144,"config"],[258,164,295,150],[258,165,295,151],[258,166,295,152],[259,8,297,6],[259,12,297,10],[259,13,297,11],[259,17,297,15],[259,18,297,16,"viewNode"],[259,26,297,24],[259,28,297,26],[260,10,298,8],[260,16,298,14],[260,20,298,18,"Error"],[260,25,298,23],[260,26,298,24],[260,73,298,71,"Handler"],[260,80,298,78],[260,81,298,79,"displayName"],[260,92,298,90],[260,152,298,150],[260,153,298,151],[261,8,299,6],[262,8,301,6],[262,12,301,10],[262,13,301,11,"attachGestureHandler"],[262,33,301,31],[262,34,301,32],[262,38,301,32,"findNodeHandle"],[262,61,301,46],[262,63,301,47],[262,67,301,51],[262,68,301,52,"viewNode"],[262,76,301,60],[262,77,301,61],[262,78,301,62],[262,79,301,63],[262,80,301,64],[263,6,302,4],[264,6,304,4,"componentDidUpdate"],[264,24,304,22,"componentDidUpdate"],[264,25,304,22],[264,27,304,25],[265,8,305,6],[265,14,305,12,"viewTag"],[265,21,305,19],[265,24,305,22],[265,28,305,22,"findNodeHandle"],[265,51,305,36],[265,53,305,37],[265,57,305,41],[265,58,305,42,"viewNode"],[265,66,305,50],[265,67,305,51],[266,8,307,6],[266,12,307,10],[266,16,307,14],[266,17,307,15,"viewTag"],[266,24,307,22],[266,29,307,27,"viewTag"],[266,36,307,34],[266,38,307,36],[267,10,308,8],[267,14,308,12],[267,15,308,13,"attachGestureHandler"],[267,35,308,33],[267,36,308,34,"viewTag"],[267,43,308,41],[267,44,308,42],[267,45,308,43],[267,46,308,44],[268,8,309,6],[269,8,311,6],[269,12,311,10],[269,13,311,11,"update"],[269,19,311,17],[269,20,311,18,"UNRESOLVED_REFS_RETRY_LIMIT"],[269,47,311,45],[269,48,311,46],[270,6,312,4],[271,6,314,4,"componentWillUnmount"],[271,26,314,24,"componentWillUnmount"],[271,27,314,24],[271,29,314,27],[272,8,315,6],[272,12,315,10,"_this$inspectorToggle"],[272,33,315,31],[273,8,317,6],[273,9,317,7,"_this$inspectorToggle"],[273,30,317,28],[273,33,317,31],[273,37,317,35],[273,38,317,36,"inspectorToggleListener"],[273,61,317,59],[273,67,317,65],[273,71,317,69],[273,75,317,73,"_this$inspectorToggle"],[273,96,317,94],[273,101,317,99],[273,106,317,104],[273,107,317,105],[273,110,317,108],[273,115,317,113],[273,116,317,114],[273,119,317,117,"_this$inspectorToggle"],[273,140,317,138],[273,141,317,139,"remove"],[273,147,317,145],[273,148,317,146],[273,149,317,147],[274,8,318,6],[274,12,318,10],[274,13,318,11,"isMountedRef"],[274,25,318,23],[274,26,318,24,"current"],[274,33,318,31],[274,36,318,34],[274,41,318,39],[275,8,320,6],[275,12,320,10,"Platform"],[275,29,320,18],[275,30,320,19,"OS"],[275,32,320,21],[275,37,320,26],[275,42,320,31],[275,44,320,33],[276,10,321,8],[276,14,321,8,"unregisterOldGestureHandler"],[276,59,321,35],[276,61,321,36],[276,65,321,40],[276,66,321,41,"handlerTag"],[276,76,321,51],[276,77,321,52],[277,8,322,6],[278,8,324,6,"RNGestureHandlerModule"],[278,39,324,28],[278,40,324,29,"dropGestureHandler"],[278,58,324,47],[278,59,324,48],[278,63,324,52],[278,64,324,53,"handlerTag"],[278,74,324,63],[278,75,324,64],[279,8,325,6],[279,12,325,6,"scheduleFlushOperations"],[279,42,325,29],[279,44,325,30],[279,45,325,31],[279,46,325,32],[279,47,325,33],[281,8,327,6],[281,14,327,12,"handlerID"],[281,23,327,21],[281,26,327,24],[281,30,327,28],[281,31,327,29,"props"],[281,36,327,34],[281,37,327,35,"id"],[281,39,327,37],[282,8,329,6],[282,12,329,10,"handlerID"],[282,21,329,19],[282,23,329,21],[283,10,330,8],[284,10,331,8],[284,17,331,15,"handlerIDToTag"],[284,49,331,29],[284,50,331,30,"handlerID"],[284,59,331,39],[284,60,331,40],[285,8,332,6],[286,8,334,6,"MountRegistry"],[286,36,334,19],[286,37,334,20,"gestureHandlerWillUnmount"],[286,62,334,45],[286,63,334,46],[286,67,334,50],[286,68,334,51],[287,6,335,4],[288,6,337,4,"update"],[288,12,337,10,"update"],[288,13,337,11,"remainingTries"],[288,27,337,25],[288,29,337,27],[289,8,338,6],[289,12,338,10],[289,13,338,11],[289,17,338,15],[289,18,338,16,"isMountedRef"],[289,30,338,28],[289,31,338,29,"current"],[289,38,338,36],[289,40,338,38],[290,10,339,8],[291,8,340,6],[292,8,342,6],[292,14,342,12,"props"],[292,19,342,17],[292,22,342,20],[292,26,342,24],[292,27,342,25,"props"],[292,32,342,30],[292,33,342,31],[292,34,342,32],[293,8,343,6],[294,8,344,6],[296,8,346,6],[296,12,346,10,"hasUnresolvedRefs"],[296,29,346,27],[296,30,346,28,"props"],[296,35,346,33],[296,36,346,34],[296,40,346,38,"remainingTries"],[296,54,346,52],[296,57,346,55],[296,58,346,56],[296,60,346,58],[297,10,347,8],[297,14,347,8,"ghQueueMicrotask"],[297,48,347,24],[297,50,347,25],[297,56,347,31],[298,12,348,10],[298,16,348,14],[298,17,348,15,"update"],[298,23,348,21],[298,24,348,22,"remainingTries"],[298,38,348,36],[298,41,348,39],[298,42,348,40],[298,43,348,41],[299,10,349,8],[299,11,349,9],[299,12,349,10],[300,8,350,6],[300,9,350,7],[300,15,350,13],[301,10,351,8],[301,16,351,14,"newConfig"],[301,25,351,23],[301,28,351,26],[301,32,351,26,"filterConfig"],[301,51,351,38],[301,53,351,39,"transformProps"],[301,67,351,53],[301,70,351,56,"transformProps"],[301,84,351,70],[301,85,351,71],[301,89,351,75],[301,90,351,76,"props"],[301,95,351,81],[301,96,351,82],[301,99,351,85],[301,103,351,89],[301,104,351,90,"props"],[301,109,351,95],[301,111,351,97],[301,112,351,98],[301,115,351,101,"allowedProps"],[301,127,351,113],[301,129,351,115],[301,132,351,118,"customNativeProps"],[301,149,351,135],[301,150,351,136],[301,152,351,138,"config"],[301,158,351,144],[301,159,351,145],[302,10,353,8],[302,14,353,12],[302,15,353,13],[302,19,353,13,"deepEqual"],[302,36,353,22],[302,38,353,23],[302,42,353,27],[302,43,353,28,"config"],[302,49,353,34],[302,51,353,36,"newConfig"],[302,60,353,45],[302,61,353,46],[302,63,353,48],[303,12,354,10],[303,16,354,14],[303,17,354,15,"updateGestureHandler"],[303,37,354,35],[303,38,354,36,"newConfig"],[303,47,354,45],[303,48,354,46],[304,10,355,8],[305,8,356,6],[306,6,357,4],[307,6,359,4,"setNativeProps"],[307,20,359,18,"setNativeProps"],[307,21,359,19,"updates"],[307,28,359,26],[307,30,359,28],[308,8,360,6],[308,14,360,12,"mergedProps"],[308,25,360,23],[308,28,360,23,"Object"],[308,34,360,23],[308,35,360,23,"assign"],[308,41,360,23],[308,46,360,31],[308,50,360,35],[308,51,360,36,"props"],[308,56,360,41],[308,58,361,11,"updates"],[308,65,361,18],[308,66,362,7],[309,8,363,6],[309,14,363,12,"newConfig"],[309,23,363,21],[309,26,363,24],[309,30,363,24,"filterConfig"],[309,49,363,36],[309,51,363,37,"transformProps"],[309,65,363,51],[309,68,363,54,"transformProps"],[309,82,363,68],[309,83,363,69,"mergedProps"],[309,94,363,80],[309,95,363,81],[309,98,363,84,"mergedProps"],[309,109,363,95],[309,111,363,97],[309,112,363,98],[309,115,363,101,"allowedProps"],[309,127,363,113],[309,129,363,115],[309,132,363,118,"customNativeProps"],[309,149,363,135],[309,150,363,136],[309,152,363,138,"config"],[309,158,363,144],[309,159,363,145],[310,8,364,6],[310,12,364,10],[310,13,364,11,"updateGestureHandler"],[310,33,364,31],[310,34,364,32,"newConfig"],[310,43,364,41],[310,44,364,42],[311,6,365,4],[312,6,367,4,"render"],[312,12,367,10,"render"],[312,13,367,10],[312,15,367,13],[313,8,368,6],[313,12,368,10,"_this$props$testID"],[313,30,368,28],[314,8,370,6],[314,12,370,10,"__DEV__"],[314,19,370,17],[314,23,370,21],[314,24,370,22],[314,28,370,26],[314,29,370,27,"context"],[314,36,370,34],[314,40,370,38],[314,41,370,39],[314,45,370,39,"isTestEnv"],[314,62,370,48],[314,64,370,49],[314,65,370,50],[314,69,370,54,"Platform"],[314,86,370,62],[314,87,370,63,"OS"],[314,89,370,65],[314,94,370,70],[314,99,370,75],[314,101,370,77],[315,10,371,8],[315,16,371,14],[315,20,371,18,"Error"],[315,25,371,23],[315,26,371,24,"name"],[315,30,371,28],[315,33,371,31],[315,234,371,232],[315,235,371,233],[316,8,372,6],[317,8,374,6],[317,12,374,10,"gestureEventHandler"],[317,31,374,29],[317,34,374,32],[317,38,374,36],[317,39,374,37,"onGestureHandlerEvent"],[317,60,374,58],[317,61,374,59],[317,62,374,60],[319,8,376,6],[319,14,376,12],[320,10,377,8,"onGestureEvent"],[320,24,377,22],[321,10,378,8,"onGestureHandlerEvent"],[322,8,379,6],[322,9,379,7],[322,12,379,10],[322,16,379,14],[322,17,379,15,"props"],[322,22,379,20],[323,8,381,6],[323,12,381,10,"onGestureEvent"],[323,26,381,24],[323,30,381,28],[323,37,381,35,"onGestureEvent"],[323,51,381,49],[323,56,381,54],[323,66,381,64],[323,68,381,66],[324,10,382,8],[325,10,383,8],[326,10,384,8],[327,10,385,8],[327,14,385,12,"onGestureHandlerEvent"],[327,35,385,33],[327,37,385,35],[328,12,386,10],[328,18,386,16],[328,22,386,20,"Error"],[328,27,386,25],[328,28,386,26],[328,101,386,99],[328,102,386,100],[329,10,387,8],[330,10,389,8,"gestureEventHandler"],[330,29,389,27],[330,32,389,30,"onGestureEvent"],[330,46,389,44],[331,8,390,6],[331,9,390,7],[331,15,390,13],[332,10,391,8],[332,14,391,12,"onGestureHandlerEvent"],[332,35,391,33],[332,39,391,37],[332,46,391,44,"onGestureHandlerEvent"],[332,67,391,65],[332,72,391,70],[332,82,391,80],[332,84,391,82],[333,12,392,10],[333,18,392,16],[333,22,392,20,"Error"],[333,27,392,25],[333,28,392,26],[333,101,392,99],[333,102,392,100],[334,10,393,8],[335,8,394,6],[336,8,396,6],[336,12,396,10,"gestureStateEventHandler"],[336,36,396,34],[336,39,396,37],[336,43,396,41],[336,44,396,42,"onGestureHandlerStateChange"],[336,71,396,69],[336,72,396,70],[336,73,396,71],[338,8,398,6],[338,14,398,12],[339,10,399,8,"onHandlerStateChange"],[339,30,399,28],[340,10,400,8,"onGestureHandlerStateChange"],[341,8,401,6],[341,9,401,7],[341,12,401,10],[341,16,401,14],[341,17,401,15,"props"],[341,22,401,20],[342,8,403,6],[342,12,403,10,"onHandlerStateChange"],[342,32,403,30],[342,36,403,34],[342,43,403,41,"onHandlerStateChange"],[342,63,403,61],[342,68,403,66],[342,78,403,76],[342,80,403,78],[343,10,404,8],[344,10,405,8],[345,10,406,8],[346,10,407,8],[346,14,407,12,"onGestureHandlerStateChange"],[346,41,407,39],[346,43,407,41],[347,12,408,10],[347,18,408,16],[347,22,408,20,"Error"],[347,27,408,25],[347,28,408,26],[347,101,408,99],[347,102,408,100],[348,10,409,8],[349,10,411,8,"gestureStateEventHandler"],[349,34,411,32],[349,37,411,35,"onHandlerStateChange"],[349,57,411,55],[350,8,412,6],[350,9,412,7],[350,15,412,13],[351,10,413,8],[351,14,413,12,"onGestureHandlerStateChange"],[351,41,413,39],[351,45,413,43],[351,52,413,50,"onGestureHandlerStateChange"],[351,79,413,77],[351,84,413,82],[351,94,413,92],[351,96,413,94],[352,12,414,10],[352,18,414,16],[352,22,414,20,"Error"],[352,27,414,25],[352,28,414,26],[352,101,414,99],[352,102,414,100],[353,10,415,8],[354,8,416,6],[355,8,418,6],[355,14,418,12,"events"],[355,20,418,18],[355,23,418,21],[356,10,419,8,"onGestureHandlerEvent"],[356,31,419,29],[356,33,419,31],[356,37,419,35],[356,38,419,36,"state"],[356,43,419,41],[356,44,419,42,"allowTouches"],[356,56,419,54],[356,59,419,57,"gestureEventHandler"],[356,78,419,76],[356,81,419,79,"undefined"],[356,90,419,88],[357,10,420,8,"onGestureHandlerStateChange"],[357,37,420,35],[357,39,420,37],[357,43,420,41],[357,44,420,42,"state"],[357,49,420,47],[357,50,420,48,"allowTouches"],[357,62,420,60],[357,65,420,63,"gestureStateEventHandler"],[357,89,420,87],[357,92,420,90,"undefined"],[358,8,421,6],[358,9,421,7],[359,8,422,6],[359,12,422,10],[359,13,422,11,"propsRef"],[359,21,422,19],[359,22,422,20,"current"],[359,29,422,27],[359,32,422,30,"events"],[359,38,422,36],[360,8,423,6],[360,12,423,10,"child"],[360,17,423,15],[360,20,423,18],[360,24,423,22],[361,8,425,6],[361,12,425,10],[362,10,426,8,"child"],[362,15,426,13],[362,18,426,16,"React"],[362,23,426,21],[362,24,426,22,"Children"],[362,32,426,30],[362,33,426,31,"only"],[362,37,426,35],[362,38,426,36],[362,42,426,40],[362,43,426,41,"props"],[362,48,426,46],[362,49,426,47,"children"],[362,57,426,55],[362,58,426,56],[363,8,427,6],[363,9,427,7],[363,10,427,8],[363,17,427,15,"e"],[363,18,427,16],[363,20,427,18],[364,10,428,8],[364,16,428,14],[364,20,428,18,"Error"],[364,25,428,23],[364,26,428,24],[364,30,428,24,"tagMessage"],[364,48,428,34],[364,50,428,35],[364,53,428,38,"name"],[364,57,428,42],[364,213,428,198],[364,214,428,199],[364,215,428,200],[365,8,429,6],[366,8,431,6],[366,12,431,10,"grandChildren"],[366,25,431,23],[366,28,431,26,"child"],[366,33,431,31],[366,34,431,32,"props"],[366,39,431,37],[366,40,431,38,"children"],[366,48,431,46],[367,8,433,6],[367,12,433,10,"__DEV__"],[367,19,433,17],[367,23,433,21,"child"],[367,28,433,26],[367,29,433,27,"type"],[367,33,433,31],[367,38,433,36,"child"],[367,43,433,41],[367,44,433,42,"type"],[367,48,433,46],[367,53,433,51],[367,77,433,75],[367,81,433,79,"child"],[367,86,433,84],[367,87,433,85,"type"],[367,91,433,89],[367,92,433,90,"name"],[367,96,433,94],[367,101,433,99],[367,107,433,105],[367,111,433,109,"child"],[367,116,433,114],[367,117,433,115,"type"],[367,121,433,119],[367,122,433,120,"displayName"],[367,133,433,131],[367,138,433,136],[367,144,433,142],[367,145,433,143],[367,147,433,145],[368,10,434,8,"grandChildren"],[368,23,434,21],[368,26,434,24,"React"],[368,31,434,29],[368,32,434,30,"Children"],[368,40,434,38],[368,41,434,39,"toArray"],[368,48,434,46],[368,49,434,47,"grandChildren"],[368,62,434,60],[368,63,434,61],[369,10,435,8,"grandChildren"],[369,23,435,21],[369,24,435,22,"push"],[369,28,435,26],[369,29,435,28],[369,42,435,41,"React"],[369,47,435,46],[369,48,435,47,"createElement"],[369,61,435,60],[369,62,435,61,"PressabilityDebugView"],[369,106,435,82],[369,108,435,84],[370,12,436,10,"key"],[370,15,436,13],[370,17,436,15],[370,40,436,38],[371,12,437,10,"color"],[371,17,437,15],[371,19,437,17],[371,38,437,36],[372,12,438,10,"hitSlop"],[372,19,438,17],[372,21,438,19,"child"],[372,26,438,24],[372,27,438,25,"props"],[372,32,438,30],[372,33,438,31,"hitSlop"],[373,10,439,8],[373,11,439,9],[373,12,439,10],[373,13,439,11],[374,8,440,6],[375,8,442,6],[375,15,442,13],[375,28,442,26,"React"],[375,33,442,31],[375,34,442,32,"cloneElement"],[375,46,442,44],[375,47,442,45,"child"],[375,52,442,50],[375,54,442,50,"Object"],[375,60,442,50],[375,61,442,50,"assign"],[375,67,442,50],[376,10,443,8,"ref"],[376,13,443,11],[376,15,443,13],[376,19,443,17],[376,20,443,18,"refHandler"],[376,30,443,28],[377,10,444,8,"collapsable"],[377,21,444,19],[377,23,444,21],[378,8,444,26],[378,11,445,12],[378,15,445,12,"isTestEnv"],[378,32,445,21],[378,34,445,22],[378,35,445,23],[378,38,445,26],[379,10,446,10,"handlerType"],[379,21,446,21],[379,23,446,23,"name"],[379,27,446,27],[380,10,447,10,"handlerTag"],[380,20,447,20],[380,22,447,22],[380,26,447,26],[380,27,447,27,"handlerTag"],[380,37,447,37],[381,10,448,10,"enabled"],[381,17,448,17],[381,19,448,19],[381,23,448,23],[381,24,448,24,"props"],[381,29,448,29],[381,30,448,30,"enabled"],[382,8,449,8],[382,9,449,9],[382,12,449,12],[382,13,449,13],[382,14,449,14],[383,10,450,8,"testID"],[383,16,450,14],[383,18,450,16],[383,19,450,17,"_this$props$testID"],[383,37,450,35],[383,40,450,38],[383,44,450,42],[383,45,450,43,"props"],[383,50,450,48],[383,51,450,49,"testID"],[383,57,450,55],[383,63,450,61],[383,67,450,65],[383,71,450,69,"_this$props$testID"],[383,89,450,87],[383,94,450,92],[383,99,450,97],[383,100,450,98],[383,103,450,101,"_this$props$testID"],[383,121,450,119],[383,124,450,122,"child"],[383,129,450,127],[383,130,450,128,"props"],[383,135,450,133],[383,136,450,134,"testID"],[384,8,450,140],[384,11,451,11,"events"],[384,17,451,17],[384,20,452,9,"grandChildren"],[384,33,452,22],[384,34,452,23],[385,6,453,4],[386,4,455,2],[387,4,457,2,"_defineProperty"],[387,19,457,17],[387,20,457,18,"Handler"],[387,27,457,25],[387,29,457,27],[387,42,457,40],[387,44,457,42,"name"],[387,48,457,46],[387,49,457,47],[388,4,459,2,"_defineProperty"],[388,19,459,17],[388,20,459,18,"Handler"],[388,27,459,25],[388,29,459,27],[388,42,459,40],[388,44,459,42,"GestureHandlerRootViewContext"],[388,82,459,71],[388,83,459,72],[389,4,461,2],[389,11,461,9,"Handler"],[389,18,461,16],[390,2,462,0],[391,0,462,1],[391,3]],"functionMap":{"names":["<global>","_defineProperty","<anonymous>","UIManagerAny.setJSResponder","UIManagerAny.clearJSResponder","DeviceEventEmitter.addListener$argument_1","hasUnresolvedRefs","extract","refs.some$argument_0","createHandler","Handler","Handler#constructor","_defineProperty$argument_2","ghQueueMicrotask$argument_0","Handler#componentDidMount","setState$argument_0","Handler#componentDidUpdate","Handler#componentWillUnmount","Handler#update","Handler#setNativeProps","Handler#render"],"mappings":"AAA;ACE,iND;sCEkE;GFC;0CEC;GFC;8BGG;CHG;gCIE;CJG;2DKO;GLE;AMG;kBCE;qBCK,4BD;GDC;CNG;eSY;ECO;ICC;qDCiB;ODY;2DCE;ODoB;0CCE;ODkB;oDCE;ODG;oDCE;8BVa;WUmB;yBCM;SDE;ODC;oDCE;ODI;KDiB;IIE;gGTK;wBUC;YVE;SSE;yBDU;SCE;KJU;IME;KNQ;IOE;KPqB;IQE;yBLU;SKE;KRQ;ISE;KTM;IUE;KVsF;GDE;CTO"}},"type":"js/module"}]}