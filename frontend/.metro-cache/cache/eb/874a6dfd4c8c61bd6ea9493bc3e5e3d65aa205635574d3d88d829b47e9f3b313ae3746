{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"@egjs/hammerjs","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":36,"index":36}}],"key":"I5Lt2ouU6D9a2C2V4SJv4GWe8Fg=","exportNames":["*"]}},{"name":"./constants","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":37},"end":{"line":2,"column":108,"index":145}}],"key":"waDaw5D7vDr2hRFu0z1BqRCTzP4=","exportNames":["*"]}},{"name":"./DraggingGestureHandler","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":146},"end":{"line":3,"column":62,"index":208}}],"key":"veIIVtZ+Znwl7KqPaA+sdGzF8LE=","exportNames":["*"]}},{"name":"./utils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":209},"end":{"line":4,"column":80,"index":289}}],"key":"fIqjJ6Rx8c7Khc/wm9kX7hQXC5I=","exportNames":["*"]}},{"name":"../State","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":290},"end":{"line":5,"column":33,"index":323}}],"key":"ISRoyBmrsYyTcSqLDCBIFNoRZWE=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  var _hammerjs = _interopRequireDefault(require(_dependencyMap[1], \"@egjs/hammerjs\"));\n  var _constants = require(_dependencyMap[2], \"./constants\");\n  var _DraggingGestureHandler = _interopRequireDefault(require(_dependencyMap[3], \"./DraggingGestureHandler\"));\n  var _utils = require(_dependencyMap[4], \"./utils\");\n  var _State = require(_dependencyMap[5], \"../State\");\n  class PanGestureHandler extends _DraggingGestureHandler.default {\n    get name() {\n      return 'pan';\n    }\n    get NativeGestureClass() {\n      return _hammerjs.default.Pan;\n    }\n    getHammerConfig() {\n      return Object.assign({}, super.getHammerConfig(), {\n        direction: this.getDirection()\n      });\n    }\n    getState(type) {\n      const nextState = super.getState(type); // Ensure that the first state sent is `BEGAN` and not `ACTIVE`\n\n      if (this.previousState === _State.State.UNDETERMINED && nextState === _State.State.ACTIVE) {\n        return _State.State.BEGAN;\n      }\n      return nextState;\n    }\n    getDirection() {\n      const config = this.getConfig();\n      const {\n        activeOffsetXStart,\n        activeOffsetXEnd,\n        activeOffsetYStart,\n        activeOffsetYEnd,\n        minDist\n      } = config;\n      let directions = [];\n      let horizontalDirections = [];\n      if (!(0, _utils.isnan)(minDist)) {\n        return _hammerjs.default.DIRECTION_ALL;\n      }\n      if (!(0, _utils.isnan)(activeOffsetXStart)) {\n        horizontalDirections.push(_hammerjs.default.DIRECTION_LEFT);\n      }\n      if (!(0, _utils.isnan)(activeOffsetXEnd)) {\n        horizontalDirections.push(_hammerjs.default.DIRECTION_RIGHT);\n      }\n      if (horizontalDirections.length === 2) {\n        horizontalDirections = [_hammerjs.default.DIRECTION_HORIZONTAL];\n      }\n      directions = directions.concat(horizontalDirections);\n      let verticalDirections = [];\n      if (!(0, _utils.isnan)(activeOffsetYStart)) {\n        verticalDirections.push(_hammerjs.default.DIRECTION_UP);\n      }\n      if (!(0, _utils.isnan)(activeOffsetYEnd)) {\n        verticalDirections.push(_hammerjs.default.DIRECTION_DOWN);\n      }\n      if (verticalDirections.length === 2) {\n        verticalDirections = [_hammerjs.default.DIRECTION_VERTICAL];\n      }\n      directions = directions.concat(verticalDirections);\n      if (!directions.length) {\n        return _hammerjs.default.DIRECTION_NONE;\n      }\n      if (directions[0] === _hammerjs.default.DIRECTION_HORIZONTAL && directions[1] === _hammerjs.default.DIRECTION_VERTICAL) {\n        return _hammerjs.default.DIRECTION_ALL;\n      }\n      if (horizontalDirections.length && verticalDirections.length) {\n        return _hammerjs.default.DIRECTION_ALL;\n      }\n      return directions[0];\n    }\n    getConfig() {\n      if (!this.hasCustomActivationCriteria) {\n        // Default config\n        // If no params have been defined then this config should emulate the native gesture as closely as possible.\n        return {\n          minDistSq: 10\n        };\n      }\n      return this.config;\n    }\n    shouldFailUnderCustomCriteria({\n      deltaX,\n      deltaY\n    }, criteria) {\n      return !(0, _utils.isnan)(criteria.failOffsetXStart) && deltaX < criteria.failOffsetXStart || !(0, _utils.isnan)(criteria.failOffsetXEnd) && deltaX > criteria.failOffsetXEnd || !(0, _utils.isnan)(criteria.failOffsetYStart) && deltaY < criteria.failOffsetYStart || !(0, _utils.isnan)(criteria.failOffsetYEnd) && deltaY > criteria.failOffsetYEnd;\n    }\n    shouldActivateUnderCustomCriteria({\n      deltaX,\n      deltaY,\n      velocity\n    }, criteria) {\n      return !(0, _utils.isnan)(criteria.activeOffsetXStart) && deltaX < criteria.activeOffsetXStart || !(0, _utils.isnan)(criteria.activeOffsetXEnd) && deltaX > criteria.activeOffsetXEnd || !(0, _utils.isnan)(criteria.activeOffsetYStart) && deltaY < criteria.activeOffsetYStart || !(0, _utils.isnan)(criteria.activeOffsetYEnd) && deltaY > criteria.activeOffsetYEnd || (0, _utils.TEST_MIN_IF_NOT_NAN)((0, _utils.VEC_LEN_SQ)({\n        x: deltaX,\n        y: deltaY\n      }), criteria.minDistSq) || (0, _utils.TEST_MIN_IF_NOT_NAN)(velocity.x, criteria.minVelocityX) || (0, _utils.TEST_MIN_IF_NOT_NAN)(velocity.y, criteria.minVelocityY) || (0, _utils.TEST_MIN_IF_NOT_NAN)((0, _utils.VEC_LEN_SQ)(velocity), criteria.minVelocitySq);\n    }\n    shouldMultiFingerPanFail({\n      pointerLength,\n      scale,\n      deltaRotation\n    }) {\n      if (pointerLength <= 1) {\n        return false;\n      } // Test if the pan had too much pinching or rotating.\n\n      const deltaScale = Math.abs(scale - 1);\n      const absDeltaRotation = Math.abs(deltaRotation);\n      if (deltaScale > _constants.MULTI_FINGER_PAN_MAX_PINCH_THRESHOLD) {\n        // > If the threshold doesn't seem right.\n        // You can log the value which it failed at here:\n        return true;\n      }\n      if (absDeltaRotation > _constants.MULTI_FINGER_PAN_MAX_ROTATION_THRESHOLD) {\n        // > If the threshold doesn't seem right.\n        // You can log the value which it failed at here:\n        return true;\n      }\n      return false;\n    }\n    updateHasCustomActivationCriteria(criteria) {\n      return (0, _utils.isValidNumber)(criteria.minDistSq) || (0, _utils.isValidNumber)(criteria.minVelocityX) || (0, _utils.isValidNumber)(criteria.minVelocityY) || (0, _utils.isValidNumber)(criteria.minVelocitySq) || (0, _utils.isValidNumber)(criteria.activeOffsetXStart) || (0, _utils.isValidNumber)(criteria.activeOffsetXEnd) || (0, _utils.isValidNumber)(criteria.activeOffsetYStart) || (0, _utils.isValidNumber)(criteria.activeOffsetYEnd);\n    }\n    isGestureEnabledForEvent(props, _recognizer, inputData) {\n      if (this.shouldFailUnderCustomCriteria(inputData, props)) {\n        return {\n          failed: true\n        };\n      }\n      const velocity = {\n        x: inputData.velocityX,\n        y: inputData.velocityY\n      };\n      if (this.hasCustomActivationCriteria && this.shouldActivateUnderCustomCriteria({\n        deltaX: inputData.deltaX,\n        deltaY: inputData.deltaY,\n        velocity\n      }, props)) {\n        if (this.shouldMultiFingerPanFail({\n          pointerLength: inputData.maxPointers,\n          scale: inputData.scale,\n          deltaRotation: inputData.deltaRotation\n        })) {\n          return {\n            failed: true\n          };\n        }\n        return {\n          success: true\n        };\n      }\n      return {\n        success: false\n      };\n    }\n  }\n  var _default = exports.default = PanGestureHandler;\n});","lineCount":164,"map":[[7,2,1,0],[7,6,1,0,"_hammerjs"],[7,15,1,0],[7,18,1,0,"_interopRequireDefault"],[7,40,1,0],[7,41,1,0,"require"],[7,48,1,0],[7,49,1,0,"_dependencyMap"],[7,63,1,0],[8,2,2,0],[8,6,2,0,"_constants"],[8,16,2,0],[8,19,2,0,"require"],[8,26,2,0],[8,27,2,0,"_dependencyMap"],[8,41,2,0],[9,2,3,0],[9,6,3,0,"_DraggingGestureHandler"],[9,29,3,0],[9,32,3,0,"_interopRequireDefault"],[9,54,3,0],[9,55,3,0,"require"],[9,62,3,0],[9,63,3,0,"_dependencyMap"],[9,77,3,0],[10,2,4,0],[10,6,4,0,"_utils"],[10,12,4,0],[10,15,4,0,"require"],[10,22,4,0],[10,23,4,0,"_dependencyMap"],[10,37,4,0],[11,2,5,0],[11,6,5,0,"_State"],[11,12,5,0],[11,15,5,0,"require"],[11,22,5,0],[11,23,5,0,"_dependencyMap"],[11,37,5,0],[12,2,7,0],[12,8,7,6,"PanGestureHandler"],[12,25,7,23],[12,34,7,32,"DraggingGestureHandler"],[12,65,7,54],[12,66,7,55],[13,4,8,2],[13,8,8,6,"name"],[13,12,8,10,"name"],[13,13,8,10],[13,15,8,13],[14,6,9,4],[14,13,9,11],[14,18,9,16],[15,4,10,2],[16,4,12,2],[16,8,12,6,"NativeGestureClass"],[16,26,12,24,"NativeGestureClass"],[16,27,12,24],[16,29,12,27],[17,6,13,4],[17,13,13,11,"Hammer"],[17,30,13,17],[17,31,13,18,"Pan"],[17,34,13,21],[18,4,14,2],[19,4,16,2,"getHammerConfig"],[19,19,16,17,"getHammerConfig"],[19,20,16,17],[19,22,16,20],[20,6,17,4],[20,13,17,4,"Object"],[20,19,17,4],[20,20,17,4,"assign"],[20,26,17,4],[20,31,17,16],[20,36,17,21],[20,37,17,22,"getHammerConfig"],[20,52,17,37],[20,53,17,38],[20,54,17,39],[21,8,18,6,"direction"],[21,17,18,15],[21,19,18,17],[21,23,18,21],[21,24,18,22,"getDirection"],[21,36,18,34],[21,37,18,35],[22,6,18,36],[23,4,20,2],[24,4,22,2,"getState"],[24,12,22,10,"getState"],[24,13,22,11,"type"],[24,17,22,15],[24,19,22,17],[25,6,23,4],[25,12,23,10,"nextState"],[25,21,23,19],[25,24,23,22],[25,29,23,27],[25,30,23,28,"getState"],[25,38,23,36],[25,39,23,37,"type"],[25,43,23,41],[25,44,23,42],[25,45,23,43],[25,46,23,44],[27,6,25,4],[27,10,25,8],[27,14,25,12],[27,15,25,13,"previousState"],[27,28,25,26],[27,33,25,31,"State"],[27,45,25,36],[27,46,25,37,"UNDETERMINED"],[27,58,25,49],[27,62,25,53,"nextState"],[27,71,25,62],[27,76,25,67,"State"],[27,88,25,72],[27,89,25,73,"ACTIVE"],[27,95,25,79],[27,97,25,81],[28,8,26,6],[28,15,26,13,"State"],[28,27,26,18],[28,28,26,19,"BEGAN"],[28,33,26,24],[29,6,27,4],[30,6,29,4],[30,13,29,11,"nextState"],[30,22,29,20],[31,4,30,2],[32,4,32,2,"getDirection"],[32,16,32,14,"getDirection"],[32,17,32,14],[32,19,32,17],[33,6,33,4],[33,12,33,10,"config"],[33,18,33,16],[33,21,33,19],[33,25,33,23],[33,26,33,24,"getConfig"],[33,35,33,33],[33,36,33,34],[33,37,33,35],[34,6,34,4],[34,12,34,10],[35,8,35,6,"activeOffsetXStart"],[35,26,35,24],[36,8,36,6,"activeOffsetXEnd"],[36,24,36,22],[37,8,37,6,"activeOffsetYStart"],[37,26,37,24],[38,8,38,6,"activeOffsetYEnd"],[38,24,38,22],[39,8,39,6,"minDist"],[40,6,40,4],[40,7,40,5],[40,10,40,8,"config"],[40,16,40,14],[41,6,41,4],[41,10,41,8,"directions"],[41,20,41,18],[41,23,41,21],[41,25,41,23],[42,6,42,4],[42,10,42,8,"horizontalDirections"],[42,30,42,28],[42,33,42,31],[42,35,42,33],[43,6,44,4],[43,10,44,8],[43,11,44,9],[43,15,44,9,"isnan"],[43,27,44,14],[43,29,44,15,"minDist"],[43,36,44,22],[43,37,44,23],[43,39,44,25],[44,8,45,6],[44,15,45,13,"Hammer"],[44,32,45,19],[44,33,45,20,"DIRECTION_ALL"],[44,46,45,33],[45,6,46,4],[46,6,48,4],[46,10,48,8],[46,11,48,9],[46,15,48,9,"isnan"],[46,27,48,14],[46,29,48,15,"activeOffsetXStart"],[46,47,48,33],[46,48,48,34],[46,50,48,36],[47,8,49,6,"horizontalDirections"],[47,28,49,26],[47,29,49,27,"push"],[47,33,49,31],[47,34,49,32,"Hammer"],[47,51,49,38],[47,52,49,39,"DIRECTION_LEFT"],[47,66,49,53],[47,67,49,54],[48,6,50,4],[49,6,52,4],[49,10,52,8],[49,11,52,9],[49,15,52,9,"isnan"],[49,27,52,14],[49,29,52,15,"activeOffsetXEnd"],[49,45,52,31],[49,46,52,32],[49,48,52,34],[50,8,53,6,"horizontalDirections"],[50,28,53,26],[50,29,53,27,"push"],[50,33,53,31],[50,34,53,32,"Hammer"],[50,51,53,38],[50,52,53,39,"DIRECTION_RIGHT"],[50,67,53,54],[50,68,53,55],[51,6,54,4],[52,6,56,4],[52,10,56,8,"horizontalDirections"],[52,30,56,28],[52,31,56,29,"length"],[52,37,56,35],[52,42,56,40],[52,43,56,41],[52,45,56,43],[53,8,57,6,"horizontalDirections"],[53,28,57,26],[53,31,57,29],[53,32,57,30,"Hammer"],[53,49,57,36],[53,50,57,37,"DIRECTION_HORIZONTAL"],[53,70,57,57],[53,71,57,58],[54,6,58,4],[55,6,60,4,"directions"],[55,16,60,14],[55,19,60,17,"directions"],[55,29,60,27],[55,30,60,28,"concat"],[55,36,60,34],[55,37,60,35,"horizontalDirections"],[55,57,60,55],[55,58,60,56],[56,6,61,4],[56,10,61,8,"verticalDirections"],[56,28,61,26],[56,31,61,29],[56,33,61,31],[57,6,63,4],[57,10,63,8],[57,11,63,9],[57,15,63,9,"isnan"],[57,27,63,14],[57,29,63,15,"activeOffsetYStart"],[57,47,63,33],[57,48,63,34],[57,50,63,36],[58,8,64,6,"verticalDirections"],[58,26,64,24],[58,27,64,25,"push"],[58,31,64,29],[58,32,64,30,"Hammer"],[58,49,64,36],[58,50,64,37,"DIRECTION_UP"],[58,62,64,49],[58,63,64,50],[59,6,65,4],[60,6,67,4],[60,10,67,8],[60,11,67,9],[60,15,67,9,"isnan"],[60,27,67,14],[60,29,67,15,"activeOffsetYEnd"],[60,45,67,31],[60,46,67,32],[60,48,67,34],[61,8,68,6,"verticalDirections"],[61,26,68,24],[61,27,68,25,"push"],[61,31,68,29],[61,32,68,30,"Hammer"],[61,49,68,36],[61,50,68,37,"DIRECTION_DOWN"],[61,64,68,51],[61,65,68,52],[62,6,69,4],[63,6,71,4],[63,10,71,8,"verticalDirections"],[63,28,71,26],[63,29,71,27,"length"],[63,35,71,33],[63,40,71,38],[63,41,71,39],[63,43,71,41],[64,8,72,6,"verticalDirections"],[64,26,72,24],[64,29,72,27],[64,30,72,28,"Hammer"],[64,47,72,34],[64,48,72,35,"DIRECTION_VERTICAL"],[64,66,72,53],[64,67,72,54],[65,6,73,4],[66,6,75,4,"directions"],[66,16,75,14],[66,19,75,17,"directions"],[66,29,75,27],[66,30,75,28,"concat"],[66,36,75,34],[66,37,75,35,"verticalDirections"],[66,55,75,53],[66,56,75,54],[67,6,77,4],[67,10,77,8],[67,11,77,9,"directions"],[67,21,77,19],[67,22,77,20,"length"],[67,28,77,26],[67,30,77,28],[68,8,78,6],[68,15,78,13,"Hammer"],[68,32,78,19],[68,33,78,20,"DIRECTION_NONE"],[68,47,78,34],[69,6,79,4],[70,6,81,4],[70,10,81,8,"directions"],[70,20,81,18],[70,21,81,19],[70,22,81,20],[70,23,81,21],[70,28,81,26,"Hammer"],[70,45,81,32],[70,46,81,33,"DIRECTION_HORIZONTAL"],[70,66,81,53],[70,70,81,57,"directions"],[70,80,81,67],[70,81,81,68],[70,82,81,69],[70,83,81,70],[70,88,81,75,"Hammer"],[70,105,81,81],[70,106,81,82,"DIRECTION_VERTICAL"],[70,124,81,100],[70,126,81,102],[71,8,82,6],[71,15,82,13,"Hammer"],[71,32,82,19],[71,33,82,20,"DIRECTION_ALL"],[71,46,82,33],[72,6,83,4],[73,6,85,4],[73,10,85,8,"horizontalDirections"],[73,30,85,28],[73,31,85,29,"length"],[73,37,85,35],[73,41,85,39,"verticalDirections"],[73,59,85,57],[73,60,85,58,"length"],[73,66,85,64],[73,68,85,66],[74,8,86,6],[74,15,86,13,"Hammer"],[74,32,86,19],[74,33,86,20,"DIRECTION_ALL"],[74,46,86,33],[75,6,87,4],[76,6,89,4],[76,13,89,11,"directions"],[76,23,89,21],[76,24,89,22],[76,25,89,23],[76,26,89,24],[77,4,90,2],[78,4,92,2,"getConfig"],[78,13,92,11,"getConfig"],[78,14,92,11],[78,16,92,14],[79,6,93,4],[79,10,93,8],[79,11,93,9],[79,15,93,13],[79,16,93,14,"hasCustomActivationCriteria"],[79,43,93,41],[79,45,93,43],[80,8,94,6],[81,8,95,6],[82,8,96,6],[82,15,96,13],[83,10,97,8,"minDistSq"],[83,19,97,17],[83,21,97,19],[84,8,98,6],[84,9,98,7],[85,6,99,4],[86,6,101,4],[86,13,101,11],[86,17,101,15],[86,18,101,16,"config"],[86,24,101,22],[87,4,102,2],[88,4,104,2,"shouldFailUnderCustomCriteria"],[88,33,104,31,"shouldFailUnderCustomCriteria"],[88,34,104,32],[89,6,105,4,"deltaX"],[89,12,105,10],[90,6,106,4,"deltaY"],[91,4,107,2],[91,5,107,3],[91,7,107,5,"criteria"],[91,15,107,13],[91,17,107,15],[92,6,108,4],[92,13,108,11],[92,14,108,12],[92,18,108,12,"isnan"],[92,30,108,17],[92,32,108,18,"criteria"],[92,40,108,26],[92,41,108,27,"failOffsetXStart"],[92,57,108,43],[92,58,108,44],[92,62,108,48,"deltaX"],[92,68,108,54],[92,71,108,57,"criteria"],[92,79,108,65],[92,80,108,66,"failOffsetXStart"],[92,96,108,82],[92,100,108,86],[92,101,108,87],[92,105,108,87,"isnan"],[92,117,108,92],[92,119,108,93,"criteria"],[92,127,108,101],[92,128,108,102,"failOffsetXEnd"],[92,142,108,116],[92,143,108,117],[92,147,108,121,"deltaX"],[92,153,108,127],[92,156,108,130,"criteria"],[92,164,108,138],[92,165,108,139,"failOffsetXEnd"],[92,179,108,153],[92,183,108,157],[92,184,108,158],[92,188,108,158,"isnan"],[92,200,108,163],[92,202,108,164,"criteria"],[92,210,108,172],[92,211,108,173,"failOffsetYStart"],[92,227,108,189],[92,228,108,190],[92,232,108,194,"deltaY"],[92,238,108,200],[92,241,108,203,"criteria"],[92,249,108,211],[92,250,108,212,"failOffsetYStart"],[92,266,108,228],[92,270,108,232],[92,271,108,233],[92,275,108,233,"isnan"],[92,287,108,238],[92,289,108,239,"criteria"],[92,297,108,247],[92,298,108,248,"failOffsetYEnd"],[92,312,108,262],[92,313,108,263],[92,317,108,267,"deltaY"],[92,323,108,273],[92,326,108,276,"criteria"],[92,334,108,284],[92,335,108,285,"failOffsetYEnd"],[92,349,108,299],[93,4,109,2],[94,4,111,2,"shouldActivateUnderCustomCriteria"],[94,37,111,35,"shouldActivateUnderCustomCriteria"],[94,38,111,36],[95,6,112,4,"deltaX"],[95,12,112,10],[96,6,113,4,"deltaY"],[96,12,113,10],[97,6,114,4,"velocity"],[98,4,115,2],[98,5,115,3],[98,7,115,5,"criteria"],[98,15,115,13],[98,17,115,15],[99,6,116,4],[99,13,116,11],[99,14,116,12],[99,18,116,12,"isnan"],[99,30,116,17],[99,32,116,18,"criteria"],[99,40,116,26],[99,41,116,27,"activeOffsetXStart"],[99,59,116,45],[99,60,116,46],[99,64,116,50,"deltaX"],[99,70,116,56],[99,73,116,59,"criteria"],[99,81,116,67],[99,82,116,68,"activeOffsetXStart"],[99,100,116,86],[99,104,116,90],[99,105,116,91],[99,109,116,91,"isnan"],[99,121,116,96],[99,123,116,97,"criteria"],[99,131,116,105],[99,132,116,106,"activeOffsetXEnd"],[99,148,116,122],[99,149,116,123],[99,153,116,127,"deltaX"],[99,159,116,133],[99,162,116,136,"criteria"],[99,170,116,144],[99,171,116,145,"activeOffsetXEnd"],[99,187,116,161],[99,191,116,165],[99,192,116,166],[99,196,116,166,"isnan"],[99,208,116,171],[99,210,116,172,"criteria"],[99,218,116,180],[99,219,116,181,"activeOffsetYStart"],[99,237,116,199],[99,238,116,200],[99,242,116,204,"deltaY"],[99,248,116,210],[99,251,116,213,"criteria"],[99,259,116,221],[99,260,116,222,"activeOffsetYStart"],[99,278,116,240],[99,282,116,244],[99,283,116,245],[99,287,116,245,"isnan"],[99,299,116,250],[99,301,116,251,"criteria"],[99,309,116,259],[99,310,116,260,"activeOffsetYEnd"],[99,326,116,276],[99,327,116,277],[99,331,116,281,"deltaY"],[99,337,116,287],[99,340,116,290,"criteria"],[99,348,116,298],[99,349,116,299,"activeOffsetYEnd"],[99,365,116,315],[99,369,116,319],[99,373,116,319,"TEST_MIN_IF_NOT_NAN"],[99,399,116,338],[99,401,116,339],[99,405,116,339,"VEC_LEN_SQ"],[99,422,116,349],[99,424,116,350],[100,8,117,6,"x"],[100,9,117,7],[100,11,117,9,"deltaX"],[100,17,117,15],[101,8,118,6,"y"],[101,9,118,7],[101,11,118,9,"deltaY"],[102,6,119,4],[102,7,119,5],[102,8,119,6],[102,10,119,8,"criteria"],[102,18,119,16],[102,19,119,17,"minDistSq"],[102,28,119,26],[102,29,119,27],[102,33,119,31],[102,37,119,31,"TEST_MIN_IF_NOT_NAN"],[102,63,119,50],[102,65,119,51,"velocity"],[102,73,119,59],[102,74,119,60,"x"],[102,75,119,61],[102,77,119,63,"criteria"],[102,85,119,71],[102,86,119,72,"minVelocityX"],[102,98,119,84],[102,99,119,85],[102,103,119,89],[102,107,119,89,"TEST_MIN_IF_NOT_NAN"],[102,133,119,108],[102,135,119,109,"velocity"],[102,143,119,117],[102,144,119,118,"y"],[102,145,119,119],[102,147,119,121,"criteria"],[102,155,119,129],[102,156,119,130,"minVelocityY"],[102,168,119,142],[102,169,119,143],[102,173,119,147],[102,177,119,147,"TEST_MIN_IF_NOT_NAN"],[102,203,119,166],[102,205,119,167],[102,209,119,167,"VEC_LEN_SQ"],[102,226,119,177],[102,228,119,178,"velocity"],[102,236,119,186],[102,237,119,187],[102,239,119,189,"criteria"],[102,247,119,197],[102,248,119,198,"minVelocitySq"],[102,261,119,211],[102,262,119,212],[103,4,120,2],[104,4,122,2,"shouldMultiFingerPanFail"],[104,28,122,26,"shouldMultiFingerPanFail"],[104,29,122,27],[105,6,123,4,"pointerLength"],[105,19,123,17],[106,6,124,4,"scale"],[106,11,124,9],[107,6,125,4,"deltaRotation"],[108,4,126,2],[108,5,126,3],[108,7,126,5],[109,6,127,4],[109,10,127,8,"pointerLength"],[109,23,127,21],[109,27,127,25],[109,28,127,26],[109,30,127,28],[110,8,128,6],[110,15,128,13],[110,20,128,18],[111,6,129,4],[111,7,129,5],[111,8,129,6],[113,6,132,4],[113,12,132,10,"deltaScale"],[113,22,132,20],[113,25,132,23,"Math"],[113,29,132,27],[113,30,132,28,"abs"],[113,33,132,31],[113,34,132,32,"scale"],[113,39,132,37],[113,42,132,40],[113,43,132,41],[113,44,132,42],[114,6,133,4],[114,12,133,10,"absDeltaRotation"],[114,28,133,26],[114,31,133,29,"Math"],[114,35,133,33],[114,36,133,34,"abs"],[114,39,133,37],[114,40,133,38,"deltaRotation"],[114,53,133,51],[114,54,133,52],[115,6,135,4],[115,10,135,8,"deltaScale"],[115,20,135,18],[115,23,135,21,"MULTI_FINGER_PAN_MAX_PINCH_THRESHOLD"],[115,70,135,57],[115,72,135,59],[116,8,136,6],[117,8,137,6],[118,8,138,6],[118,15,138,13],[118,19,138,17],[119,6,139,4],[120,6,141,4],[120,10,141,8,"absDeltaRotation"],[120,26,141,24],[120,29,141,27,"MULTI_FINGER_PAN_MAX_ROTATION_THRESHOLD"],[120,79,141,66],[120,81,141,68],[121,8,142,6],[122,8,143,6],[123,8,144,6],[123,15,144,13],[123,19,144,17],[124,6,145,4],[125,6,147,4],[125,13,147,11],[125,18,147,16],[126,4,148,2],[127,4,150,2,"updateHasCustomActivationCriteria"],[127,37,150,35,"updateHasCustomActivationCriteria"],[127,38,150,36,"criteria"],[127,46,150,44],[127,48,150,46],[128,6,151,4],[128,13,151,11],[128,17,151,11,"isValidNumber"],[128,37,151,24],[128,39,151,25,"criteria"],[128,47,151,33],[128,48,151,34,"minDistSq"],[128,57,151,43],[128,58,151,44],[128,62,151,48],[128,66,151,48,"isValidNumber"],[128,86,151,61],[128,88,151,62,"criteria"],[128,96,151,70],[128,97,151,71,"minVelocityX"],[128,109,151,83],[128,110,151,84],[128,114,151,88],[128,118,151,88,"isValidNumber"],[128,138,151,101],[128,140,151,102,"criteria"],[128,148,151,110],[128,149,151,111,"minVelocityY"],[128,161,151,123],[128,162,151,124],[128,166,151,128],[128,170,151,128,"isValidNumber"],[128,190,151,141],[128,192,151,142,"criteria"],[128,200,151,150],[128,201,151,151,"minVelocitySq"],[128,214,151,164],[128,215,151,165],[128,219,151,169],[128,223,151,169,"isValidNumber"],[128,243,151,182],[128,245,151,183,"criteria"],[128,253,151,191],[128,254,151,192,"activeOffsetXStart"],[128,272,151,210],[128,273,151,211],[128,277,151,215],[128,281,151,215,"isValidNumber"],[128,301,151,228],[128,303,151,229,"criteria"],[128,311,151,237],[128,312,151,238,"activeOffsetXEnd"],[128,328,151,254],[128,329,151,255],[128,333,151,259],[128,337,151,259,"isValidNumber"],[128,357,151,272],[128,359,151,273,"criteria"],[128,367,151,281],[128,368,151,282,"activeOffsetYStart"],[128,386,151,300],[128,387,151,301],[128,391,151,305],[128,395,151,305,"isValidNumber"],[128,415,151,318],[128,417,151,319,"criteria"],[128,425,151,327],[128,426,151,328,"activeOffsetYEnd"],[128,442,151,344],[128,443,151,345],[129,4,152,2],[130,4,154,2,"isGestureEnabledForEvent"],[130,28,154,26,"isGestureEnabledForEvent"],[130,29,154,27,"props"],[130,34,154,32],[130,36,154,34,"_recognizer"],[130,47,154,45],[130,49,154,47,"inputData"],[130,58,154,56],[130,60,154,58],[131,6,155,4],[131,10,155,8],[131,14,155,12],[131,15,155,13,"shouldFailUnderCustomCriteria"],[131,44,155,42],[131,45,155,43,"inputData"],[131,54,155,52],[131,56,155,54,"props"],[131,61,155,59],[131,62,155,60],[131,64,155,62],[132,8,156,6],[132,15,156,13],[133,10,157,8,"failed"],[133,16,157,14],[133,18,157,16],[134,8,158,6],[134,9,158,7],[135,6,159,4],[136,6,161,4],[136,12,161,10,"velocity"],[136,20,161,18],[136,23,161,21],[137,8,162,6,"x"],[137,9,162,7],[137,11,162,9,"inputData"],[137,20,162,18],[137,21,162,19,"velocityX"],[137,30,162,28],[138,8,163,6,"y"],[138,9,163,7],[138,11,163,9,"inputData"],[138,20,163,18],[138,21,163,19,"velocityY"],[139,6,164,4],[139,7,164,5],[140,6,166,4],[140,10,166,8],[140,14,166,12],[140,15,166,13,"hasCustomActivationCriteria"],[140,42,166,40],[140,46,166,44],[140,50,166,48],[140,51,166,49,"shouldActivateUnderCustomCriteria"],[140,84,166,82],[140,85,166,83],[141,8,167,6,"deltaX"],[141,14,167,12],[141,16,167,14,"inputData"],[141,25,167,23],[141,26,167,24,"deltaX"],[141,32,167,30],[142,8,168,6,"deltaY"],[142,14,168,12],[142,16,168,14,"inputData"],[142,25,168,23],[142,26,168,24,"deltaY"],[142,32,168,30],[143,8,169,6,"velocity"],[144,6,170,4],[144,7,170,5],[144,9,170,7,"props"],[144,14,170,12],[144,15,170,13],[144,17,170,15],[145,8,171,6],[145,12,171,10],[145,16,171,14],[145,17,171,15,"shouldMultiFingerPanFail"],[145,41,171,39],[145,42,171,40],[146,10,172,8,"pointerLength"],[146,23,172,21],[146,25,172,23,"inputData"],[146,34,172,32],[146,35,172,33,"maxPointers"],[146,46,172,44],[147,10,173,8,"scale"],[147,15,173,13],[147,17,173,15,"inputData"],[147,26,173,24],[147,27,173,25,"scale"],[147,32,173,30],[148,10,174,8,"deltaRotation"],[148,23,174,21],[148,25,174,23,"inputData"],[148,34,174,32],[148,35,174,33,"deltaRotation"],[149,8,175,6],[149,9,175,7],[149,10,175,8],[149,12,175,10],[150,10,176,8],[150,17,176,15],[151,12,177,10,"failed"],[151,18,177,16],[151,20,177,18],[152,10,178,8],[152,11,178,9],[153,8,179,6],[154,8,181,6],[154,15,181,13],[155,10,182,8,"success"],[155,17,182,15],[155,19,182,17],[156,8,183,6],[156,9,183,7],[157,6,184,4],[158,6,186,4],[158,13,186,11],[159,8,187,6,"success"],[159,15,187,13],[159,17,187,15],[160,6,188,4],[160,7,188,5],[161,4,189,2],[162,2,191,0],[163,2,191,1],[163,6,191,1,"_default"],[163,14,191,1],[163,17,191,1,"exports"],[163,24,191,1],[163,25,191,1,"default"],[163,32,191,1],[163,35,193,15,"PanGestureHandler"],[163,52,193,32],[164,0,193,32],[164,3]],"functionMap":{"names":["<global>","PanGestureHandler","get__name","get__NativeGestureClass","getHammerConfig","getState","getDirection","getConfig","shouldFailUnderCustomCriteria","shouldActivateUnderCustomCriteria","shouldMultiFingerPanFail","updateHasCustomActivationCriteria","isGestureEnabledForEvent"],"mappings":"AAA;ACM;ECC;GDE;EEE;GFE;EGE;GHI;EIE;GJQ;EKE;GL0D;EME;GNU;EOE;GPK;EQE;GRS;ESE;GT0B;EUE;GVE;EWE;GXmC;CDE"}},"type":"js/module"}]}