{"dependencies":[{"name":"./gesture","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":211},"end":{"line":3,"column":49,"index":260}}],"key":"o5NgfUJQHKr9PBMfvlu69EXuwZE=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.PanGesture = void 0;\n  var _gesture = require(_dependencyMap[0], \"./gesture\");\n  function _defineProperty(obj, key, value) {\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    } else {\n      obj[key] = value;\n    }\n    return obj;\n  }\n  const _worklet_6591024890621_init_data = {\n    code: \"function changeEventCalculator_reactNativeGestureHandler_panGestureJs1(current,previous){let changePayload;if(previous===undefined){changePayload={changeX:current.translationX,changeY:current.translationY};}else{changePayload={changeX:current.translationX-previous.translationX,changeY:current.translationY-previous.translationY};}return{...current,...changePayload};}\",\n    location: \"/app/frontend/node_modules/react-native-gesture-handler/lib/module/handlers/gestures/panGesture.js\",\n    sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"changeEventCalculator_reactNativeGestureHandler_panGestureJs1\\\",\\\"current\\\",\\\"previous\\\",\\\"changePayload\\\",\\\"undefined\\\",\\\"changeX\\\",\\\"translationX\\\",\\\"changeY\\\",\\\"translationY\\\"],\\\"sources\\\":[\\\"/app/frontend/node_modules/react-native-gesture-handler/lib/module/handlers/gestures/panGesture.js\\\"],\\\"mappings\\\":\\\"AAIA,SAAAA,6DAAkDA,CAAAC,OAAA,CAAAC,QAAA,EAGhD,GAAI,CAAAC,aAAa,CAEjB,GAAID,QAAQ,GAAKE,SAAS,CAAE,CAC1BD,aAAa,CAAG,CACdE,OAAO,CAAEJ,OAAO,CAACK,YAAY,CAC7BC,OAAO,CAAEN,OAAO,CAACO,YACnB,CAAC,CACH,CAAC,IAAM,CACLL,aAAa,CAAG,CACdE,OAAO,CAAEJ,OAAO,CAACK,YAAY,CAAGJ,QAAQ,CAACI,YAAY,CACrDC,OAAO,CAAEN,OAAO,CAACO,YAAY,CAAGN,QAAQ,CAACM,YAC3C,CAAC,CACH,CAEA,MAAO,CAAE,GAAGP,OAAO,CACjB,GAAGE,aACL,CAAC,CACH\\\",\\\"ignoreList\\\":[]}\",\n    version: \"3.17.5\"\n  };\n  const changeEventCalculator = function () {\n    const _e = [new global.Error(), 1, -27];\n    const changeEventCalculator = function (current, previous) {\n      let changePayload;\n      if (previous === undefined) {\n        changePayload = {\n          changeX: current.translationX,\n          changeY: current.translationY\n        };\n      } else {\n        changePayload = {\n          changeX: current.translationX - previous.translationX,\n          changeY: current.translationY - previous.translationY\n        };\n      }\n      return Object.assign({}, current, changePayload);\n    };\n    changeEventCalculator.__closure = {};\n    changeEventCalculator.__workletHash = 6591024890621;\n    changeEventCalculator.__initData = _worklet_6591024890621_init_data;\n    changeEventCalculator.__stackDetails = _e;\n    return changeEventCalculator;\n  }();\n  class PanGesture extends _gesture.ContinousBaseGesture {\n    constructor() {\n      super();\n      _defineProperty(this, \"config\", {});\n      this.handlerName = 'PanGestureHandler';\n    }\n    /**\n     * Range along Y axis (in points) where fingers travels without activation of gesture.\n     * @param offset\n     * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/pan-gesture#activeoffsetyvalue-number--number\n     */\n\n    activeOffsetY(offset) {\n      if (Array.isArray(offset)) {\n        this.config.activeOffsetYStart = offset[0];\n        this.config.activeOffsetYEnd = offset[1];\n      } else if (offset < 0) {\n        this.config.activeOffsetYStart = offset;\n      } else {\n        this.config.activeOffsetYEnd = offset;\n      }\n      return this;\n    }\n    /**\n     * Range along X axis (in points) where fingers travels without activation of gesture.\n     * @param offset\n     * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/pan-gesture#activeoffsetxvalue-number--number\n     */\n\n    activeOffsetX(offset) {\n      if (Array.isArray(offset)) {\n        this.config.activeOffsetXStart = offset[0];\n        this.config.activeOffsetXEnd = offset[1];\n      } else if (offset < 0) {\n        this.config.activeOffsetXStart = offset;\n      } else {\n        this.config.activeOffsetXEnd = offset;\n      }\n      return this;\n    }\n    /**\n     * When the finger moves outside this range (in points) along Y axis and gesture hasn't yet activated it will fail recognizing the gesture.\n     * @param offset\n     * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/pan-gesture#failoffsetyvalue-number--number\n     */\n\n    failOffsetY(offset) {\n      if (Array.isArray(offset)) {\n        this.config.failOffsetYStart = offset[0];\n        this.config.failOffsetYEnd = offset[1];\n      } else if (offset < 0) {\n        this.config.failOffsetYStart = offset;\n      } else {\n        this.config.failOffsetYEnd = offset;\n      }\n      return this;\n    }\n    /**\n     * When the finger moves outside this range (in points) along X axis and gesture hasn't yet activated it will fail recognizing the gesture.\n     * @param offset\n     * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/pan-gesture#failoffsetxvalue-number--number\n     */\n\n    failOffsetX(offset) {\n      if (Array.isArray(offset)) {\n        this.config.failOffsetXStart = offset[0];\n        this.config.failOffsetXEnd = offset[1];\n      } else if (offset < 0) {\n        this.config.failOffsetXStart = offset;\n      } else {\n        this.config.failOffsetXEnd = offset;\n      }\n      return this;\n    }\n    /**\n     * A number of fingers that is required to be placed before gesture can activate. Should be a higher or equal to 0 integer.\n     * @param minPointers\n     */\n\n    minPointers(minPointers) {\n      this.config.minPointers = minPointers;\n      return this;\n    }\n    /**\n     * When the given number of fingers is placed on the screen and gesture hasn't yet activated it will fail recognizing the gesture.\n     * Should be a higher or equal to 0 integer.\n     * @param maxPointers\n     */\n\n    maxPointers(maxPointers) {\n      this.config.maxPointers = maxPointers;\n      return this;\n    }\n    /**\n     * Minimum distance the finger (or multiple finger) need to travel before the gesture activates.\n     * Expressed in points.\n     * @param distance\n     */\n\n    minDistance(distance) {\n      this.config.minDist = distance;\n      return this;\n    }\n    /**\n     * Minimum velocity the finger has to reach in order to activate handler.\n     * @param velocity\n     */\n\n    minVelocity(velocity) {\n      this.config.minVelocity = velocity;\n      return this;\n    }\n    /**\n     * Minimum velocity along X axis the finger has to reach in order to activate handler.\n     * @param velocity\n     */\n\n    minVelocityX(velocity) {\n      this.config.minVelocityX = velocity;\n      return this;\n    }\n    /**\n     * Minimum velocity along Y axis the finger has to reach in order to activate handler.\n     * @param velocity\n     */\n\n    minVelocityY(velocity) {\n      this.config.minVelocityY = velocity;\n      return this;\n    }\n    /**\n     * #### Android only\n     * Android, by default, will calculate translation values based on the position of the leading pointer (the first one that was placed on the screen).\n     * This modifier allows that behavior to be changed to the one that is default on iOS - the averaged position of all active pointers will be used to calculate the translation values.\n     * @param value\n     */\n\n    averageTouches(value) {\n      this.config.avgTouches = value;\n      return this;\n    }\n    /**\n     * #### iOS only\n     * Enables two-finger gestures on supported devices, for example iPads with trackpads.\n     * @param value\n     * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/pan-gesture/#enabletrackpadtwofingergesturevalue-boolean-ios-only\n     */\n\n    enableTrackpadTwoFingerGesture(value) {\n      this.config.enableTrackpadTwoFingerGesture = value;\n      return this;\n    }\n    /**\n     * Duration in milliseconds of the LongPress gesture before Pan is allowed to activate.\n     * @param duration\n     * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/pan-gesture/#activateafterlongpressduration-number\n     */\n\n    activateAfterLongPress(duration) {\n      this.config.activateAfterLongPress = duration;\n      return this;\n    }\n    onChange(callback) {\n      // @ts-ignore TS being overprotective, PanGestureHandlerEventPayload is Record\n      this.handlers.changeEventCalculator = changeEventCalculator;\n      return super.onChange(callback);\n    }\n  }\n  exports.PanGesture = PanGesture;\n});","lineCount":218,"map":[[6,2,3,0],[6,6,3,0,"_gesture"],[6,14,3,0],[6,17,3,0,"require"],[6,24,3,0],[6,25,3,0,"_dependencyMap"],[6,39,3,0],[7,2,1,0],[7,11,1,9,"_defineProperty"],[7,26,1,24,"_defineProperty"],[7,27,1,25,"obj"],[7,30,1,28],[7,32,1,30,"key"],[7,35,1,33],[7,37,1,35,"value"],[7,42,1,40],[7,44,1,42],[8,4,1,44],[8,8,1,48,"key"],[8,11,1,51],[8,15,1,55,"obj"],[8,18,1,58],[8,20,1,60],[9,6,1,62,"Object"],[9,12,1,68],[9,13,1,69,"defineProperty"],[9,27,1,83],[9,28,1,84,"obj"],[9,31,1,87],[9,33,1,89,"key"],[9,36,1,92],[9,38,1,94],[10,8,1,96,"value"],[10,13,1,101],[10,15,1,103,"value"],[10,20,1,108],[11,8,1,110,"enumerable"],[11,18,1,120],[11,20,1,122],[11,24,1,126],[12,8,1,128,"configurable"],[12,20,1,140],[12,22,1,142],[12,26,1,146],[13,8,1,148,"writable"],[13,16,1,156],[13,18,1,158],[14,6,1,163],[14,7,1,164],[14,8,1,165],[15,4,1,167],[15,5,1,168],[15,11,1,174],[16,6,1,176,"obj"],[16,9,1,179],[16,10,1,180,"key"],[16,13,1,183],[16,14,1,184],[16,17,1,187,"value"],[16,22,1,192],[17,4,1,194],[18,4,1,196],[18,11,1,203,"obj"],[18,14,1,206],[19,2,1,208],[20,2,1,209],[20,8,1,209,"_worklet_6591024890621_init_data"],[20,40,1,209],[21,4,1,209,"code"],[21,8,1,209],[22,4,1,209,"location"],[22,12,1,209],[23,4,1,209,"sourceMap"],[23,13,1,209],[24,4,1,209,"version"],[24,11,1,209],[25,2,1,209],[26,2,1,209],[26,8,1,209,"changeEventCalculator"],[26,29,1,209],[26,32,5,0],[27,4,5,0],[27,10,5,0,"_e"],[27,12,5,0],[27,20,5,0,"global"],[27,26,5,0],[27,27,5,0,"Error"],[27,32,5,0],[28,4,5,0],[28,10,5,0,"changeEventCalculator"],[28,31,5,0],[28,43,5,0,"changeEventCalculator"],[28,44,5,31,"current"],[28,51,5,38],[28,53,5,40,"previous"],[28,61,5,48],[28,63,5,50],[29,6,8,2],[29,10,8,6,"changePayload"],[29,23,8,19],[30,6,10,2],[30,10,10,6,"previous"],[30,18,10,14],[30,23,10,19,"undefined"],[30,32,10,28],[30,34,10,30],[31,8,11,4,"changePayload"],[31,21,11,17],[31,24,11,20],[32,10,12,6,"changeX"],[32,17,12,13],[32,19,12,15,"current"],[32,26,12,22],[32,27,12,23,"translationX"],[32,39,12,35],[33,10,13,6,"changeY"],[33,17,13,13],[33,19,13,15,"current"],[33,26,13,22],[33,27,13,23,"translationY"],[34,8,14,4],[34,9,14,5],[35,6,15,2],[35,7,15,3],[35,13,15,9],[36,8,16,4,"changePayload"],[36,21,16,17],[36,24,16,20],[37,10,17,6,"changeX"],[37,17,17,13],[37,19,17,15,"current"],[37,26,17,22],[37,27,17,23,"translationX"],[37,39,17,35],[37,42,17,38,"previous"],[37,50,17,46],[37,51,17,47,"translationX"],[37,63,17,59],[38,10,18,6,"changeY"],[38,17,18,13],[38,19,18,15,"current"],[38,26,18,22],[38,27,18,23,"translationY"],[38,39,18,35],[38,42,18,38,"previous"],[38,50,18,46],[38,51,18,47,"translationY"],[39,8,19,4],[39,9,19,5],[40,6,20,2],[41,6,22,2],[41,13,22,2,"Object"],[41,19,22,2],[41,20,22,2,"assign"],[41,26,22,2],[41,31,22,14,"current"],[41,38,22,21],[41,40,23,7,"changePayload"],[41,53,23,20],[42,4,25,0],[42,5,25,1],[43,4,25,1,"changeEventCalculator"],[43,25,25,1],[43,26,25,1,"__closure"],[43,35,25,1],[44,4,25,1,"changeEventCalculator"],[44,25,25,1],[44,26,25,1,"__workletHash"],[44,39,25,1],[45,4,25,1,"changeEventCalculator"],[45,25,25,1],[45,26,25,1,"__initData"],[45,36,25,1],[45,39,25,1,"_worklet_6591024890621_init_data"],[45,71,25,1],[46,4,25,1,"changeEventCalculator"],[46,25,25,1],[46,26,25,1,"__stackDetails"],[46,40,25,1],[46,43,25,1,"_e"],[46,45,25,1],[47,4,25,1],[47,11,25,1,"changeEventCalculator"],[47,32,25,1],[48,2,25,1],[48,3,5,0],[49,2,27,7],[49,8,27,13,"PanGesture"],[49,18,27,23],[49,27,27,32,"ContinousBaseGesture"],[49,56,27,52],[49,57,27,53],[50,4,28,2,"constructor"],[50,15,28,13,"constructor"],[50,16,28,13],[50,18,28,16],[51,6,29,4],[51,11,29,9],[51,12,29,10],[51,13,29,11],[52,6,31,4,"_defineProperty"],[52,21,31,19],[52,22,31,20],[52,26,31,24],[52,28,31,26],[52,36,31,34],[52,38,31,36],[52,39,31,37],[52,40,31,38],[52,41,31,39],[53,6,33,4],[53,10,33,8],[53,11,33,9,"handlerName"],[53,22,33,20],[53,25,33,23],[53,44,33,42],[54,4,34,2],[55,4,35,2],[56,0,36,0],[57,0,37,0],[58,0,38,0],[59,0,39,0],[61,4,42,2,"activeOffsetY"],[61,17,42,15,"activeOffsetY"],[61,18,42,16,"offset"],[61,24,42,22],[61,26,42,24],[62,6,43,4],[62,10,43,8,"Array"],[62,15,43,13],[62,16,43,14,"isArray"],[62,23,43,21],[62,24,43,22,"offset"],[62,30,43,28],[62,31,43,29],[62,33,43,31],[63,8,44,6],[63,12,44,10],[63,13,44,11,"config"],[63,19,44,17],[63,20,44,18,"activeOffsetYStart"],[63,38,44,36],[63,41,44,39,"offset"],[63,47,44,45],[63,48,44,46],[63,49,44,47],[63,50,44,48],[64,8,45,6],[64,12,45,10],[64,13,45,11,"config"],[64,19,45,17],[64,20,45,18,"activeOffsetYEnd"],[64,36,45,34],[64,39,45,37,"offset"],[64,45,45,43],[64,46,45,44],[64,47,45,45],[64,48,45,46],[65,6,46,4],[65,7,46,5],[65,13,46,11],[65,17,46,15,"offset"],[65,23,46,21],[65,26,46,24],[65,27,46,25],[65,29,46,27],[66,8,47,6],[66,12,47,10],[66,13,47,11,"config"],[66,19,47,17],[66,20,47,18,"activeOffsetYStart"],[66,38,47,36],[66,41,47,39,"offset"],[66,47,47,45],[67,6,48,4],[67,7,48,5],[67,13,48,11],[68,8,49,6],[68,12,49,10],[68,13,49,11,"config"],[68,19,49,17],[68,20,49,18,"activeOffsetYEnd"],[68,36,49,34],[68,39,49,37,"offset"],[68,45,49,43],[69,6,50,4],[70,6,52,4],[70,13,52,11],[70,17,52,15],[71,4,53,2],[72,4,54,2],[73,0,55,0],[74,0,56,0],[75,0,57,0],[76,0,58,0],[78,4,61,2,"activeOffsetX"],[78,17,61,15,"activeOffsetX"],[78,18,61,16,"offset"],[78,24,61,22],[78,26,61,24],[79,6,62,4],[79,10,62,8,"Array"],[79,15,62,13],[79,16,62,14,"isArray"],[79,23,62,21],[79,24,62,22,"offset"],[79,30,62,28],[79,31,62,29],[79,33,62,31],[80,8,63,6],[80,12,63,10],[80,13,63,11,"config"],[80,19,63,17],[80,20,63,18,"activeOffsetXStart"],[80,38,63,36],[80,41,63,39,"offset"],[80,47,63,45],[80,48,63,46],[80,49,63,47],[80,50,63,48],[81,8,64,6],[81,12,64,10],[81,13,64,11,"config"],[81,19,64,17],[81,20,64,18,"activeOffsetXEnd"],[81,36,64,34],[81,39,64,37,"offset"],[81,45,64,43],[81,46,64,44],[81,47,64,45],[81,48,64,46],[82,6,65,4],[82,7,65,5],[82,13,65,11],[82,17,65,15,"offset"],[82,23,65,21],[82,26,65,24],[82,27,65,25],[82,29,65,27],[83,8,66,6],[83,12,66,10],[83,13,66,11,"config"],[83,19,66,17],[83,20,66,18,"activeOffsetXStart"],[83,38,66,36],[83,41,66,39,"offset"],[83,47,66,45],[84,6,67,4],[84,7,67,5],[84,13,67,11],[85,8,68,6],[85,12,68,10],[85,13,68,11,"config"],[85,19,68,17],[85,20,68,18,"activeOffsetXEnd"],[85,36,68,34],[85,39,68,37,"offset"],[85,45,68,43],[86,6,69,4],[87,6,71,4],[87,13,71,11],[87,17,71,15],[88,4,72,2],[89,4,73,2],[90,0,74,0],[91,0,75,0],[92,0,76,0],[93,0,77,0],[95,4,80,2,"failOffsetY"],[95,15,80,13,"failOffsetY"],[95,16,80,14,"offset"],[95,22,80,20],[95,24,80,22],[96,6,81,4],[96,10,81,8,"Array"],[96,15,81,13],[96,16,81,14,"isArray"],[96,23,81,21],[96,24,81,22,"offset"],[96,30,81,28],[96,31,81,29],[96,33,81,31],[97,8,82,6],[97,12,82,10],[97,13,82,11,"config"],[97,19,82,17],[97,20,82,18,"failOffsetYStart"],[97,36,82,34],[97,39,82,37,"offset"],[97,45,82,43],[97,46,82,44],[97,47,82,45],[97,48,82,46],[98,8,83,6],[98,12,83,10],[98,13,83,11,"config"],[98,19,83,17],[98,20,83,18,"failOffsetYEnd"],[98,34,83,32],[98,37,83,35,"offset"],[98,43,83,41],[98,44,83,42],[98,45,83,43],[98,46,83,44],[99,6,84,4],[99,7,84,5],[99,13,84,11],[99,17,84,15,"offset"],[99,23,84,21],[99,26,84,24],[99,27,84,25],[99,29,84,27],[100,8,85,6],[100,12,85,10],[100,13,85,11,"config"],[100,19,85,17],[100,20,85,18,"failOffsetYStart"],[100,36,85,34],[100,39,85,37,"offset"],[100,45,85,43],[101,6,86,4],[101,7,86,5],[101,13,86,11],[102,8,87,6],[102,12,87,10],[102,13,87,11,"config"],[102,19,87,17],[102,20,87,18,"failOffsetYEnd"],[102,34,87,32],[102,37,87,35,"offset"],[102,43,87,41],[103,6,88,4],[104,6,90,4],[104,13,90,11],[104,17,90,15],[105,4,91,2],[106,4,92,2],[107,0,93,0],[108,0,94,0],[109,0,95,0],[110,0,96,0],[112,4,99,2,"failOffsetX"],[112,15,99,13,"failOffsetX"],[112,16,99,14,"offset"],[112,22,99,20],[112,24,99,22],[113,6,100,4],[113,10,100,8,"Array"],[113,15,100,13],[113,16,100,14,"isArray"],[113,23,100,21],[113,24,100,22,"offset"],[113,30,100,28],[113,31,100,29],[113,33,100,31],[114,8,101,6],[114,12,101,10],[114,13,101,11,"config"],[114,19,101,17],[114,20,101,18,"failOffsetXStart"],[114,36,101,34],[114,39,101,37,"offset"],[114,45,101,43],[114,46,101,44],[114,47,101,45],[114,48,101,46],[115,8,102,6],[115,12,102,10],[115,13,102,11,"config"],[115,19,102,17],[115,20,102,18,"failOffsetXEnd"],[115,34,102,32],[115,37,102,35,"offset"],[115,43,102,41],[115,44,102,42],[115,45,102,43],[115,46,102,44],[116,6,103,4],[116,7,103,5],[116,13,103,11],[116,17,103,15,"offset"],[116,23,103,21],[116,26,103,24],[116,27,103,25],[116,29,103,27],[117,8,104,6],[117,12,104,10],[117,13,104,11,"config"],[117,19,104,17],[117,20,104,18,"failOffsetXStart"],[117,36,104,34],[117,39,104,37,"offset"],[117,45,104,43],[118,6,105,4],[118,7,105,5],[118,13,105,11],[119,8,106,6],[119,12,106,10],[119,13,106,11,"config"],[119,19,106,17],[119,20,106,18,"failOffsetXEnd"],[119,34,106,32],[119,37,106,35,"offset"],[119,43,106,41],[120,6,107,4],[121,6,109,4],[121,13,109,11],[121,17,109,15],[122,4,110,2],[123,4,111,2],[124,0,112,0],[125,0,113,0],[126,0,114,0],[128,4,117,2,"minPointers"],[128,15,117,13,"minPointers"],[128,16,117,14,"minPointers"],[128,27,117,25],[128,29,117,27],[129,6,118,4],[129,10,118,8],[129,11,118,9,"config"],[129,17,118,15],[129,18,118,16,"minPointers"],[129,29,118,27],[129,32,118,30,"minPointers"],[129,43,118,41],[130,6,119,4],[130,13,119,11],[130,17,119,15],[131,4,120,2],[132,4,121,2],[133,0,122,0],[134,0,123,0],[135,0,124,0],[136,0,125,0],[138,4,128,2,"maxPointers"],[138,15,128,13,"maxPointers"],[138,16,128,14,"maxPointers"],[138,27,128,25],[138,29,128,27],[139,6,129,4],[139,10,129,8],[139,11,129,9,"config"],[139,17,129,15],[139,18,129,16,"maxPointers"],[139,29,129,27],[139,32,129,30,"maxPointers"],[139,43,129,41],[140,6,130,4],[140,13,130,11],[140,17,130,15],[141,4,131,2],[142,4,132,2],[143,0,133,0],[144,0,134,0],[145,0,135,0],[146,0,136,0],[148,4,139,2,"minDistance"],[148,15,139,13,"minDistance"],[148,16,139,14,"distance"],[148,24,139,22],[148,26,139,24],[149,6,140,4],[149,10,140,8],[149,11,140,9,"config"],[149,17,140,15],[149,18,140,16,"minDist"],[149,25,140,23],[149,28,140,26,"distance"],[149,36,140,34],[150,6,141,4],[150,13,141,11],[150,17,141,15],[151,4,142,2],[152,4,143,2],[153,0,144,0],[154,0,145,0],[155,0,146,0],[157,4,149,2,"minVelocity"],[157,15,149,13,"minVelocity"],[157,16,149,14,"velocity"],[157,24,149,22],[157,26,149,24],[158,6,150,4],[158,10,150,8],[158,11,150,9,"config"],[158,17,150,15],[158,18,150,16,"minVelocity"],[158,29,150,27],[158,32,150,30,"velocity"],[158,40,150,38],[159,6,151,4],[159,13,151,11],[159,17,151,15],[160,4,152,2],[161,4,153,2],[162,0,154,0],[163,0,155,0],[164,0,156,0],[166,4,159,2,"minVelocityX"],[166,16,159,14,"minVelocityX"],[166,17,159,15,"velocity"],[166,25,159,23],[166,27,159,25],[167,6,160,4],[167,10,160,8],[167,11,160,9,"config"],[167,17,160,15],[167,18,160,16,"minVelocityX"],[167,30,160,28],[167,33,160,31,"velocity"],[167,41,160,39],[168,6,161,4],[168,13,161,11],[168,17,161,15],[169,4,162,2],[170,4,163,2],[171,0,164,0],[172,0,165,0],[173,0,166,0],[175,4,169,2,"minVelocityY"],[175,16,169,14,"minVelocityY"],[175,17,169,15,"velocity"],[175,25,169,23],[175,27,169,25],[176,6,170,4],[176,10,170,8],[176,11,170,9,"config"],[176,17,170,15],[176,18,170,16,"minVelocityY"],[176,30,170,28],[176,33,170,31,"velocity"],[176,41,170,39],[177,6,171,4],[177,13,171,11],[177,17,171,15],[178,4,172,2],[179,4,173,2],[180,0,174,0],[181,0,175,0],[182,0,176,0],[183,0,177,0],[184,0,178,0],[186,4,181,2,"averageTouches"],[186,18,181,16,"averageTouches"],[186,19,181,17,"value"],[186,24,181,22],[186,26,181,24],[187,6,182,4],[187,10,182,8],[187,11,182,9,"config"],[187,17,182,15],[187,18,182,16,"avgTouches"],[187,28,182,26],[187,31,182,29,"value"],[187,36,182,34],[188,6,183,4],[188,13,183,11],[188,17,183,15],[189,4,184,2],[190,4,185,2],[191,0,186,0],[192,0,187,0],[193,0,188,0],[194,0,189,0],[195,0,190,0],[197,4,193,2,"enableTrackpadTwoFingerGesture"],[197,34,193,32,"enableTrackpadTwoFingerGesture"],[197,35,193,33,"value"],[197,40,193,38],[197,42,193,40],[198,6,194,4],[198,10,194,8],[198,11,194,9,"config"],[198,17,194,15],[198,18,194,16,"enableTrackpadTwoFingerGesture"],[198,48,194,46],[198,51,194,49,"value"],[198,56,194,54],[199,6,195,4],[199,13,195,11],[199,17,195,15],[200,4,196,2],[201,4,197,2],[202,0,198,0],[203,0,199,0],[204,0,200,0],[205,0,201,0],[207,4,204,2,"activateAfterLongPress"],[207,26,204,24,"activateAfterLongPress"],[207,27,204,25,"duration"],[207,35,204,33],[207,37,204,35],[208,6,205,4],[208,10,205,8],[208,11,205,9,"config"],[208,17,205,15],[208,18,205,16,"activateAfterLongPress"],[208,40,205,38],[208,43,205,41,"duration"],[208,51,205,49],[209,6,206,4],[209,13,206,11],[209,17,206,15],[210,4,207,2],[211,4,209,2,"onChange"],[211,12,209,10,"onChange"],[211,13,209,11,"callback"],[211,21,209,19],[211,23,209,21],[212,6,210,4],[213,6,211,4],[213,10,211,8],[213,11,211,9,"handlers"],[213,19,211,17],[213,20,211,18,"changeEventCalculator"],[213,41,211,39],[213,44,211,42,"changeEventCalculator"],[213,65,211,63],[214,6,212,4],[214,13,212,11],[214,18,212,16],[214,19,212,17,"onChange"],[214,27,212,25],[214,28,212,26,"callback"],[214,36,212,34],[214,37,212,35],[215,4,213,2],[216,2,215,0],[217,2,215,1,"exports"],[217,9,215,1],[217,10,215,1,"PanGesture"],[217,20,215,1],[217,23,215,1,"PanGesture"],[217,33,215,1],[218,0,215,1],[218,3]],"functionMap":{"names":["_defineProperty","<global>","changeEventCalculator","PanGesture","PanGesture#constructor","PanGesture#activeOffsetY","PanGesture#activeOffsetX","PanGesture#failOffsetY","PanGesture#failOffsetX","PanGesture#minPointers","PanGesture#maxPointers","PanGesture#minDistance","PanGesture#minVelocity","PanGesture#minVelocityX","PanGesture#minVelocityY","PanGesture#averageTouches","PanGesture#enableTrackpadTwoFingerGesture","PanGesture#activateAfterLongPress","PanGesture#onChange"],"mappings":"AAA,iNC;ACI;CDoB;OEE;ECC;GDM;EEQ;GFW;EGQ;GHW;EIQ;GJW;EKQ;GLW;EMO;GNG;EOQ;GPG;EQQ;GRG;ESO;GTG;EUO;GVG;EWO;GXG;EYS;GZG;EaS;GbG;EcQ;GdG;EeE;GfI;CFE"}},"type":"js/module"}]}