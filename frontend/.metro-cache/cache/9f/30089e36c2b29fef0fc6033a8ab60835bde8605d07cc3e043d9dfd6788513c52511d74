{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/objectWithoutPropertiesLoose","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"HFkXuFcBAqfzGtqyPj8g62MKT0M=","exportNames":["*"]}},{"name":"@egjs/hammerjs","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":211},"end":{"line":3,"column":36,"index":247}}],"key":"I5Lt2ouU6D9a2C2V4SJv4GWe8Fg=","exportNames":["*"]}},{"name":"../State","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":248},"end":{"line":4,"column":33,"index":281}}],"key":"ISRoyBmrsYyTcSqLDCBIFNoRZWE=","exportNames":["*"]}},{"name":"./constants","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":282},"end":{"line":5,"column":89,"index":371}}],"key":"waDaw5D7vDr2hRFu0z1BqRCTzP4=","exportNames":["*"]}},{"name":"./DiscreteGestureHandler","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":372},"end":{"line":6,"column":62,"index":434}}],"key":"dpOMqAtzFjjUQychI3TYNsYmXQE=","exportNames":["*"]}},{"name":"./utils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":7,"column":0,"index":435},"end":{"line":7,"column":66,"index":501}}],"key":"fIqjJ6Rx8c7Khc/wm9kX7hQXC5I=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  var _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(_dependencyMap[1], \"@babel/runtime/helpers/objectWithoutPropertiesLoose\"));\n  var _hammerjs = _interopRequireDefault(require(_dependencyMap[2], \"@egjs/hammerjs\"));\n  var _State = require(_dependencyMap[3], \"../State\");\n  var _constants = require(_dependencyMap[4], \"./constants\");\n  var _DiscreteGestureHandler = _interopRequireDefault(require(_dependencyMap[5], \"./DiscreteGestureHandler\"));\n  var _utils = require(_dependencyMap[6], \"./utils\");\n  const _excluded = [\"shouldActivateOnStart\", \"disallowInterruption\", \"shouldCancelWhenOutside\", \"minDurationMs\", \"maxDist\", \"minPointers\", \"maxPointers\"];\n  function _defineProperty(obj, key, value) {\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    } else {\n      obj[key] = value;\n    }\n    return obj;\n  }\n  class PressGestureHandler extends _DiscreteGestureHandler.default {\n    constructor(...args) {\n      super(...args);\n      _defineProperty(this, \"visualFeedbackTimer\", void 0);\n      _defineProperty(this, \"initialEvent\", null);\n      _defineProperty(this, \"shouldDelayTouches\", true);\n    }\n    get name() {\n      return 'press';\n    }\n    get minDurationMs() {\n      // @ts-ignore FIXME(TS)\n      return (0, _utils.isnan)(this.config.minDurationMs) ? 5 : this.config.minDurationMs;\n    }\n    get maxDist() {\n      return (0, _utils.isnan)(this.config.maxDist) ? 9 : this.config.maxDist;\n    }\n    get NativeGestureClass() {\n      return _hammerjs.default.Press;\n    }\n    simulateCancelEvent(inputData) {\n      // Long press never starts so we can't rely on the running event boolean.\n      this.hasGestureFailed = true;\n      this.cancelEvent(inputData);\n    }\n    updateHasCustomActivationCriteria({\n      shouldCancelWhenOutside,\n      maxDistSq\n    }) {\n      return shouldCancelWhenOutside || !(0, _utils.isValidNumber)(maxDistSq);\n    }\n    getState(type) {\n      return {\n        [_hammerjs.default.INPUT_START]: _State.State.BEGAN,\n        [_hammerjs.default.INPUT_MOVE]: _State.State.ACTIVE,\n        [_hammerjs.default.INPUT_END]: _State.State.END,\n        [_hammerjs.default.INPUT_CANCEL]: _State.State.CANCELLED\n      }[type];\n    }\n    getConfig() {\n      if (!this.hasCustomActivationCriteria) {\n        // Default config\n        // If no params have been defined then this config should emulate the native gesture as closely as possible.\n        return {\n          shouldCancelWhenOutside: true,\n          maxDistSq: 10\n        };\n      }\n      return this.config;\n    }\n    getHammerConfig() {\n      return Object.assign({}, super.getHammerConfig(), {\n        // threshold: this.maxDist,\n        time: this.minDurationMs\n      });\n    }\n    onGestureActivated(ev) {\n      this.onGestureStart(ev);\n    }\n    shouldDelayTouchForEvent({\n      pointerType\n    }) {\n      // Don't disable event for mouse input\n      return this.shouldDelayTouches && pointerType === 'touch';\n    }\n    onGestureStart(ev) {\n      this.isGestureRunning = true;\n      clearTimeout(this.visualFeedbackTimer);\n      this.initialEvent = ev;\n      this.visualFeedbackTimer = (0, _utils.fireAfterInterval)(() => {\n        this.sendGestureStartedEvent(this.initialEvent);\n        this.initialEvent = null;\n      }, this.shouldDelayTouchForEvent(ev) && _constants.CONTENT_TOUCHES_DELAY);\n    }\n    sendGestureStartedEvent(ev) {\n      clearTimeout(this.visualFeedbackTimer);\n      this.visualFeedbackTimer = null;\n      this.sendEvent(Object.assign({}, ev, {\n        eventType: _hammerjs.default.INPUT_MOVE,\n        isFirst: true\n      }));\n    }\n    forceInvalidate(event) {\n      super.forceInvalidate(event);\n      clearTimeout(this.visualFeedbackTimer);\n      this.visualFeedbackTimer = null;\n      this.initialEvent = null;\n    }\n    onRawEvent(ev) {\n      super.onRawEvent(ev);\n      if (this.isGestureRunning) {\n        if (ev.isFinal) {\n          let timeout;\n          if (this.visualFeedbackTimer) {\n            // Aesthetic timing for a quick tap.\n            // We haven't activated the tap right away to emulate iOS `delaysContentTouches`\n            // Now we must send the initial activation event and wait a set amount of time before firing the end event.\n            timeout = _constants.CONTENT_TOUCHES_QUICK_TAP_END_DELAY;\n            this.sendGestureStartedEvent(this.initialEvent);\n            this.initialEvent = null;\n          }\n          (0, _utils.fireAfterInterval)(() => {\n            this.sendEvent(Object.assign({}, ev, {\n              eventType: _hammerjs.default.INPUT_END,\n              isFinal: true\n            })); // @ts-ignore -- this should explicitly support undefined\n\n            this.onGestureEnded();\n          }, timeout);\n        } else {\n          this.sendEvent(Object.assign({}, ev, {\n            eventType: _hammerjs.default.INPUT_MOVE,\n            isFinal: false\n          }));\n        }\n      }\n    }\n    updateGestureConfig(_ref) {\n      let {\n          shouldActivateOnStart = false,\n          disallowInterruption = false,\n          shouldCancelWhenOutside = true,\n          minDurationMs = Number.NaN,\n          maxDist = Number.NaN,\n          minPointers = 1,\n          maxPointers = 1\n        } = _ref,\n        props = (0, _objectWithoutPropertiesLoose2.default)(_ref, _excluded);\n      return super.updateGestureConfig(Object.assign({\n        shouldActivateOnStart,\n        disallowInterruption,\n        shouldCancelWhenOutside,\n        minDurationMs,\n        maxDist,\n        minPointers,\n        maxPointers\n      }, props));\n    }\n  }\n  var _default = exports.default = PressGestureHandler;\n});","lineCount":167,"map":[[8,2,3,0],[8,6,3,0,"_hammerjs"],[8,15,3,0],[8,18,3,0,"_interopRequireDefault"],[8,40,3,0],[8,41,3,0,"require"],[8,48,3,0],[8,49,3,0,"_dependencyMap"],[8,63,3,0],[9,2,4,0],[9,6,4,0,"_State"],[9,12,4,0],[9,15,4,0,"require"],[9,22,4,0],[9,23,4,0,"_dependencyMap"],[9,37,4,0],[10,2,5,0],[10,6,5,0,"_constants"],[10,16,5,0],[10,19,5,0,"require"],[10,26,5,0],[10,27,5,0,"_dependencyMap"],[10,41,5,0],[11,2,6,0],[11,6,6,0,"_DiscreteGestureHandler"],[11,29,6,0],[11,32,6,0,"_interopRequireDefault"],[11,54,6,0],[11,55,6,0,"require"],[11,62,6,0],[11,63,6,0,"_dependencyMap"],[11,77,6,0],[12,2,7,0],[12,6,7,0,"_utils"],[12,12,7,0],[12,15,7,0,"require"],[12,22,7,0],[12,23,7,0,"_dependencyMap"],[12,37,7,0],[13,2,7,66],[13,8,7,66,"_excluded"],[13,17,7,66],[14,2,1,0],[14,11,1,9,"_defineProperty"],[14,26,1,24,"_defineProperty"],[14,27,1,25,"obj"],[14,30,1,28],[14,32,1,30,"key"],[14,35,1,33],[14,37,1,35,"value"],[14,42,1,40],[14,44,1,42],[15,4,1,44],[15,8,1,48,"key"],[15,11,1,51],[15,15,1,55,"obj"],[15,18,1,58],[15,20,1,60],[16,6,1,62,"Object"],[16,12,1,68],[16,13,1,69,"defineProperty"],[16,27,1,83],[16,28,1,84,"obj"],[16,31,1,87],[16,33,1,89,"key"],[16,36,1,92],[16,38,1,94],[17,8,1,96,"value"],[17,13,1,101],[17,15,1,103,"value"],[17,20,1,108],[18,8,1,110,"enumerable"],[18,18,1,120],[18,20,1,122],[18,24,1,126],[19,8,1,128,"configurable"],[19,20,1,140],[19,22,1,142],[19,26,1,146],[20,8,1,148,"writable"],[20,16,1,156],[20,18,1,158],[21,6,1,163],[21,7,1,164],[21,8,1,165],[22,4,1,167],[22,5,1,168],[22,11,1,174],[23,6,1,176,"obj"],[23,9,1,179],[23,10,1,180,"key"],[23,13,1,183],[23,14,1,184],[23,17,1,187,"value"],[23,22,1,192],[24,4,1,194],[25,4,1,196],[25,11,1,203,"obj"],[25,14,1,206],[26,2,1,208],[27,2,9,0],[27,8,9,6,"PressGestureHandler"],[27,27,9,25],[27,36,9,34,"DiscreteGestureHandler"],[27,67,9,56],[27,68,9,57],[28,4,10,2,"constructor"],[28,15,10,13,"constructor"],[28,16,10,14],[28,19,10,17,"args"],[28,23,10,21],[28,25,10,23],[29,6,11,4],[29,11,11,9],[29,12,11,10],[29,15,11,13,"args"],[29,19,11,17],[29,20,11,18],[30,6,13,4,"_defineProperty"],[30,21,13,19],[30,22,13,20],[30,26,13,24],[30,28,13,26],[30,49,13,47],[30,51,13,49],[30,56,13,54],[30,57,13,55],[30,58,13,56],[31,6,15,4,"_defineProperty"],[31,21,15,19],[31,22,15,20],[31,26,15,24],[31,28,15,26],[31,42,15,40],[31,44,15,42],[31,48,15,46],[31,49,15,47],[32,6,17,4,"_defineProperty"],[32,21,17,19],[32,22,17,20],[32,26,17,24],[32,28,17,26],[32,48,17,46],[32,50,17,48],[32,54,17,52],[32,55,17,53],[33,4,18,2],[34,4,20,2],[34,8,20,6,"name"],[34,12,20,10,"name"],[34,13,20,10],[34,15,20,13],[35,6,21,4],[35,13,21,11],[35,20,21,18],[36,4,22,2],[37,4,24,2],[37,8,24,6,"minDurationMs"],[37,21,24,19,"minDurationMs"],[37,22,24,19],[37,24,24,22],[38,6,25,4],[39,6,26,4],[39,13,26,11],[39,17,26,11,"isnan"],[39,29,26,16],[39,31,26,17],[39,35,26,21],[39,36,26,22,"config"],[39,42,26,28],[39,43,26,29,"minDurationMs"],[39,56,26,42],[39,57,26,43],[39,60,26,46],[39,61,26,47],[39,64,26,50],[39,68,26,54],[39,69,26,55,"config"],[39,75,26,61],[39,76,26,62,"minDurationMs"],[39,89,26,75],[40,4,27,2],[41,4,29,2],[41,8,29,6,"maxDist"],[41,15,29,13,"maxDist"],[41,16,29,13],[41,18,29,16],[42,6,30,4],[42,13,30,11],[42,17,30,11,"isnan"],[42,29,30,16],[42,31,30,17],[42,35,30,21],[42,36,30,22,"config"],[42,42,30,28],[42,43,30,29,"maxDist"],[42,50,30,36],[42,51,30,37],[42,54,30,40],[42,55,30,41],[42,58,30,44],[42,62,30,48],[42,63,30,49,"config"],[42,69,30,55],[42,70,30,56,"maxDist"],[42,77,30,63],[43,4,31,2],[44,4,33,2],[44,8,33,6,"NativeGestureClass"],[44,26,33,24,"NativeGestureClass"],[44,27,33,24],[44,29,33,27],[45,6,34,4],[45,13,34,11,"Hammer"],[45,30,34,17],[45,31,34,18,"Press"],[45,36,34,23],[46,4,35,2],[47,4,37,2,"simulateCancelEvent"],[47,23,37,21,"simulateCancelEvent"],[47,24,37,22,"inputData"],[47,33,37,31],[47,35,37,33],[48,6,38,4],[49,6,39,4],[49,10,39,8],[49,11,39,9,"hasGestureFailed"],[49,27,39,25],[49,30,39,28],[49,34,39,32],[50,6,40,4],[50,10,40,8],[50,11,40,9,"cancelEvent"],[50,22,40,20],[50,23,40,21,"inputData"],[50,32,40,30],[50,33,40,31],[51,4,41,2],[52,4,43,2,"updateHasCustomActivationCriteria"],[52,37,43,35,"updateHasCustomActivationCriteria"],[52,38,43,36],[53,6,44,4,"shouldCancelWhenOutside"],[53,29,44,27],[54,6,45,4,"maxDistSq"],[55,4,46,2],[55,5,46,3],[55,7,46,5],[56,6,47,4],[56,13,47,11,"shouldCancelWhenOutside"],[56,36,47,34],[56,40,47,38],[56,41,47,39],[56,45,47,39,"isValidNumber"],[56,65,47,52],[56,67,47,53,"maxDistSq"],[56,76,47,62],[56,77,47,63],[57,4,48,2],[58,4,50,2,"getState"],[58,12,50,10,"getState"],[58,13,50,11,"type"],[58,17,50,15],[58,19,50,17],[59,6,51,4],[59,13,51,11],[60,8,52,6],[60,9,52,7,"Hammer"],[60,26,52,13],[60,27,52,14,"INPUT_START"],[60,38,52,25],[60,41,52,28,"State"],[60,53,52,33],[60,54,52,34,"BEGAN"],[60,59,52,39],[61,8,53,6],[61,9,53,7,"Hammer"],[61,26,53,13],[61,27,53,14,"INPUT_MOVE"],[61,37,53,24],[61,40,53,27,"State"],[61,52,53,32],[61,53,53,33,"ACTIVE"],[61,59,53,39],[62,8,54,6],[62,9,54,7,"Hammer"],[62,26,54,13],[62,27,54,14,"INPUT_END"],[62,36,54,23],[62,39,54,26,"State"],[62,51,54,31],[62,52,54,32,"END"],[62,55,54,35],[63,8,55,6],[63,9,55,7,"Hammer"],[63,26,55,13],[63,27,55,14,"INPUT_CANCEL"],[63,39,55,26],[63,42,55,29,"State"],[63,54,55,34],[63,55,55,35,"CANCELLED"],[64,6,56,4],[64,7,56,5],[64,8,56,6,"type"],[64,12,56,10],[64,13,56,11],[65,4,57,2],[66,4,59,2,"getConfig"],[66,13,59,11,"getConfig"],[66,14,59,11],[66,16,59,14],[67,6,60,4],[67,10,60,8],[67,11,60,9],[67,15,60,13],[67,16,60,14,"hasCustomActivationCriteria"],[67,43,60,41],[67,45,60,43],[68,8,61,6],[69,8,62,6],[70,8,63,6],[70,15,63,13],[71,10,64,8,"shouldCancelWhenOutside"],[71,33,64,31],[71,35,64,33],[71,39,64,37],[72,10,65,8,"maxDistSq"],[72,19,65,17],[72,21,65,19],[73,8,66,6],[73,9,66,7],[74,6,67,4],[75,6,69,4],[75,13,69,11],[75,17,69,15],[75,18,69,16,"config"],[75,24,69,22],[76,4,70,2],[77,4,72,2,"getHammerConfig"],[77,19,72,17,"getHammerConfig"],[77,20,72,17],[77,22,72,20],[78,6,73,4],[78,13,73,4,"Object"],[78,19,73,4],[78,20,73,4,"assign"],[78,26,73,4],[78,31,73,16],[78,36,73,21],[78,37,73,22,"getHammerConfig"],[78,52,73,37],[78,53,73,38],[78,54,73,39],[79,8,74,6],[80,8,75,6,"time"],[80,12,75,10],[80,14,75,12],[80,18,75,16],[80,19,75,17,"minDurationMs"],[81,6,75,30],[82,4,77,2],[83,4,79,2,"onGestureActivated"],[83,22,79,20,"onGestureActivated"],[83,23,79,21,"ev"],[83,25,79,23],[83,27,79,25],[84,6,80,4],[84,10,80,8],[84,11,80,9,"onGestureStart"],[84,25,80,23],[84,26,80,24,"ev"],[84,28,80,26],[84,29,80,27],[85,4,81,2],[86,4,83,2,"shouldDelayTouchForEvent"],[86,28,83,26,"shouldDelayTouchForEvent"],[86,29,83,27],[87,6,84,4,"pointerType"],[88,4,85,2],[88,5,85,3],[88,7,85,5],[89,6,86,4],[90,6,87,4],[90,13,87,11],[90,17,87,15],[90,18,87,16,"shouldDelayTouches"],[90,36,87,34],[90,40,87,38,"pointerType"],[90,51,87,49],[90,56,87,54],[90,63,87,61],[91,4,88,2],[92,4,90,2,"onGestureStart"],[92,18,90,16,"onGestureStart"],[92,19,90,17,"ev"],[92,21,90,19],[92,23,90,21],[93,6,91,4],[93,10,91,8],[93,11,91,9,"isGestureRunning"],[93,27,91,25],[93,30,91,28],[93,34,91,32],[94,6,92,4,"clearTimeout"],[94,18,92,16],[94,19,92,17],[94,23,92,21],[94,24,92,22,"visualFeedbackTimer"],[94,43,92,41],[94,44,92,42],[95,6,93,4],[95,10,93,8],[95,11,93,9,"initialEvent"],[95,23,93,21],[95,26,93,24,"ev"],[95,28,93,26],[96,6,94,4],[96,10,94,8],[96,11,94,9,"visualFeedbackTimer"],[96,30,94,28],[96,33,94,31],[96,37,94,31,"fireAfterInterval"],[96,61,94,48],[96,63,94,49],[96,69,94,55],[97,8,95,6],[97,12,95,10],[97,13,95,11,"sendGestureStartedEvent"],[97,36,95,34],[97,37,95,35],[97,41,95,39],[97,42,95,40,"initialEvent"],[97,54,95,52],[97,55,95,53],[98,8,96,6],[98,12,96,10],[98,13,96,11,"initialEvent"],[98,25,96,23],[98,28,96,26],[98,32,96,30],[99,6,97,4],[99,7,97,5],[99,9,97,7],[99,13,97,11],[99,14,97,12,"shouldDelayTouchForEvent"],[99,38,97,36],[99,39,97,37,"ev"],[99,41,97,39],[99,42,97,40],[99,46,97,44,"CONTENT_TOUCHES_DELAY"],[99,78,97,65],[99,79,97,66],[100,4,98,2],[101,4,100,2,"sendGestureStartedEvent"],[101,27,100,25,"sendGestureStartedEvent"],[101,28,100,26,"ev"],[101,30,100,28],[101,32,100,30],[102,6,101,4,"clearTimeout"],[102,18,101,16],[102,19,101,17],[102,23,101,21],[102,24,101,22,"visualFeedbackTimer"],[102,43,101,41],[102,44,101,42],[103,6,102,4],[103,10,102,8],[103,11,102,9,"visualFeedbackTimer"],[103,30,102,28],[103,33,102,31],[103,37,102,35],[104,6,103,4],[104,10,103,8],[104,11,103,9,"sendEvent"],[104,20,103,18],[104,21,103,18,"Object"],[104,27,103,18],[104,28,103,18,"assign"],[104,34,103,18],[104,39,103,24,"ev"],[104,41,103,26],[105,8,104,6,"eventType"],[105,17,104,15],[105,19,104,17,"Hammer"],[105,36,104,23],[105,37,104,24,"INPUT_MOVE"],[105,47,104,34],[106,8,105,6,"isFirst"],[106,15,105,13],[106,17,105,15],[107,6,105,19],[107,8,106,5],[107,9,106,6],[108,4,107,2],[109,4,109,2,"forceInvalidate"],[109,19,109,17,"forceInvalidate"],[109,20,109,18,"event"],[109,25,109,23],[109,27,109,25],[110,6,110,4],[110,11,110,9],[110,12,110,10,"forceInvalidate"],[110,27,110,25],[110,28,110,26,"event"],[110,33,110,31],[110,34,110,32],[111,6,111,4,"clearTimeout"],[111,18,111,16],[111,19,111,17],[111,23,111,21],[111,24,111,22,"visualFeedbackTimer"],[111,43,111,41],[111,44,111,42],[112,6,112,4],[112,10,112,8],[112,11,112,9,"visualFeedbackTimer"],[112,30,112,28],[112,33,112,31],[112,37,112,35],[113,6,113,4],[113,10,113,8],[113,11,113,9,"initialEvent"],[113,23,113,21],[113,26,113,24],[113,30,113,28],[114,4,114,2],[115,4,116,2,"onRawEvent"],[115,14,116,12,"onRawEvent"],[115,15,116,13,"ev"],[115,17,116,15],[115,19,116,17],[116,6,117,4],[116,11,117,9],[116,12,117,10,"onRawEvent"],[116,22,117,20],[116,23,117,21,"ev"],[116,25,117,23],[116,26,117,24],[117,6,119,4],[117,10,119,8],[117,14,119,12],[117,15,119,13,"isGestureRunning"],[117,31,119,29],[117,33,119,31],[118,8,120,6],[118,12,120,10,"ev"],[118,14,120,12],[118,15,120,13,"isFinal"],[118,22,120,20],[118,24,120,22],[119,10,121,8],[119,14,121,12,"timeout"],[119,21,121,19],[120,10,123,8],[120,14,123,12],[120,18,123,16],[120,19,123,17,"visualFeedbackTimer"],[120,38,123,36],[120,40,123,38],[121,12,124,10],[122,12,125,10],[123,12,126,10],[124,12,127,10,"timeout"],[124,19,127,17],[124,22,127,20,"CONTENT_TOUCHES_QUICK_TAP_END_DELAY"],[124,68,127,55],[125,12,128,10],[125,16,128,14],[125,17,128,15,"sendGestureStartedEvent"],[125,40,128,38],[125,41,128,39],[125,45,128,43],[125,46,128,44,"initialEvent"],[125,58,128,56],[125,59,128,57],[126,12,129,10],[126,16,129,14],[126,17,129,15,"initialEvent"],[126,29,129,27],[126,32,129,30],[126,36,129,34],[127,10,130,8],[128,10,132,8],[128,14,132,8,"fireAfterInterval"],[128,38,132,25],[128,40,132,26],[128,46,132,32],[129,12,133,10],[129,16,133,14],[129,17,133,15,"sendEvent"],[129,26,133,24],[129,27,133,24,"Object"],[129,33,133,24],[129,34,133,24,"assign"],[129,40,133,24],[129,45,133,30,"ev"],[129,47,133,32],[130,14,134,12,"eventType"],[130,23,134,21],[130,25,134,23,"Hammer"],[130,42,134,29],[130,43,134,30,"INPUT_END"],[130,52,134,39],[131,14,135,12,"isFinal"],[131,21,135,19],[131,23,135,21],[132,12,135,25],[132,14,136,11],[132,15,136,12],[132,16,136,13],[132,17,136,14],[134,12,138,10],[134,16,138,14],[134,17,138,15,"onGestureEnded"],[134,31,138,29],[134,32,138,30],[134,33,138,31],[135,10,139,8],[135,11,139,9],[135,13,139,11,"timeout"],[135,20,139,18],[135,21,139,19],[136,8,140,6],[136,9,140,7],[136,15,140,13],[137,10,141,8],[137,14,141,12],[137,15,141,13,"sendEvent"],[137,24,141,22],[137,25,141,22,"Object"],[137,31,141,22],[137,32,141,22,"assign"],[137,38,141,22],[137,43,141,28,"ev"],[137,45,141,30],[138,12,142,10,"eventType"],[138,21,142,19],[138,23,142,21,"Hammer"],[138,40,142,27],[138,41,142,28,"INPUT_MOVE"],[138,51,142,38],[139,12,143,10,"isFinal"],[139,19,143,17],[139,21,143,19],[140,10,143,24],[140,12,144,9],[140,13,144,10],[141,8,145,6],[142,6,146,4],[143,4,147,2],[144,4,149,2,"updateGestureConfig"],[144,23,149,21,"updateGestureConfig"],[144,24,149,21,"_ref"],[144,28,149,21],[144,30,158,5],[145,6,158,5],[145,10,149,22],[146,10,150,4,"shouldActivateOnStart"],[146,31,150,25],[146,34,150,28],[146,39,150,33],[147,10,151,4,"disallowInterruption"],[147,30,151,24],[147,33,151,27],[147,38,151,32],[148,10,152,4,"shouldCancelWhenOutside"],[148,33,152,27],[148,36,152,30],[148,40,152,34],[149,10,153,4,"minDurationMs"],[149,23,153,17],[149,26,153,20,"Number"],[149,32,153,26],[149,33,153,27,"NaN"],[149,36,153,30],[150,10,154,4,"maxDist"],[150,17,154,11],[150,20,154,14,"Number"],[150,26,154,20],[150,27,154,21,"NaN"],[150,30,154,24],[151,10,155,4,"minPointers"],[151,21,155,15],[151,24,155,18],[151,25,155,19],[152,10,156,4,"maxPointers"],[152,21,156,15],[152,24,156,18],[153,8,158,2],[153,9,158,3],[153,12,158,3,"_ref"],[153,16,158,3],[154,8,157,7,"props"],[154,13,157,12],[154,20,157,12,"_objectWithoutPropertiesLoose2"],[154,50,157,12],[154,51,157,12,"default"],[154,58,157,12],[154,60,157,12,"_ref"],[154,64,157,12],[154,66,157,12,"_excluded"],[154,75,157,12],[155,6,159,4],[155,13,159,11],[155,18,159,16],[155,19,159,17,"updateGestureConfig"],[155,38,159,36],[155,39,159,36,"Object"],[155,45,159,36],[155,46,159,36,"assign"],[155,52,159,36],[156,8,160,6,"shouldActivateOnStart"],[156,29,160,27],[157,8,161,6,"disallowInterruption"],[157,28,161,26],[158,8,162,6,"shouldCancelWhenOutside"],[158,31,162,29],[159,8,163,6,"minDurationMs"],[159,21,163,19],[160,8,164,6,"maxDist"],[160,15,164,13],[161,8,165,6,"minPointers"],[161,19,165,17],[162,8,166,6,"maxPointers"],[163,6,166,17],[163,9,167,9,"props"],[163,14,167,14],[163,15,168,5],[163,16,168,6],[164,4,169,2],[165,2,171,0],[166,2,171,1],[166,6,171,1,"_default"],[166,14,171,1],[166,17,171,1,"exports"],[166,24,171,1],[166,25,171,1,"default"],[166,32,171,1],[166,35,173,15,"PressGestureHandler"],[166,54,173,34],[167,0,173,34],[167,3]],"functionMap":{"names":["_defineProperty","<global>","PressGestureHandler","constructor","get__name","get__minDurationMs","get__maxDist","get__NativeGestureClass","simulateCancelEvent","updateHasCustomActivationCriteria","getState","getConfig","getHammerConfig","onGestureActivated","shouldDelayTouchForEvent","onGestureStart","fireAfterInterval$argument_0","sendGestureStartedEvent","forceInvalidate","onRawEvent","updateGestureConfig"],"mappings":"AAA,iNC;ACQ;ECC;GDQ;EEE;GFE;EGE;GHG;EIE;GJE;EKE;GLE;EME;GNI;EOE;GPK;EQE;GRO;ESE;GTW;EUE;GVK;EWE;GXE;EYE;GZK;EaE;iDCI;KDG;GbC;EeE;GfO;EgBE;GhBK;EiBE;0BHgB;SGO;GjBQ;EkBE;GlBoB;CDE"}},"type":"js/module"}]}