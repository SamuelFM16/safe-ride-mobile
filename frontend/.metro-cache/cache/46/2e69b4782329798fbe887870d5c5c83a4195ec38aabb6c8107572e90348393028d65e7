{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":26,"index":26}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"]}},{"name":"./contexts","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":27},"end":{"line":2,"column":51,"index":78}}],"key":"/H7bS1aiFfINF7YJd7ieumGjoY8=","exportNames":["*"]}},{"name":"./hooks","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":79},"end":{"line":3,"column":37,"index":116}}],"key":"YId6Isk8G25zBnWTLIDKNjXQP1M=","exportNames":["*"]}},{"name":"./utils/func","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":117},"end":{"line":4,"column":36,"index":153}}],"key":"9IS8OZf4NlD2Mn+fxE/0BHU/BkA=","exportNames":["*"]}},{"name":"./utils/obj","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":154},"end":{"line":5,"column":45,"index":199}}],"key":"2+jluqDl7jOkBgjNdCXRIoXTnl8=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.DEFAULT_OPTIONS = exports.DEFAULT_DATA = void 0;\n  exports.useToast = useToast;\n  var _react = _interopRequireDefault(require(_dependencyMap[1], \"react\"));\n  var _contexts = require(_dependencyMap[2], \"./contexts\");\n  var _hooks = require(_dependencyMap[3], \"./hooks\");\n  var _func = require(_dependencyMap[4], \"./utils/func\");\n  var _obj = require(_dependencyMap[5], \"./utils/obj\");\n  const DEFAULT_DATA = exports.DEFAULT_DATA = {\n    text1: undefined,\n    text2: undefined\n  };\n  const DEFAULT_OPTIONS = exports.DEFAULT_OPTIONS = {\n    type: 'success',\n    text1Style: null,\n    text2Style: null,\n    position: 'top',\n    autoHide: true,\n    swipeable: true,\n    visibilityTime: 4000,\n    topOffset: 40,\n    bottomOffset: 40,\n    keyboardOffset: 10,\n    avoidKeyboard: true,\n    onShow: _func.noop,\n    onHide: _func.noop,\n    onPress: _func.noop,\n    props: {}\n  };\n  function useToast({\n    defaultOptions\n  }) {\n    const {\n      log\n    } = (0, _contexts.useLogger)();\n    const {\n      panning\n    } = (0, _contexts.useGesture)();\n    const [isVisible, setIsVisible] = _react.default.useState(false);\n    const [data, setData] = _react.default.useState(DEFAULT_DATA);\n    const initialOptions = (0, _obj.mergeIfDefined)(DEFAULT_OPTIONS, defaultOptions);\n    const [options, setOptions] = _react.default.useState(initialOptions);\n    const onAutoHide = _react.default.useCallback(() => {\n      if (panning.current) {\n        log('Auto hiding was blocked due to panning');\n      } else {\n        log('Auto hiding');\n        setIsVisible(false);\n        options.onHide();\n      }\n    }, [log, options, panning]);\n    const {\n      startTimer,\n      clearTimer\n    } = (0, _hooks.useTimeout)(onAutoHide, options.visibilityTime);\n    const hide = _react.default.useCallback(() => {\n      log('Hiding');\n      setIsVisible(false);\n      clearTimer();\n      options.onHide();\n    }, [clearTimer, log, options]);\n    const show = _react.default.useCallback(params => {\n      log(`Showing with params: ${JSON.stringify(params)}`);\n      const {\n        text1 = DEFAULT_DATA.text1,\n        text2 = DEFAULT_DATA.text2,\n        type = initialOptions.type,\n        text1Style = initialOptions.text1Style,\n        text2Style = initialOptions.text2Style,\n        position = initialOptions.position,\n        autoHide = initialOptions.autoHide,\n        visibilityTime = initialOptions.visibilityTime,\n        topOffset = initialOptions.topOffset,\n        bottomOffset = initialOptions.bottomOffset,\n        keyboardOffset = initialOptions.keyboardOffset,\n        avoidKeyboard = initialOptions.avoidKeyboard,\n        onShow = initialOptions.onShow,\n        onHide = initialOptions.onHide,\n        onPress = initialOptions.onPress,\n        swipeable = initialOptions.swipeable,\n        props = initialOptions.props\n      } = params;\n      setData({\n        text1,\n        text2\n      });\n      setOptions((0, _obj.mergeIfDefined)(initialOptions, {\n        type,\n        text1Style,\n        text2Style,\n        position,\n        autoHide,\n        visibilityTime,\n        topOffset,\n        bottomOffset,\n        keyboardOffset,\n        avoidKeyboard,\n        onShow,\n        onHide,\n        onPress,\n        swipeable,\n        props\n      }));\n      // TODO: validate input\n      // TODO: use a queue when Toast is already visible\n      setIsVisible(true);\n      onShow();\n    }, [initialOptions, log]);\n    _react.default.useEffect(() => {\n      const {\n        autoHide\n      } = options;\n      if (isVisible) {\n        if (autoHide) {\n          startTimer();\n        } else {\n          clearTimer();\n        }\n      }\n    }, [isVisible, options, startTimer, clearTimer]);\n    return {\n      isVisible,\n      data,\n      options,\n      show,\n      hide\n    };\n  }\n});","lineCount":133,"map":[[8,2,1,0],[8,6,1,0,"_react"],[8,12,1,0],[8,15,1,0,"_interopRequireDefault"],[8,37,1,0],[8,38,1,0,"require"],[8,45,1,0],[8,46,1,0,"_dependencyMap"],[8,60,1,0],[9,2,2,0],[9,6,2,0,"_contexts"],[9,15,2,0],[9,18,2,0,"require"],[9,25,2,0],[9,26,2,0,"_dependencyMap"],[9,40,2,0],[10,2,3,0],[10,6,3,0,"_hooks"],[10,12,3,0],[10,15,3,0,"require"],[10,22,3,0],[10,23,3,0,"_dependencyMap"],[10,37,3,0],[11,2,4,0],[11,6,4,0,"_func"],[11,11,4,0],[11,14,4,0,"require"],[11,21,4,0],[11,22,4,0,"_dependencyMap"],[11,36,4,0],[12,2,5,0],[12,6,5,0,"_obj"],[12,10,5,0],[12,13,5,0,"require"],[12,20,5,0],[12,21,5,0,"_dependencyMap"],[12,35,5,0],[13,2,6,7],[13,8,6,13,"DEFAULT_DATA"],[13,20,6,25],[13,23,6,25,"exports"],[13,30,6,25],[13,31,6,25,"DEFAULT_DATA"],[13,43,6,25],[13,46,6,28],[14,4,7,4,"text1"],[14,9,7,9],[14,11,7,11,"undefined"],[14,20,7,20],[15,4,8,4,"text2"],[15,9,8,9],[15,11,8,11,"undefined"],[16,2,9,0],[16,3,9,1],[17,2,10,7],[17,8,10,13,"DEFAULT_OPTIONS"],[17,23,10,28],[17,26,10,28,"exports"],[17,33,10,28],[17,34,10,28,"DEFAULT_OPTIONS"],[17,49,10,28],[17,52,10,31],[18,4,11,4,"type"],[18,8,11,8],[18,10,11,10],[18,19,11,19],[19,4,12,4,"text1Style"],[19,14,12,14],[19,16,12,16],[19,20,12,20],[20,4,13,4,"text2Style"],[20,14,13,14],[20,16,13,16],[20,20,13,20],[21,4,14,4,"position"],[21,12,14,12],[21,14,14,14],[21,19,14,19],[22,4,15,4,"autoHide"],[22,12,15,12],[22,14,15,14],[22,18,15,18],[23,4,16,4,"swipeable"],[23,13,16,13],[23,15,16,15],[23,19,16,19],[24,4,17,4,"visibilityTime"],[24,18,17,18],[24,20,17,20],[24,24,17,24],[25,4,18,4,"topOffset"],[25,13,18,13],[25,15,18,15],[25,17,18,17],[26,4,19,4,"bottomOffset"],[26,16,19,16],[26,18,19,18],[26,20,19,20],[27,4,20,4,"keyboardOffset"],[27,18,20,18],[27,20,20,20],[27,22,20,22],[28,4,21,4,"avoidKeyboard"],[28,17,21,17],[28,19,21,19],[28,23,21,23],[29,4,22,4,"onShow"],[29,10,22,10],[29,12,22,12,"noop"],[29,22,22,16],[30,4,23,4,"onHide"],[30,10,23,10],[30,12,23,12,"noop"],[30,22,23,16],[31,4,24,4,"onPress"],[31,11,24,11],[31,13,24,13,"noop"],[31,23,24,17],[32,4,25,4,"props"],[32,9,25,9],[32,11,25,11],[32,12,25,12],[33,2,26,0],[33,3,26,1],[34,2,27,7],[34,11,27,16,"useToast"],[34,19,27,24,"useToast"],[34,20,27,25],[35,4,27,27,"defaultOptions"],[36,2,27,42],[36,3,27,43],[36,5,27,45],[37,4,28,4],[37,10,28,10],[38,6,28,12,"log"],[39,4,28,16],[39,5,28,17],[39,8,28,20],[39,12,28,20,"useLogger"],[39,31,28,29],[39,33,28,30],[39,34,28,31],[40,4,29,4],[40,10,29,10],[41,6,29,12,"panning"],[42,4,29,20],[42,5,29,21],[42,8,29,24],[42,12,29,24,"useGesture"],[42,32,29,34],[42,34,29,35],[42,35,29,36],[43,4,30,4],[43,10,30,10],[43,11,30,11,"isVisible"],[43,20,30,20],[43,22,30,22,"setIsVisible"],[43,34,30,34],[43,35,30,35],[43,38,30,38,"React"],[43,52,30,43],[43,53,30,44,"useState"],[43,61,30,52],[43,62,30,53],[43,67,30,58],[43,68,30,59],[44,4,31,4],[44,10,31,10],[44,11,31,11,"data"],[44,15,31,15],[44,17,31,17,"setData"],[44,24,31,24],[44,25,31,25],[44,28,31,28,"React"],[44,42,31,33],[44,43,31,34,"useState"],[44,51,31,42],[44,52,31,43,"DEFAULT_DATA"],[44,64,31,55],[44,65,31,56],[45,4,32,4],[45,10,32,10,"initialOptions"],[45,24,32,24],[45,27,32,27],[45,31,32,27,"mergeIfDefined"],[45,50,32,41],[45,52,32,42,"DEFAULT_OPTIONS"],[45,67,32,57],[45,69,32,59,"defaultOptions"],[45,83,32,73],[45,84,32,74],[46,4,33,4],[46,10,33,10],[46,11,33,11,"options"],[46,18,33,18],[46,20,33,20,"setOptions"],[46,30,33,30],[46,31,33,31],[46,34,33,34,"React"],[46,48,33,39],[46,49,33,40,"useState"],[46,57,33,48],[46,58,33,49,"initialOptions"],[46,72,33,63],[46,73,33,64],[47,4,34,4],[47,10,34,10,"onAutoHide"],[47,20,34,20],[47,23,34,23,"React"],[47,37,34,28],[47,38,34,29,"useCallback"],[47,49,34,40],[47,50,34,41],[47,56,34,47],[48,6,35,8],[48,10,35,12,"panning"],[48,17,35,19],[48,18,35,20,"current"],[48,25,35,27],[48,27,35,29],[49,8,36,12,"log"],[49,11,36,15],[49,12,36,16],[49,52,36,56],[49,53,36,57],[50,6,37,8],[50,7,37,9],[50,13,38,13],[51,8,39,12,"log"],[51,11,39,15],[51,12,39,16],[51,25,39,29],[51,26,39,30],[52,8,40,12,"setIsVisible"],[52,20,40,24],[52,21,40,25],[52,26,40,30],[52,27,40,31],[53,8,41,12,"options"],[53,15,41,19],[53,16,41,20,"onHide"],[53,22,41,26],[53,23,41,27],[53,24,41,28],[54,6,42,8],[55,4,43,4],[55,5,43,5],[55,7,43,7],[55,8,43,8,"log"],[55,11,43,11],[55,13,43,13,"options"],[55,20,43,20],[55,22,43,22,"panning"],[55,29,43,29],[55,30,43,30],[55,31,43,31],[56,4,44,4],[56,10,44,10],[57,6,44,12,"startTimer"],[57,16,44,22],[58,6,44,24,"clearTimer"],[59,4,44,35],[59,5,44,36],[59,8,44,39],[59,12,44,39,"useTimeout"],[59,29,44,49],[59,31,44,50,"onAutoHide"],[59,41,44,60],[59,43,44,62,"options"],[59,50,44,69],[59,51,44,70,"visibilityTime"],[59,65,44,84],[59,66,44,85],[60,4,45,4],[60,10,45,10,"hide"],[60,14,45,14],[60,17,45,17,"React"],[60,31,45,22],[60,32,45,23,"useCallback"],[60,43,45,34],[60,44,45,35],[60,50,45,41],[61,6,46,8,"log"],[61,9,46,11],[61,10,46,12],[61,18,46,20],[61,19,46,21],[62,6,47,8,"setIsVisible"],[62,18,47,20],[62,19,47,21],[62,24,47,26],[62,25,47,27],[63,6,48,8,"clearTimer"],[63,16,48,18],[63,17,48,19],[63,18,48,20],[64,6,49,8,"options"],[64,13,49,15],[64,14,49,16,"onHide"],[64,20,49,22],[64,21,49,23],[64,22,49,24],[65,4,50,4],[65,5,50,5],[65,7,50,7],[65,8,50,8,"clearTimer"],[65,18,50,18],[65,20,50,20,"log"],[65,23,50,23],[65,25,50,25,"options"],[65,32,50,32],[65,33,50,33],[65,34,50,34],[66,4,51,4],[66,10,51,10,"show"],[66,14,51,14],[66,17,51,17,"React"],[66,31,51,22],[66,32,51,23,"useCallback"],[66,43,51,34],[66,44,51,36,"params"],[66,50,51,42],[66,54,51,47],[67,6,52,8,"log"],[67,9,52,11],[67,10,52,12],[67,34,52,36,"JSON"],[67,38,52,40],[67,39,52,41,"stringify"],[67,48,52,50],[67,49,52,51,"params"],[67,55,52,57],[67,56,52,58],[67,58,52,60],[67,59,52,61],[68,6,53,8],[68,12,53,14],[69,8,53,16,"text1"],[69,13,53,21],[69,16,53,24,"DEFAULT_DATA"],[69,28,53,36],[69,29,53,37,"text1"],[69,34,53,42],[70,8,53,44,"text2"],[70,13,53,49],[70,16,53,52,"DEFAULT_DATA"],[70,28,53,64],[70,29,53,65,"text2"],[70,34,53,70],[71,8,53,72,"type"],[71,12,53,76],[71,15,53,79,"initialOptions"],[71,29,53,93],[71,30,53,94,"type"],[71,34,53,98],[72,8,53,100,"text1Style"],[72,18,53,110],[72,21,53,113,"initialOptions"],[72,35,53,127],[72,36,53,128,"text1Style"],[72,46,53,138],[73,8,53,140,"text2Style"],[73,18,53,150],[73,21,53,153,"initialOptions"],[73,35,53,167],[73,36,53,168,"text2Style"],[73,46,53,178],[74,8,53,180,"position"],[74,16,53,188],[74,19,53,191,"initialOptions"],[74,33,53,205],[74,34,53,206,"position"],[74,42,53,214],[75,8,53,216,"autoHide"],[75,16,53,224],[75,19,53,227,"initialOptions"],[75,33,53,241],[75,34,53,242,"autoHide"],[75,42,53,250],[76,8,53,252,"visibilityTime"],[76,22,53,266],[76,25,53,269,"initialOptions"],[76,39,53,283],[76,40,53,284,"visibilityTime"],[76,54,53,298],[77,8,53,300,"topOffset"],[77,17,53,309],[77,20,53,312,"initialOptions"],[77,34,53,326],[77,35,53,327,"topOffset"],[77,44,53,336],[78,8,53,338,"bottomOffset"],[78,20,53,350],[78,23,53,353,"initialOptions"],[78,37,53,367],[78,38,53,368,"bottomOffset"],[78,50,53,380],[79,8,53,382,"keyboardOffset"],[79,22,53,396],[79,25,53,399,"initialOptions"],[79,39,53,413],[79,40,53,414,"keyboardOffset"],[79,54,53,428],[80,8,53,430,"avoidKeyboard"],[80,21,53,443],[80,24,53,446,"initialOptions"],[80,38,53,460],[80,39,53,461,"avoidKeyboard"],[80,52,53,474],[81,8,53,476,"onShow"],[81,14,53,482],[81,17,53,485,"initialOptions"],[81,31,53,499],[81,32,53,500,"onShow"],[81,38,53,506],[82,8,53,508,"onHide"],[82,14,53,514],[82,17,53,517,"initialOptions"],[82,31,53,531],[82,32,53,532,"onHide"],[82,38,53,538],[83,8,53,540,"onPress"],[83,15,53,547],[83,18,53,550,"initialOptions"],[83,32,53,564],[83,33,53,565,"onPress"],[83,40,53,572],[84,8,53,574,"swipeable"],[84,17,53,583],[84,20,53,586,"initialOptions"],[84,34,53,600],[84,35,53,601,"swipeable"],[84,44,53,610],[85,8,53,612,"props"],[85,13,53,617],[85,16,53,620,"initialOptions"],[85,30,53,634],[85,31,53,635,"props"],[86,6,53,641],[86,7,53,642],[86,10,53,645,"params"],[86,16,53,651],[87,6,54,8,"setData"],[87,13,54,15],[87,14,54,16],[88,8,55,12,"text1"],[88,13,55,17],[89,8,56,12,"text2"],[90,6,57,8],[90,7,57,9],[90,8,57,10],[91,6,58,8,"setOptions"],[91,16,58,18],[91,17,58,19],[91,21,58,19,"mergeIfDefined"],[91,40,58,33],[91,42,58,34,"initialOptions"],[91,56,58,48],[91,58,58,50],[92,8,59,12,"type"],[92,12,59,16],[93,8,60,12,"text1Style"],[93,18,60,22],[94,8,61,12,"text2Style"],[94,18,61,22],[95,8,62,12,"position"],[95,16,62,20],[96,8,63,12,"autoHide"],[96,16,63,20],[97,8,64,12,"visibilityTime"],[97,22,64,26],[98,8,65,12,"topOffset"],[98,17,65,21],[99,8,66,12,"bottomOffset"],[99,20,66,24],[100,8,67,12,"keyboardOffset"],[100,22,67,26],[101,8,68,12,"avoidKeyboard"],[101,21,68,25],[102,8,69,12,"onShow"],[102,14,69,18],[103,8,70,12,"onHide"],[103,14,70,18],[104,8,71,12,"onPress"],[104,15,71,19],[105,8,72,12,"swipeable"],[105,17,72,21],[106,8,73,12,"props"],[107,6,74,8],[107,7,74,9],[107,8,74,10],[107,9,74,11],[108,6,75,8],[109,6,76,8],[110,6,77,8,"setIsVisible"],[110,18,77,20],[110,19,77,21],[110,23,77,25],[110,24,77,26],[111,6,78,8,"onShow"],[111,12,78,14],[111,13,78,15],[111,14,78,16],[112,4,79,4],[112,5,79,5],[112,7,79,7],[112,8,79,8,"initialOptions"],[112,22,79,22],[112,24,79,24,"log"],[112,27,79,27],[112,28,79,28],[112,29,79,29],[113,4,80,4,"React"],[113,18,80,9],[113,19,80,10,"useEffect"],[113,28,80,19],[113,29,80,20],[113,35,80,26],[114,6,81,8],[114,12,81,14],[115,8,81,16,"autoHide"],[116,6,81,25],[116,7,81,26],[116,10,81,29,"options"],[116,17,81,36],[117,6,82,8],[117,10,82,12,"isVisible"],[117,19,82,21],[117,21,82,23],[118,8,83,12],[118,12,83,16,"autoHide"],[118,20,83,24],[118,22,83,26],[119,10,84,16,"startTimer"],[119,20,84,26],[119,21,84,27],[119,22,84,28],[120,8,85,12],[120,9,85,13],[120,15,86,17],[121,10,87,16,"clearTimer"],[121,20,87,26],[121,21,87,27],[121,22,87,28],[122,8,88,12],[123,6,89,8],[124,4,90,4],[124,5,90,5],[124,7,90,7],[124,8,90,8,"isVisible"],[124,17,90,17],[124,19,90,19,"options"],[124,26,90,26],[124,28,90,28,"startTimer"],[124,38,90,38],[124,40,90,40,"clearTimer"],[124,50,90,50],[124,51,90,51],[124,52,90,52],[125,4,91,4],[125,11,91,11],[126,6,92,8,"isVisible"],[126,15,92,17],[127,6,93,8,"data"],[127,10,93,12],[128,6,94,8,"options"],[128,13,94,15],[129,6,95,8,"show"],[129,10,95,12],[130,6,96,8,"hide"],[131,4,97,4],[131,5,97,5],[132,2,98,0],[133,0,98,1],[133,3]],"functionMap":{"names":["<global>","useToast","onAutoHide","hide","show","React.useEffect$argument_0"],"mappings":"AAA;OC0B;yCCO;KDS;mCEE;KFK;mCGC;KH4B;oBIC;KJU;CDQ"}},"type":"js/module"}]}